{"map":{"version":3,"sources":["app.js"],"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","eval","__webpack_exports__"],"mappings":"CAAS,SAAUA,GAET,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAJ,EAAQG,GAAUK,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBO,EAAIT,EAGxBE,EAAoBQ,EAAIT,EAGxBC,EAAoBS,EAAI,SAASP,EAASQ,EAAMC,GAC3CX,EAAoBY,EAAEV,EAASQ,IAClCG,OAAOC,eAAeZ,EAASQ,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEX,EAAoBiB,EAAI,SAASf,GACX,oBAAXgB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeZ,EAASgB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeZ,EAAS,aAAc,CAAEkB,OAAO,KAQvDpB,EAAoBqB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQpB,EAAoBoB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAzB,EAAoBiB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOpB,EAAoBS,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRxB,EAAoB4B,EAAI,SAASzB,GAChC,IAAIQ,EAASR,GAAUA,EAAOoB,WAC7B,WAAwB,OAAOpB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG9B,EAAoBiC,EAAI,OAIjBjC,EAAoBA,EAAoBkC,EAAI,GAnFpD,CAsFC,CAEJ,SAAU/B,OAAQD,QAASF,qBAEjCmC,KAAK,is+BAIC,SAAUhC,OAAQD,QAASF,qBAEjCmC,KAAK,+2jFAIC,SAAUhC,OAAQD,QAASF,qBAEjCmC,KAAK,uiwOAIC,SAAUhC,EAAQD,EAASF,GAEjCG,EAAOD,QAAUF,EAAoB,IAK/B,SAAUG,OAAQiC,oBAAqBpC,qBAE7C,aACAmC,KAAK,w2KAIC,SAAUhC,OAAQD,QAASF,qBAEjCmC,KAAK,2YAIC,SAAUhC,OAAQD,QAASF,qBAEjCmC,KAAK,07hMAIC,SAAUhC,OAAQD,QAASF,qBAEjC,aACAmC,KAAK"},"code":"!function(n){var e={};function t(l){if(e[l])return e[l].exports;var i=e[l]={i:l,l:!1,exports:{}};return n[l].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=n,t.c=e,t.d=function(n,e,l){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:l})},t.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&\"object\"==typeof n&&n&&n.__esModule)return n;var l=Object.create(null);if(t.r(l),Object.defineProperty(l,\"default\",{enumerable:!0,value:n}),2&e&&\"string\"!=typeof n)for(var i in n)t.d(l,i,function(e){return n[e]}.bind(null,i));return l},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,\"a\",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p=\"/js/\",t(t.s=3)}([function(module,exports,__webpack_require__){eval(\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\\n * @license MIT */\\n\\n;(function(root, factory) {\\n\\n  if (true) {\\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\\n\\t\\t\\t\\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_FACTORY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else {}\\n\\n})(this, function() {\\n  var NProgress = {};\\n\\n  NProgress.version = '0.2.0';\\n\\n  var Settings = NProgress.settings = {\\n    minimum: 0.08,\\n    easing: 'ease',\\n    positionUsing: '',\\n    speed: 200,\\n    trickle: true,\\n    trickleRate: 0.02,\\n    trickleSpeed: 800,\\n    showSpinner: true,\\n    barSelector: '[role=\\\"bar\\\"]',\\n    spinnerSelector: '[role=\\\"spinner\\\"]',\\n    parent: 'body',\\n    template: '<div class=\\\"bar\\\" role=\\\"bar\\\"><div class=\\\"peg\\\"></div></div><div class=\\\"spinner\\\" role=\\\"spinner\\\"><div class=\\\"spinner-icon\\\"></div></div>'\\n  };\\n\\n  /**\\n   * Updates configuration.\\n   *\\n   *     NProgress.configure({\\n   *       minimum: 0.1\\n   *     });\\n   */\\n  NProgress.configure = function(options) {\\n    var key, value;\\n    for (key in options) {\\n      value = options[key];\\n      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\\n    }\\n\\n    return this;\\n  };\\n\\n  /**\\n   * Last number.\\n   */\\n\\n  NProgress.status = null;\\n\\n  /**\\n   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\\n   *\\n   *     NProgress.set(0.4);\\n   *     NProgress.set(1.0);\\n   */\\n\\n  NProgress.set = function(n) {\\n    var started = NProgress.isStarted();\\n\\n    n = clamp(n, Settings.minimum, 1);\\n    NProgress.status = (n === 1 ? null : n);\\n\\n    var progress = NProgress.render(!started),\\n        bar      = progress.querySelector(Settings.barSelector),\\n        speed    = Settings.speed,\\n        ease     = Settings.easing;\\n\\n    progress.offsetWidth; /* Repaint */\\n\\n    queue(function(next) {\\n      // Set positionUsing if it hasn't already been set\\n      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\\n\\n      // Add transition\\n      css(bar, barPositionCSS(n, speed, ease));\\n\\n      if (n === 1) {\\n        // Fade out\\n        css(progress, { \\n          transition: 'none', \\n          opacity: 1 \\n        });\\n        progress.offsetWidth; /* Repaint */\\n\\n        setTimeout(function() {\\n          css(progress, { \\n            transition: 'all ' + speed + 'ms linear', \\n            opacity: 0 \\n          });\\n          setTimeout(function() {\\n            NProgress.remove();\\n            next();\\n          }, speed);\\n        }, speed);\\n      } else {\\n        setTimeout(next, speed);\\n      }\\n    });\\n\\n    return this;\\n  };\\n\\n  NProgress.isStarted = function() {\\n    return typeof NProgress.status === 'number';\\n  };\\n\\n  /**\\n   * Shows the progress bar.\\n   * This is the same as setting the status to 0%, except that it doesn't go backwards.\\n   *\\n   *     NProgress.start();\\n   *\\n   */\\n  NProgress.start = function() {\\n    if (!NProgress.status) NProgress.set(0);\\n\\n    var work = function() {\\n      setTimeout(function() {\\n        if (!NProgress.status) return;\\n        NProgress.trickle();\\n        work();\\n      }, Settings.trickleSpeed);\\n    };\\n\\n    if (Settings.trickle) work();\\n\\n    return this;\\n  };\\n\\n  /**\\n   * Hides the progress bar.\\n   * This is the *sort of* the same as setting the status to 100%, with the\\n   * difference being `done()` makes some placebo effect of some realistic motion.\\n   *\\n   *     NProgress.done();\\n   *\\n   * If `true` is passed, it will show the progress bar even if its hidden.\\n   *\\n   *     NProgress.done(true);\\n   */\\n\\n  NProgress.done = function(force) {\\n    if (!force && !NProgress.status) return this;\\n\\n    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\\n  };\\n\\n  /**\\n   * Increments by a random amount.\\n   */\\n\\n  NProgress.inc = function(amount) {\\n    var n = NProgress.status;\\n\\n    if (!n) {\\n      return NProgress.start();\\n    } else {\\n      if (typeof amount !== 'number') {\\n        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\\n      }\\n\\n      n = clamp(n + amount, 0, 0.994);\\n      return NProgress.set(n);\\n    }\\n  };\\n\\n  NProgress.trickle = function() {\\n    return NProgress.inc(Math.random() * Settings.trickleRate);\\n  };\\n\\n  /**\\n   * Waits for all supplied jQuery promises and\\n   * increases the progress as the promises resolve.\\n   *\\n   * @param $promise jQUery Promise\\n   */\\n  (function() {\\n    var initial = 0, current = 0;\\n\\n    NProgress.promise = function($promise) {\\n      if (!$promise || $promise.state() === \\\"resolved\\\") {\\n        return this;\\n      }\\n\\n      if (current === 0) {\\n        NProgress.start();\\n      }\\n\\n      initial++;\\n      current++;\\n\\n      $promise.always(function() {\\n        current--;\\n        if (current === 0) {\\n            initial = 0;\\n            NProgress.done();\\n        } else {\\n            NProgress.set((initial - current) / initial);\\n        }\\n      });\\n\\n      return this;\\n    };\\n\\n  })();\\n\\n  /**\\n   * (Internal) renders the progress bar markup based on the `template`\\n   * setting.\\n   */\\n\\n  NProgress.render = function(fromStart) {\\n    if (NProgress.isRendered()) return document.getElementById('nprogress');\\n\\n    addClass(document.documentElement, 'nprogress-busy');\\n    \\n    var progress = document.createElement('div');\\n    progress.id = 'nprogress';\\n    progress.innerHTML = Settings.template;\\n\\n    var bar      = progress.querySelector(Settings.barSelector),\\n        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\\n        parent   = document.querySelector(Settings.parent),\\n        spinner;\\n    \\n    css(bar, {\\n      transition: 'all 0 linear',\\n      transform: 'translate3d(' + perc + '%,0,0)'\\n    });\\n\\n    if (!Settings.showSpinner) {\\n      spinner = progress.querySelector(Settings.spinnerSelector);\\n      spinner && removeElement(spinner);\\n    }\\n\\n    if (parent != document.body) {\\n      addClass(parent, 'nprogress-custom-parent');\\n    }\\n\\n    parent.appendChild(progress);\\n    return progress;\\n  };\\n\\n  /**\\n   * Removes the element. Opposite of render().\\n   */\\n\\n  NProgress.remove = function() {\\n    removeClass(document.documentElement, 'nprogress-busy');\\n    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\\n    var progress = document.getElementById('nprogress');\\n    progress && removeElement(progress);\\n  };\\n\\n  /**\\n   * Checks if the progress bar is rendered.\\n   */\\n\\n  NProgress.isRendered = function() {\\n    return !!document.getElementById('nprogress');\\n  };\\n\\n  /**\\n   * Determine which positioning CSS rule to use.\\n   */\\n\\n  NProgress.getPositioningCSS = function() {\\n    // Sniff on document.body.style\\n    var bodyStyle = document.body.style;\\n\\n    // Sniff prefixes\\n    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\\n                       ('MozTransform' in bodyStyle) ? 'Moz' :\\n                       ('msTransform' in bodyStyle) ? 'ms' :\\n                       ('OTransform' in bodyStyle) ? 'O' : '';\\n\\n    if (vendorPrefix + 'Perspective' in bodyStyle) {\\n      // Modern browsers with 3D support, e.g. Webkit, IE10\\n      return 'translate3d';\\n    } else if (vendorPrefix + 'Transform' in bodyStyle) {\\n      // Browsers without 3D support, e.g. IE9\\n      return 'translate';\\n    } else {\\n      // Browsers without translate() support, e.g. IE7-8\\n      return 'margin';\\n    }\\n  };\\n\\n  /**\\n   * Helpers\\n   */\\n\\n  function clamp(n, min, max) {\\n    if (n < min) return min;\\n    if (n > max) return max;\\n    return n;\\n  }\\n\\n  /**\\n   * (Internal) converts a percentage (`0..1`) to a bar translateX\\n   * percentage (`-100%..0%`).\\n   */\\n\\n  function toBarPerc(n) {\\n    return (-1 + n) * 100;\\n  }\\n\\n\\n  /**\\n   * (Internal) returns the correct CSS for changing the bar's\\n   * position given an n percentage, and speed and ease from Settings\\n   */\\n\\n  function barPositionCSS(n, speed, ease) {\\n    var barCSS;\\n\\n    if (Settings.positionUsing === 'translate3d') {\\n      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\\n    } else if (Settings.positionUsing === 'translate') {\\n      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\\n    } else {\\n      barCSS = { 'margin-left': toBarPerc(n)+'%' };\\n    }\\n\\n    barCSS.transition = 'all '+speed+'ms '+ease;\\n\\n    return barCSS;\\n  }\\n\\n  /**\\n   * (Internal) Queues a function to be executed.\\n   */\\n\\n  var queue = (function() {\\n    var pending = [];\\n    \\n    function next() {\\n      var fn = pending.shift();\\n      if (fn) {\\n        fn(next);\\n      }\\n    }\\n\\n    return function(fn) {\\n      pending.push(fn);\\n      if (pending.length == 1) next();\\n    };\\n  })();\\n\\n  /**\\n   * (Internal) Applies css properties to an element, similar to the jQuery \\n   * css method.\\n   *\\n   * While this helper does assist with vendor prefixed property names, it \\n   * does not perform any manipulation of values prior to setting styles.\\n   */\\n\\n  var css = (function() {\\n    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\\n        cssProps    = {};\\n\\n    function camelCase(string) {\\n      return string.replace(/^-ms-/, 'ms-').replace(/-([\\\\da-z])/gi, function(match, letter) {\\n        return letter.toUpperCase();\\n      });\\n    }\\n\\n    function getVendorProp(name) {\\n      var style = document.body.style;\\n      if (name in style) return name;\\n\\n      var i = cssPrefixes.length,\\n          capName = name.charAt(0).toUpperCase() + name.slice(1),\\n          vendorName;\\n      while (i--) {\\n        vendorName = cssPrefixes[i] + capName;\\n        if (vendorName in style) return vendorName;\\n      }\\n\\n      return name;\\n    }\\n\\n    function getStyleProp(name) {\\n      name = camelCase(name);\\n      return cssProps[name] || (cssProps[name] = getVendorProp(name));\\n    }\\n\\n    function applyCss(element, prop, value) {\\n      prop = getStyleProp(prop);\\n      element.style[prop] = value;\\n    }\\n\\n    return function(element, properties) {\\n      var args = arguments,\\n          prop, \\n          value;\\n\\n      if (args.length == 2) {\\n        for (prop in properties) {\\n          value = properties[prop];\\n          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\\n        }\\n      } else {\\n        applyCss(element, args[1], args[2]);\\n      }\\n    }\\n  })();\\n\\n  /**\\n   * (Internal) Determines if an element or space separated list of class names contains a class name.\\n   */\\n\\n  function hasClass(element, name) {\\n    var list = typeof element == 'string' ? element : classList(element);\\n    return list.indexOf(' ' + name + ' ') >= 0;\\n  }\\n\\n  /**\\n   * (Internal) Adds a class to an element.\\n   */\\n\\n  function addClass(element, name) {\\n    var oldList = classList(element),\\n        newList = oldList + name;\\n\\n    if (hasClass(oldList, name)) return; \\n\\n    // Trim the opening space.\\n    element.className = newList.substring(1);\\n  }\\n\\n  /**\\n   * (Internal) Removes a class from an element.\\n   */\\n\\n  function removeClass(element, name) {\\n    var oldList = classList(element),\\n        newList;\\n\\n    if (!hasClass(element, name)) return;\\n\\n    // Replace the class name.\\n    newList = oldList.replace(' ' + name + ' ', ' ');\\n\\n    // Trim the opening and closing spaces.\\n    element.className = newList.substring(1, newList.length - 1);\\n  }\\n\\n  /**\\n   * (Internal) Gets a space separated list of the class names on the element. \\n   * The list is wrapped with a single space on each end to facilitate finding \\n   * matches within the list.\\n   */\\n\\n  function classList(element) {\\n    return (' ' + (element.className || '') + ' ').replace(/\\\\s+/gi, ' ');\\n  }\\n\\n  /**\\n   * (Internal) Removes an element from the DOM.\\n   */\\n\\n  function removeElement(element) {\\n    element && element.parentNode && element.parentNode.removeChild(element);\\n  }\\n\\n  return NProgress;\\n});\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///0\\n\")},function(module,exports,__webpack_require__){eval('!function (e, t) {\\n   true ? module.exports = t() : undefined;\\n}(this, function () {\\n  return function (e) {\\n    var t = {};\\n\\n    function n(i) {\\n      if (t[i]) return t[i].exports;\\n      var o = t[i] = {\\n        i: i,\\n        l: !1,\\n        exports: {}\\n      };\\n      return e[i].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\\n    }\\n\\n    return n.m = e, n.c = t, n.d = function (e, t, i) {\\n      n.o(e, t) || Object.defineProperty(e, t, {\\n        enumerable: !0,\\n        get: i\\n      });\\n    }, n.r = function (e) {\\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\\n        value: \"Module\"\\n      }), Object.defineProperty(e, \"__esModule\", {\\n        value: !0\\n      });\\n    }, n.t = function (e, t) {\\n      if (1 & t && (e = n(e)), 8 & t) return e;\\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\\n      var i = Object.create(null);\\n      if (n.r(i), Object.defineProperty(i, \"default\", {\\n        enumerable: !0,\\n        value: e\\n      }), 2 & t && \"string\" != typeof e) for (var o in e) n.d(i, o, function (t) {\\n        return e[t];\\n      }.bind(null, o));\\n      return i;\\n    }, n.n = function (e) {\\n      var t = e && e.__esModule ? function () {\\n        return e.default;\\n      } : function () {\\n        return e;\\n      };\\n      return n.d(t, \"a\", t), t;\\n    }, n.o = function (e, t) {\\n      return Object.prototype.hasOwnProperty.call(e, t);\\n    }, n.p = \"\", n(n.s = 0);\\n  }([function (e, t, n) {\\n    (function (t) {\\n      e.exports = t.Phoenix = n(2);\\n    }).call(this, n(1));\\n  }, function (e, t) {\\n    var n;\\n\\n    n = function () {\\n      return this;\\n    }();\\n\\n    try {\\n      n = n || new Function(\"return this\")();\\n    } catch (e) {\\n      \"object\" == typeof window && (n = window);\\n    }\\n\\n    e.exports = n;\\n  }, function (e, t, n) {\\n    \"use strict\";\\n\\n    function i(e) {\\n      return function (e) {\\n        if (Array.isArray(e)) return a(e);\\n      }(e) || function (e) {\\n        if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\\n      }(e) || s(e) || function () {\\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\\n      }();\\n    }\\n\\n    function o(e) {\\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\\n        return typeof e;\\n      } : function (e) {\\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\\n      })(e);\\n    }\\n\\n    function r(e, t) {\\n      return function (e) {\\n        if (Array.isArray(e)) return e;\\n      }(e) || function (e, t) {\\n        if (\"undefined\" == typeof Symbol || !(Symbol.iterator in Object(e))) return;\\n        var n = [],\\n            i = !0,\\n            o = !1,\\n            r = void 0;\\n\\n        try {\\n          for (var s, a = e[Symbol.iterator](); !(i = (s = a.next()).done) && (n.push(s.value), !t || n.length !== t); i = !0);\\n        } catch (e) {\\n          o = !0, r = e;\\n        } finally {\\n          try {\\n            i || null == a.return || a.return();\\n          } finally {\\n            if (o) throw r;\\n          }\\n        }\\n\\n        return n;\\n      }(e, t) || s(e, t) || function () {\\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\\n      }();\\n    }\\n\\n    function s(e, t) {\\n      if (e) {\\n        if (\"string\" == typeof e) return a(e, t);\\n        var n = Object.prototype.toString.call(e).slice(8, -1);\\n        return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(n) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? a(e, t) : void 0;\\n      }\\n    }\\n\\n    function a(e, t) {\\n      (null == t || t > e.length) && (t = e.length);\\n\\n      for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];\\n\\n      return i;\\n    }\\n\\n    function c(e, t) {\\n      if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\\n    }\\n\\n    function u(e, t) {\\n      for (var n = 0; n < t.length; n++) {\\n        var i = t[n];\\n        i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\\n      }\\n    }\\n\\n    function h(e, t, n) {\\n      return t && u(e.prototype, t), n && u(e, n), e;\\n    }\\n\\n    n.r(t), n.d(t, \"Channel\", function () {\\n      return _;\\n    }), n.d(t, \"Serializer\", function () {\\n      return H;\\n    }), n.d(t, \"Socket\", function () {\\n      return U;\\n    }), n.d(t, \"LongPoll\", function () {\\n      return D;\\n    }), n.d(t, \"Ajax\", function () {\\n      return M;\\n    }), n.d(t, \"Presence\", function () {\\n      return N;\\n    });\\n\\n    var l = \"undefined\" != typeof self ? self : null,\\n        f = \"undefined\" != typeof window ? window : null,\\n        d = l || f || void 0,\\n        p = 0,\\n        v = 1,\\n        y = 2,\\n        m = 3,\\n        g = \"closed\",\\n        k = \"errored\",\\n        b = \"joined\",\\n        j = \"joining\",\\n        C = \"leaving\",\\n        E = \"phx_close\",\\n        R = \"phx_error\",\\n        T = \"phx_join\",\\n        S = \"phx_reply\",\\n        w = \"phx_leave\",\\n        A = [E, R, T, S, w],\\n        L = \"longpoll\",\\n        x = \"websocket\",\\n        O = function (e) {\\n      if (\"function\" == typeof e) return e;\\n      return function () {\\n        return e;\\n      };\\n    },\\n        P = function () {\\n      function e(t, n, i, o) {\\n        c(this, e), this.channel = t, this.event = n, this.payload = i || function () {\\n          return {};\\n        }, this.receivedResp = null, this.timeout = o, this.timeoutTimer = null, this.recHooks = [], this.sent = !1;\\n      }\\n\\n      return h(e, [{\\n        key: \"resend\",\\n        value: function (e) {\\n          this.timeout = e, this.reset(), this.send();\\n        }\\n      }, {\\n        key: \"send\",\\n        value: function () {\\n          this.hasReceived(\"timeout\") || (this.startTimeout(), this.sent = !0, this.channel.socket.push({\\n            topic: this.channel.topic,\\n            event: this.event,\\n            payload: this.payload(),\\n            ref: this.ref,\\n            join_ref: this.channel.joinRef()\\n          }));\\n        }\\n      }, {\\n        key: \"receive\",\\n        value: function (e, t) {\\n          return this.hasReceived(e) && t(this.receivedResp.response), this.recHooks.push({\\n            status: e,\\n            callback: t\\n          }), this;\\n        }\\n      }, {\\n        key: \"reset\",\\n        value: function () {\\n          this.cancelRefEvent(), this.ref = null, this.refEvent = null, this.receivedResp = null, this.sent = !1;\\n        }\\n      }, {\\n        key: \"matchReceive\",\\n        value: function (e) {\\n          var t = e.status,\\n              n = e.response;\\n          e.ref;\\n          this.recHooks.filter(function (e) {\\n            return e.status === t;\\n          }).forEach(function (e) {\\n            return e.callback(n);\\n          });\\n        }\\n      }, {\\n        key: \"cancelRefEvent\",\\n        value: function () {\\n          this.refEvent && this.channel.off(this.refEvent);\\n        }\\n      }, {\\n        key: \"cancelTimeout\",\\n        value: function () {\\n          clearTimeout(this.timeoutTimer), this.timeoutTimer = null;\\n        }\\n      }, {\\n        key: \"startTimeout\",\\n        value: function () {\\n          var e = this;\\n          this.timeoutTimer && this.cancelTimeout(), this.ref = this.channel.socket.makeRef(), this.refEvent = this.channel.replyEventName(this.ref), this.channel.on(this.refEvent, function (t) {\\n            e.cancelRefEvent(), e.cancelTimeout(), e.receivedResp = t, e.matchReceive(t);\\n          }), this.timeoutTimer = setTimeout(function () {\\n            e.trigger(\"timeout\", {});\\n          }, this.timeout);\\n        }\\n      }, {\\n        key: \"hasReceived\",\\n        value: function (e) {\\n          return this.receivedResp && this.receivedResp.status === e;\\n        }\\n      }, {\\n        key: \"trigger\",\\n        value: function (e, t) {\\n          this.channel.trigger(this.refEvent, {\\n            status: e,\\n            response: t\\n          });\\n        }\\n      }]), e;\\n    }(),\\n        _ = function () {\\n      function e(t, n, i) {\\n        var o = this;\\n        c(this, e), this.state = g, this.topic = t, this.params = O(n || {}), this.socket = i, this.bindings = [], this.bindingRef = 0, this.timeout = this.socket.timeout, this.joinedOnce = !1, this.joinPush = new P(this, T, this.params, this.timeout), this.pushBuffer = [], this.stateChangeRefs = [], this.rejoinTimer = new J(function () {\\n          o.socket.isConnected() && o.rejoin();\\n        }, this.socket.rejoinAfterMs), this.stateChangeRefs.push(this.socket.onError(function () {\\n          return o.rejoinTimer.reset();\\n        })), this.stateChangeRefs.push(this.socket.onOpen(function () {\\n          o.rejoinTimer.reset(), o.isErrored() && o.rejoin();\\n        })), this.joinPush.receive(\"ok\", function () {\\n          o.state = b, o.rejoinTimer.reset(), o.pushBuffer.forEach(function (e) {\\n            return e.send();\\n          }), o.pushBuffer = [];\\n        }), this.joinPush.receive(\"error\", function () {\\n          o.state = k, o.socket.isConnected() && o.rejoinTimer.scheduleTimeout();\\n        }), this.onClose(function () {\\n          o.rejoinTimer.reset(), o.socket.hasLogger() && o.socket.log(\"channel\", \"close \".concat(o.topic, \" \").concat(o.joinRef())), o.state = g, o.socket.remove(o);\\n        }), this.onError(function (e) {\\n          o.socket.hasLogger() && o.socket.log(\"channel\", \"error \".concat(o.topic), e), o.isJoining() && o.joinPush.reset(), o.state = k, o.socket.isConnected() && o.rejoinTimer.scheduleTimeout();\\n        }), this.joinPush.receive(\"timeout\", function () {\\n          o.socket.hasLogger() && o.socket.log(\"channel\", \"timeout \".concat(o.topic, \" (\").concat(o.joinRef(), \")\"), o.joinPush.timeout), new P(o, w, O({}), o.timeout).send(), o.state = k, o.joinPush.reset(), o.socket.isConnected() && o.rejoinTimer.scheduleTimeout();\\n        }), this.on(S, function (e, t) {\\n          o.trigger(o.replyEventName(t), e);\\n        });\\n      }\\n\\n      return h(e, [{\\n        key: \"join\",\\n        value: function () {\\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.timeout;\\n          if (this.joinedOnce) throw new Error(\"tried to join multiple times. \\'join\\' can only be called a single time per channel instance\");\\n          return this.timeout = e, this.joinedOnce = !0, this.rejoin(), this.joinPush;\\n        }\\n      }, {\\n        key: \"onClose\",\\n        value: function (e) {\\n          this.on(E, e);\\n        }\\n      }, {\\n        key: \"onError\",\\n        value: function (e) {\\n          return this.on(R, function (t) {\\n            return e(t);\\n          });\\n        }\\n      }, {\\n        key: \"on\",\\n        value: function (e, t) {\\n          var n = this.bindingRef++;\\n          return this.bindings.push({\\n            event: e,\\n            ref: n,\\n            callback: t\\n          }), n;\\n        }\\n      }, {\\n        key: \"off\",\\n        value: function (e, t) {\\n          this.bindings = this.bindings.filter(function (n) {\\n            return !(n.event === e && (void 0 === t || t === n.ref));\\n          });\\n        }\\n      }, {\\n        key: \"canPush\",\\n        value: function () {\\n          return this.socket.isConnected() && this.isJoined();\\n        }\\n      }, {\\n        key: \"push\",\\n        value: function (e, t) {\\n          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.timeout;\\n          if (t = t || {}, !this.joinedOnce) throw new Error(\"tried to push \\'\".concat(e, \"\\' to \\'\").concat(this.topic, \"\\' before joining. Use channel.join() before pushing events\"));\\n          var i = new P(this, e, function () {\\n            return t;\\n          }, n);\\n          return this.canPush() ? i.send() : (i.startTimeout(), this.pushBuffer.push(i)), i;\\n        }\\n      }, {\\n        key: \"leave\",\\n        value: function () {\\n          var e = this,\\n              t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.timeout;\\n          this.rejoinTimer.reset(), this.joinPush.cancelTimeout(), this.state = C;\\n\\n          var n = function () {\\n            e.socket.hasLogger() && e.socket.log(\"channel\", \"leave \".concat(e.topic)), e.trigger(E, \"leave\");\\n          },\\n              i = new P(this, w, O({}), t);\\n\\n          return i.receive(\"ok\", function () {\\n            return n();\\n          }).receive(\"timeout\", function () {\\n            return n();\\n          }), i.send(), this.canPush() || i.trigger(\"ok\", {}), i;\\n        }\\n      }, {\\n        key: \"onMessage\",\\n        value: function (e, t, n) {\\n          return t;\\n        }\\n      }, {\\n        key: \"isLifecycleEvent\",\\n        value: function (e) {\\n          return A.indexOf(e) >= 0;\\n        }\\n      }, {\\n        key: \"isMember\",\\n        value: function (e, t, n, i) {\\n          return this.topic === e && (!i || i === this.joinRef() || !this.isLifecycleEvent(t) || (this.socket.hasLogger() && this.socket.log(\"channel\", \"dropping outdated message\", {\\n            topic: e,\\n            event: t,\\n            payload: n,\\n            joinRef: i\\n          }), !1));\\n        }\\n      }, {\\n        key: \"joinRef\",\\n        value: function () {\\n          return this.joinPush.ref;\\n        }\\n      }, {\\n        key: \"rejoin\",\\n        value: function () {\\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.timeout;\\n          this.isLeaving() || (this.socket.leaveOpenTopic(this.topic), this.state = j, this.joinPush.resend(e));\\n        }\\n      }, {\\n        key: \"trigger\",\\n        value: function (e, t, n, i) {\\n          var o = this.onMessage(e, t, n, i);\\n          if (t && !o) throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\");\\n\\n          for (var r = this.bindings.filter(function (t) {\\n            return t.event === e;\\n          }), s = 0; s < r.length; s++) {\\n            r[s].callback(o, n, i || this.joinRef());\\n          }\\n        }\\n      }, {\\n        key: \"replyEventName\",\\n        value: function (e) {\\n          return \"chan_reply_\".concat(e);\\n        }\\n      }, {\\n        key: \"isClosed\",\\n        value: function () {\\n          return this.state === g;\\n        }\\n      }, {\\n        key: \"isErrored\",\\n        value: function () {\\n          return this.state === k;\\n        }\\n      }, {\\n        key: \"isJoined\",\\n        value: function () {\\n          return this.state === b;\\n        }\\n      }, {\\n        key: \"isJoining\",\\n        value: function () {\\n          return this.state === j;\\n        }\\n      }, {\\n        key: \"isLeaving\",\\n        value: function () {\\n          return this.state === C;\\n        }\\n      }]), e;\\n    }(),\\n        H = {\\n      HEADER_LENGTH: 1,\\n      META_LENGTH: 4,\\n      KINDS: {\\n        push: 0,\\n        reply: 1,\\n        broadcast: 2\\n      },\\n      encode: function (e, t) {\\n        if (e.payload.constructor === ArrayBuffer) return t(this.binaryEncode(e));\\n        var n = [e.join_ref, e.ref, e.topic, e.event, e.payload];\\n        return t(JSON.stringify(n));\\n      },\\n      decode: function (e, t) {\\n        if (e.constructor === ArrayBuffer) return t(this.binaryDecode(e));\\n        var n = r(JSON.parse(e), 5);\\n        return t({\\n          join_ref: n[0],\\n          ref: n[1],\\n          topic: n[2],\\n          event: n[3],\\n          payload: n[4]\\n        });\\n      },\\n      binaryEncode: function (e) {\\n        var t = e.join_ref,\\n            n = e.ref,\\n            i = e.event,\\n            o = e.topic,\\n            r = e.payload,\\n            s = this.META_LENGTH + t.length + n.length + o.length + i.length,\\n            a = new ArrayBuffer(this.HEADER_LENGTH + s),\\n            c = new DataView(a),\\n            u = 0;\\n        c.setUint8(u++, this.KINDS.push), c.setUint8(u++, t.length), c.setUint8(u++, n.length), c.setUint8(u++, o.length), c.setUint8(u++, i.length), Array.from(t, function (e) {\\n          return c.setUint8(u++, e.charCodeAt(0));\\n        }), Array.from(n, function (e) {\\n          return c.setUint8(u++, e.charCodeAt(0));\\n        }), Array.from(o, function (e) {\\n          return c.setUint8(u++, e.charCodeAt(0));\\n        }), Array.from(i, function (e) {\\n          return c.setUint8(u++, e.charCodeAt(0));\\n        });\\n        var h = new Uint8Array(a.byteLength + r.byteLength);\\n        return h.set(new Uint8Array(a), 0), h.set(new Uint8Array(r), a.byteLength), h.buffer;\\n      },\\n      binaryDecode: function (e) {\\n        var t = new DataView(e),\\n            n = t.getUint8(0),\\n            i = new TextDecoder();\\n\\n        switch (n) {\\n          case this.KINDS.push:\\n            return this.decodePush(e, t, i);\\n\\n          case this.KINDS.reply:\\n            return this.decodeReply(e, t, i);\\n\\n          case this.KINDS.broadcast:\\n            return this.decodeBroadcast(e, t, i);\\n        }\\n      },\\n      decodePush: function (e, t, n) {\\n        var i = t.getUint8(1),\\n            o = t.getUint8(2),\\n            r = t.getUint8(3),\\n            s = this.HEADER_LENGTH + this.META_LENGTH - 1,\\n            a = n.decode(e.slice(s, s + i));\\n        s += i;\\n        var c = n.decode(e.slice(s, s + o));\\n        s += o;\\n        var u = n.decode(e.slice(s, s + r));\\n        return s += r, {\\n          join_ref: a,\\n          ref: null,\\n          topic: c,\\n          event: u,\\n          payload: e.slice(s, e.byteLength)\\n        };\\n      },\\n      decodeReply: function (e, t, n) {\\n        var i = t.getUint8(1),\\n            o = t.getUint8(2),\\n            r = t.getUint8(3),\\n            s = t.getUint8(4),\\n            a = this.HEADER_LENGTH + this.META_LENGTH,\\n            c = n.decode(e.slice(a, a + i));\\n        a += i;\\n        var u = n.decode(e.slice(a, a + o));\\n        a += o;\\n        var h = n.decode(e.slice(a, a + r));\\n        a += r;\\n        var l = n.decode(e.slice(a, a + s));\\n        a += s;\\n        var f = e.slice(a, e.byteLength);\\n        return {\\n          join_ref: c,\\n          ref: u,\\n          topic: h,\\n          event: S,\\n          payload: {\\n            status: l,\\n            response: f\\n          }\\n        };\\n      },\\n      decodeBroadcast: function (e, t, n) {\\n        var i = t.getUint8(1),\\n            o = t.getUint8(2),\\n            r = this.HEADER_LENGTH + 2,\\n            s = n.decode(e.slice(r, r + i));\\n        r += i;\\n        var a = n.decode(e.slice(r, r + o));\\n        return r += o, {\\n          join_ref: null,\\n          ref: null,\\n          topic: s,\\n          event: a,\\n          payload: e.slice(r, e.byteLength)\\n        };\\n      }\\n    },\\n        U = function () {\\n      function e(t) {\\n        var n = this,\\n            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\\n        c(this, e), this.stateChangeCallbacks = {\\n          open: [],\\n          close: [],\\n          error: [],\\n          message: []\\n        }, this.channels = [], this.sendBuffer = [], this.ref = 0, this.timeout = i.timeout || 1e4, this.transport = i.transport || d.WebSocket || D, this.defaultEncoder = H.encode.bind(H), this.defaultDecoder = H.decode.bind(H), this.closeWasClean = !1, this.unloaded = !1, this.binaryType = i.binaryType || \"arraybuffer\", this.transport !== D ? (this.encode = i.encode || this.defaultEncoder, this.decode = i.decode || this.defaultDecoder) : (this.encode = this.defaultEncoder, this.decode = this.defaultDecoder), f && f.addEventListener && f.addEventListener(\"unload\", function (e) {\\n          n.conn && (n.unloaded = !0, n.abnormalClose(\"unloaded\"));\\n        }), this.heartbeatIntervalMs = i.heartbeatIntervalMs || 3e4, this.rejoinAfterMs = function (e) {\\n          return i.rejoinAfterMs ? i.rejoinAfterMs(e) : [1e3, 2e3, 5e3][e - 1] || 1e4;\\n        }, this.reconnectAfterMs = function (e) {\\n          return n.unloaded ? 100 : i.reconnectAfterMs ? i.reconnectAfterMs(e) : [10, 50, 100, 150, 200, 250, 500, 1e3, 2e3][e - 1] || 5e3;\\n        }, this.logger = i.logger || null, this.longpollerTimeout = i.longpollerTimeout || 2e4, this.params = O(i.params || {}), this.endPoint = \"\".concat(t, \"/\").concat(x), this.vsn = i.vsn || \"2.0.0\", this.heartbeatTimer = null, this.pendingHeartbeatRef = null, this.reconnectTimer = new J(function () {\\n          n.teardown(function () {\\n            return n.connect();\\n          });\\n        }, this.reconnectAfterMs);\\n      }\\n\\n      return h(e, [{\\n        key: \"protocol\",\\n        value: function () {\\n          return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\\n        }\\n      }, {\\n        key: \"endPointURL\",\\n        value: function () {\\n          var e = M.appendParams(M.appendParams(this.endPoint, this.params()), {\\n            vsn: this.vsn\\n          });\\n          return \"/\" !== e.charAt(0) ? e : \"/\" === e.charAt(1) ? \"\".concat(this.protocol(), \":\").concat(e) : \"\".concat(this.protocol(), \"://\").concat(location.host).concat(e);\\n        }\\n      }, {\\n        key: \"disconnect\",\\n        value: function (e, t, n) {\\n          this.closeWasClean = !0, this.reconnectTimer.reset(), this.teardown(e, t, n);\\n        }\\n      }, {\\n        key: \"connect\",\\n        value: function (e) {\\n          var t = this;\\n          e && (console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\"), this.params = O(e)), this.conn || (this.closeWasClean = !1, this.conn = new this.transport(this.endPointURL()), this.conn.binaryType = this.binaryType, this.conn.timeout = this.longpollerTimeout, this.conn.onopen = function () {\\n            return t.onConnOpen();\\n          }, this.conn.onerror = function (e) {\\n            return t.onConnError(e);\\n          }, this.conn.onmessage = function (e) {\\n            return t.onConnMessage(e);\\n          }, this.conn.onclose = function (e) {\\n            return t.onConnClose(e);\\n          });\\n        }\\n      }, {\\n        key: \"log\",\\n        value: function (e, t, n) {\\n          this.logger(e, t, n);\\n        }\\n      }, {\\n        key: \"hasLogger\",\\n        value: function () {\\n          return null !== this.logger;\\n        }\\n      }, {\\n        key: \"onOpen\",\\n        value: function (e) {\\n          var t = this.makeRef();\\n          return this.stateChangeCallbacks.open.push([t, e]), t;\\n        }\\n      }, {\\n        key: \"onClose\",\\n        value: function (e) {\\n          var t = this.makeRef();\\n          return this.stateChangeCallbacks.close.push([t, e]), t;\\n        }\\n      }, {\\n        key: \"onError\",\\n        value: function (e) {\\n          var t = this.makeRef();\\n          return this.stateChangeCallbacks.error.push([t, e]), t;\\n        }\\n      }, {\\n        key: \"onMessage\",\\n        value: function (e) {\\n          var t = this.makeRef();\\n          return this.stateChangeCallbacks.message.push([t, e]), t;\\n        }\\n      }, {\\n        key: \"onConnOpen\",\\n        value: function () {\\n          this.hasLogger() && this.log(\"transport\", \"connected to \".concat(this.endPointURL())), this.unloaded = !1, this.closeWasClean = !1, this.flushSendBuffer(), this.reconnectTimer.reset(), this.resetHeartbeat(), this.stateChangeCallbacks.open.forEach(function (e) {\\n            return (0, r(e, 2)[1])();\\n          });\\n        }\\n      }, {\\n        key: \"resetHeartbeat\",\\n        value: function () {\\n          var e = this;\\n          this.conn && this.conn.skipHeartbeat || (this.pendingHeartbeatRef = null, clearInterval(this.heartbeatTimer), this.heartbeatTimer = setInterval(function () {\\n            return e.sendHeartbeat();\\n          }, this.heartbeatIntervalMs));\\n        }\\n      }, {\\n        key: \"teardown\",\\n        value: function (e, t, n) {\\n          var i = this;\\n          if (!this.conn) return e && e();\\n          this.waitForBufferDone(function () {\\n            i.conn && (t ? i.conn.close(t, n || \"\") : i.conn.close()), i.waitForSocketClosed(function () {\\n              i.conn && (i.conn.onclose = function () {}, i.conn = null), e && e();\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"waitForBufferDone\",\\n        value: function (e) {\\n          var t = this,\\n              n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\\n          5 !== n && this.conn && this.conn.bufferedAmount ? setTimeout(function () {\\n            t.waitForBufferDone(e, n + 1);\\n          }, 150 * n) : e();\\n        }\\n      }, {\\n        key: \"waitForSocketClosed\",\\n        value: function (e) {\\n          var t = this,\\n              n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\\n          5 !== n && this.conn && this.conn.readyState !== m ? setTimeout(function () {\\n            t.waitForSocketClosed(e, n + 1);\\n          }, 150 * n) : e();\\n        }\\n      }, {\\n        key: \"onConnClose\",\\n        value: function (e) {\\n          this.hasLogger() && this.log(\"transport\", \"close\", e), this.triggerChanError(), clearInterval(this.heartbeatTimer), this.closeWasClean || this.reconnectTimer.scheduleTimeout(), this.stateChangeCallbacks.close.forEach(function (t) {\\n            return (0, r(t, 2)[1])(e);\\n          });\\n        }\\n      }, {\\n        key: \"onConnError\",\\n        value: function (e) {\\n          this.hasLogger() && this.log(\"transport\", e), this.triggerChanError(), this.stateChangeCallbacks.error.forEach(function (t) {\\n            return (0, r(t, 2)[1])(e);\\n          });\\n        }\\n      }, {\\n        key: \"triggerChanError\",\\n        value: function () {\\n          this.channels.forEach(function (e) {\\n            e.isErrored() || e.isLeaving() || e.isClosed() || e.trigger(R);\\n          });\\n        }\\n      }, {\\n        key: \"connectionState\",\\n        value: function () {\\n          switch (this.conn && this.conn.readyState) {\\n            case p:\\n              return \"connecting\";\\n\\n            case v:\\n              return \"open\";\\n\\n            case y:\\n              return \"closing\";\\n\\n            default:\\n              return \"closed\";\\n          }\\n        }\\n      }, {\\n        key: \"isConnected\",\\n        value: function () {\\n          return \"open\" === this.connectionState();\\n        }\\n      }, {\\n        key: \"remove\",\\n        value: function (e) {\\n          this.off(e.stateChangeRefs), this.channels = this.channels.filter(function (t) {\\n            return t.joinRef() !== e.joinRef();\\n          });\\n        }\\n      }, {\\n        key: \"off\",\\n        value: function (e) {\\n          for (var t in this.stateChangeCallbacks) this.stateChangeCallbacks[t] = this.stateChangeCallbacks[t].filter(function (t) {\\n            var n = r(t, 1)[0];\\n            return -1 === e.indexOf(n);\\n          });\\n        }\\n      }, {\\n        key: \"channel\",\\n        value: function (e) {\\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\\n              n = new _(e, t, this);\\n          return this.channels.push(n), n;\\n        }\\n      }, {\\n        key: \"push\",\\n        value: function (e) {\\n          var t = this;\\n\\n          if (this.hasLogger()) {\\n            var n = e.topic,\\n                i = e.event,\\n                o = e.payload,\\n                r = e.ref,\\n                s = e.join_ref;\\n            this.log(\"push\", \"\".concat(n, \" \").concat(i, \" (\").concat(s, \", \").concat(r, \")\"), o);\\n          }\\n\\n          this.isConnected() ? this.encode(e, function (e) {\\n            return t.conn.send(e);\\n          }) : this.sendBuffer.push(function () {\\n            return t.encode(e, function (e) {\\n              return t.conn.send(e);\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"makeRef\",\\n        value: function () {\\n          var e = this.ref + 1;\\n          return e === this.ref ? this.ref = 0 : this.ref = e, this.ref.toString();\\n        }\\n      }, {\\n        key: \"sendHeartbeat\",\\n        value: function () {\\n          if (this.isConnected()) {\\n            if (this.pendingHeartbeatRef) return this.pendingHeartbeatRef = null, this.hasLogger() && this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\"), void this.abnormalClose(\"heartbeat timeout\");\\n            this.pendingHeartbeatRef = this.makeRef(), this.push({\\n              topic: \"phoenix\",\\n              event: \"heartbeat\",\\n              payload: {},\\n              ref: this.pendingHeartbeatRef\\n            });\\n          }\\n        }\\n      }, {\\n        key: \"abnormalClose\",\\n        value: function (e) {\\n          this.closeWasClean = !1, this.conn.readyState === v && this.conn.close(1e3, e);\\n        }\\n      }, {\\n        key: \"flushSendBuffer\",\\n        value: function () {\\n          this.isConnected() && this.sendBuffer.length > 0 && (this.sendBuffer.forEach(function (e) {\\n            return e();\\n          }), this.sendBuffer = []);\\n        }\\n      }, {\\n        key: \"onConnMessage\",\\n        value: function (e) {\\n          var t = this;\\n          this.decode(e.data, function (e) {\\n            var n = e.topic,\\n                i = e.event,\\n                o = e.payload,\\n                s = e.ref,\\n                a = e.join_ref;\\n            s && s === t.pendingHeartbeatRef && (t.pendingHeartbeatRef = null), t.hasLogger() && t.log(\"receive\", \"\".concat(o.status || \"\", \" \").concat(n, \" \").concat(i, \" \").concat(s && \"(\" + s + \")\" || \"\"), o);\\n\\n            for (var c = 0; c < t.channels.length; c++) {\\n              var u = t.channels[c];\\n              u.isMember(n, i, o, a) && u.trigger(i, o, s, a);\\n            }\\n\\n            for (var h = 0; h < t.stateChangeCallbacks.message.length; h++) {\\n              (0, r(t.stateChangeCallbacks.message[h], 2)[1])(e);\\n            }\\n          });\\n        }\\n      }, {\\n        key: \"leaveOpenTopic\",\\n        value: function (e) {\\n          var t = this.channels.find(function (t) {\\n            return t.topic === e && (t.isJoined() || t.isJoining());\\n          });\\n          t && (this.hasLogger() && this.log(\"transport\", \\'leaving duplicate topic \"\\'.concat(e, \\'\"\\')), t.leave());\\n        }\\n      }]), e;\\n    }(),\\n        D = function () {\\n      function e(t) {\\n        c(this, e), this.endPoint = null, this.token = null, this.skipHeartbeat = !0, this.onopen = function () {}, this.onerror = function () {}, this.onmessage = function () {}, this.onclose = function () {}, this.pollEndpoint = this.normalizeEndpoint(t), this.readyState = p, this.poll();\\n      }\\n\\n      return h(e, [{\\n        key: \"normalizeEndpoint\",\\n        value: function (e) {\\n          return e.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)/\" + x), \"$1/\" + L);\\n        }\\n      }, {\\n        key: \"endpointURL\",\\n        value: function () {\\n          return M.appendParams(this.pollEndpoint, {\\n            token: this.token\\n          });\\n        }\\n      }, {\\n        key: \"closeAndRetry\",\\n        value: function () {\\n          this.close(), this.readyState = p;\\n        }\\n      }, {\\n        key: \"ontimeout\",\\n        value: function () {\\n          this.onerror(\"timeout\"), this.closeAndRetry();\\n        }\\n      }, {\\n        key: \"poll\",\\n        value: function () {\\n          var e = this;\\n          this.readyState !== v && this.readyState !== p || M.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (t) {\\n            if (t) {\\n              var n = t.status,\\n                  i = t.token,\\n                  o = t.messages;\\n              e.token = i;\\n            } else n = 0;\\n\\n            switch (n) {\\n              case 200:\\n                o.forEach(function (t) {\\n                  return e.onmessage({\\n                    data: t\\n                  });\\n                }), e.poll();\\n                break;\\n\\n              case 204:\\n                e.poll();\\n                break;\\n\\n              case 410:\\n                e.readyState = v, e.onopen(), e.poll();\\n                break;\\n\\n              case 403:\\n                e.onerror(), e.close();\\n                break;\\n\\n              case 0:\\n              case 500:\\n                e.onerror(), e.closeAndRetry();\\n                break;\\n\\n              default:\\n                throw new Error(\"unhandled poll status \".concat(n));\\n            }\\n          });\\n        }\\n      }, {\\n        key: \"send\",\\n        value: function (e) {\\n          var t = this;\\n          M.request(\"POST\", this.endpointURL(), \"application/json\", e, this.timeout, this.onerror.bind(this, \"timeout\"), function (e) {\\n            e && 200 === e.status || (t.onerror(e && e.status), t.closeAndRetry());\\n          });\\n        }\\n      }, {\\n        key: \"close\",\\n        value: function (e, t) {\\n          this.readyState = m, this.onclose();\\n        }\\n      }]), e;\\n    }(),\\n        M = function () {\\n      function e() {\\n        c(this, e);\\n      }\\n\\n      return h(e, null, [{\\n        key: \"request\",\\n        value: function (e, t, n, i, o, r, s) {\\n          if (d.XDomainRequest) {\\n            var a = new XDomainRequest();\\n            this.xdomainRequest(a, e, t, i, o, r, s);\\n          } else {\\n            var c = new d.XMLHttpRequest();\\n            this.xhrRequest(c, e, t, n, i, o, r, s);\\n          }\\n        }\\n      }, {\\n        key: \"xdomainRequest\",\\n        value: function (e, t, n, i, o, r, s) {\\n          var a = this;\\n          e.timeout = o, e.open(t, n), e.onload = function () {\\n            var t = a.parseJSON(e.responseText);\\n            s && s(t);\\n          }, r && (e.ontimeout = r), e.onprogress = function () {}, e.send(i);\\n        }\\n      }, {\\n        key: \"xhrRequest\",\\n        value: function (e, t, n, i, o, r, s, a) {\\n          var c = this;\\n          e.open(t, n, !0), e.timeout = r, e.setRequestHeader(\"Content-Type\", i), e.onerror = function () {\\n            a && a(null);\\n          }, e.onreadystatechange = function () {\\n            if (e.readyState === c.states.complete && a) {\\n              var t = c.parseJSON(e.responseText);\\n              a(t);\\n            }\\n          }, s && (e.ontimeout = s), e.send(o);\\n        }\\n      }, {\\n        key: \"parseJSON\",\\n        value: function (e) {\\n          if (!e || \"\" === e) return null;\\n\\n          try {\\n            return JSON.parse(e);\\n          } catch (t) {\\n            return console && console.log(\"failed to parse JSON response\", e), null;\\n          }\\n        }\\n      }, {\\n        key: \"serialize\",\\n        value: function (e, t) {\\n          var n = [];\\n\\n          for (var i in e) if (e.hasOwnProperty(i)) {\\n            var r = t ? \"\".concat(t, \"[\").concat(i, \"]\") : i,\\n                s = e[i];\\n            \"object\" === o(s) ? n.push(this.serialize(s, r)) : n.push(encodeURIComponent(r) + \"=\" + encodeURIComponent(s));\\n          }\\n\\n          return n.join(\"&\");\\n        }\\n      }, {\\n        key: \"appendParams\",\\n        value: function (e, t) {\\n          if (0 === Object.keys(t).length) return e;\\n          var n = e.match(/\\\\?/) ? \"&\" : \"?\";\\n          return \"\".concat(e).concat(n).concat(this.serialize(t));\\n        }\\n      }]), e;\\n    }();\\n\\n    M.states = {\\n      complete: 4\\n    };\\n\\n    var N = function () {\\n      function e(t) {\\n        var n = this,\\n            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\\n        c(this, e);\\n        var o = i.events || {\\n          state: \"presence_state\",\\n          diff: \"presence_diff\"\\n        };\\n        this.state = {}, this.pendingDiffs = [], this.channel = t, this.joinRef = null, this.caller = {\\n          onJoin: function () {},\\n          onLeave: function () {},\\n          onSync: function () {}\\n        }, this.channel.on(o.state, function (t) {\\n          var i = n.caller,\\n              o = i.onJoin,\\n              r = i.onLeave,\\n              s = i.onSync;\\n          n.joinRef = n.channel.joinRef(), n.state = e.syncState(n.state, t, o, r), n.pendingDiffs.forEach(function (t) {\\n            n.state = e.syncDiff(n.state, t, o, r);\\n          }), n.pendingDiffs = [], s();\\n        }), this.channel.on(o.diff, function (t) {\\n          var i = n.caller,\\n              o = i.onJoin,\\n              r = i.onLeave,\\n              s = i.onSync;\\n          n.inPendingSyncState() ? n.pendingDiffs.push(t) : (n.state = e.syncDiff(n.state, t, o, r), s());\\n        });\\n      }\\n\\n      return h(e, [{\\n        key: \"onJoin\",\\n        value: function (e) {\\n          this.caller.onJoin = e;\\n        }\\n      }, {\\n        key: \"onLeave\",\\n        value: function (e) {\\n          this.caller.onLeave = e;\\n        }\\n      }, {\\n        key: \"onSync\",\\n        value: function (e) {\\n          this.caller.onSync = e;\\n        }\\n      }, {\\n        key: \"list\",\\n        value: function (t) {\\n          return e.list(this.state, t);\\n        }\\n      }, {\\n        key: \"inPendingSyncState\",\\n        value: function () {\\n          return !this.joinRef || this.joinRef !== this.channel.joinRef();\\n        }\\n      }], [{\\n        key: \"syncState\",\\n        value: function (e, t, n, i) {\\n          var o = this,\\n              r = this.clone(e),\\n              s = {},\\n              a = {};\\n          return this.map(r, function (e, n) {\\n            t[e] || (a[e] = n);\\n          }), this.map(t, function (e, t) {\\n            var n = r[e];\\n\\n            if (n) {\\n              var i = t.metas.map(function (e) {\\n                return e.phx_ref;\\n              }),\\n                  c = n.metas.map(function (e) {\\n                return e.phx_ref;\\n              }),\\n                  u = t.metas.filter(function (e) {\\n                return c.indexOf(e.phx_ref) < 0;\\n              }),\\n                  h = n.metas.filter(function (e) {\\n                return i.indexOf(e.phx_ref) < 0;\\n              });\\n              u.length > 0 && (s[e] = t, s[e].metas = u), h.length > 0 && (a[e] = o.clone(n), a[e].metas = h);\\n            } else s[e] = t;\\n          }), this.syncDiff(r, {\\n            joins: s,\\n            leaves: a\\n          }, n, i);\\n        }\\n      }, {\\n        key: \"syncDiff\",\\n        value: function (e, t, n, o) {\\n          var r = t.joins,\\n              s = t.leaves,\\n              a = this.clone(e);\\n          return n || (n = function () {}), o || (o = function () {}), this.map(r, function (e, t) {\\n            var o = a[e];\\n\\n            if (a[e] = t, o) {\\n              var r,\\n                  s = a[e].metas.map(function (e) {\\n                return e.phx_ref;\\n              }),\\n                  c = o.metas.filter(function (e) {\\n                return s.indexOf(e.phx_ref) < 0;\\n              });\\n              (r = a[e].metas).unshift.apply(r, i(c));\\n            }\\n\\n            n(e, o, t);\\n          }), this.map(s, function (e, t) {\\n            var n = a[e];\\n\\n            if (n) {\\n              var i = t.metas.map(function (e) {\\n                return e.phx_ref;\\n              });\\n              n.metas = n.metas.filter(function (e) {\\n                return i.indexOf(e.phx_ref) < 0;\\n              }), o(e, n, t), 0 === n.metas.length && delete a[e];\\n            }\\n          }), a;\\n        }\\n      }, {\\n        key: \"list\",\\n        value: function (e, t) {\\n          return t || (t = function (e, t) {\\n            return t;\\n          }), this.map(e, function (e, n) {\\n            return t(e, n);\\n          });\\n        }\\n      }, {\\n        key: \"map\",\\n        value: function (e, t) {\\n          return Object.getOwnPropertyNames(e).map(function (n) {\\n            return t(n, e[n]);\\n          });\\n        }\\n      }, {\\n        key: \"clone\",\\n        value: function (e) {\\n          return JSON.parse(JSON.stringify(e));\\n        }\\n      }]), e;\\n    }(),\\n        J = function () {\\n      function e(t, n) {\\n        c(this, e), this.callback = t, this.timerCalc = n, this.timer = null, this.tries = 0;\\n      }\\n\\n      return h(e, [{\\n        key: \"reset\",\\n        value: function () {\\n          this.tries = 0, clearTimeout(this.timer);\\n        }\\n      }, {\\n        key: \"scheduleTimeout\",\\n        value: function () {\\n          var e = this;\\n          clearTimeout(this.timer), this.timer = setTimeout(function () {\\n            e.tries = e.tries + 1, e.callback();\\n          }, this.timerCalc(this.tries + 1));\\n        }\\n      }]), e;\\n    }();\\n  }]);\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///1\\n')},function(module,exports,__webpack_require__){eval('!function (e, t) {\\n   true ? module.exports = t() : undefined;\\n}(this, function () {\\n  return function (e) {\\n    var t = {};\\n\\n    function n(i) {\\n      if (t[i]) return t[i].exports;\\n      var r = t[i] = {\\n        i: i,\\n        l: !1,\\n        exports: {}\\n      };\\n      return e[i].call(r.exports, r, r.exports, n), r.l = !0, r.exports;\\n    }\\n\\n    return n.m = e, n.c = t, n.d = function (e, t, i) {\\n      n.o(e, t) || Object.defineProperty(e, t, {\\n        configurable: !1,\\n        enumerable: !0,\\n        get: i\\n      });\\n    }, n.r = function (e) {\\n      Object.defineProperty(e, \"__esModule\", {\\n        value: !0\\n      });\\n    }, n.n = function (e) {\\n      var t = e && e.__esModule ? function () {\\n        return e.default;\\n      } : function () {\\n        return e;\\n      };\\n      return n.d(t, \"a\", t), t;\\n    }, n.o = function (e, t) {\\n      return Object.prototype.hasOwnProperty.call(e, t);\\n    }, n.p = \"\", n(n.s = 2);\\n  }([function (e, t, n) {\\n    \"use strict\";\\n\\n    n.r(t);\\n    var i,\\n        r = 11;\\n    var o = \"http://www.w3.org/1999/xhtml\",\\n        a = \"undefined\" == typeof document ? void 0 : document,\\n        u = !!a && \"content\" in a.createElement(\"template\"),\\n        s = !!a && a.createRange && \"createContextualFragment\" in a.createRange();\\n\\n    function c(e) {\\n      return e = e.trim(), u ? function (e) {\\n        var t = a.createElement(\"template\");\\n        return t.innerHTML = e, t.content.childNodes[0];\\n      }(e) : s ? function (e) {\\n        return i || (i = a.createRange()).selectNode(a.body), i.createContextualFragment(e).childNodes[0];\\n      }(e) : function (e) {\\n        var t = a.createElement(\"body\");\\n        return t.innerHTML = e, t.childNodes[0];\\n      }(e);\\n    }\\n\\n    function l(e, t) {\\n      var n,\\n          i,\\n          r = e.nodeName,\\n          o = t.nodeName;\\n      return r === o || (n = r.charCodeAt(0), i = o.charCodeAt(0), n <= 90 && i >= 97 ? r === o.toUpperCase() : i <= 90 && n >= 97 && o === r.toUpperCase());\\n    }\\n\\n    function d(e, t, n) {\\n      e[n] !== t[n] && (e[n] = t[n], e[n] ? e.setAttribute(n, \"\") : e.removeAttribute(n));\\n    }\\n\\n    var h = {\\n      OPTION: function (e, t) {\\n        var n = e.parentNode;\\n\\n        if (n) {\\n          var i = n.nodeName.toUpperCase();\\n          \"OPTGROUP\" === i && (i = (n = n.parentNode) && n.nodeName.toUpperCase()), \"SELECT\" !== i || n.hasAttribute(\"multiple\") || (e.hasAttribute(\"selected\") && !t.selected && (e.setAttribute(\"selected\", \"selected\"), e.removeAttribute(\"selected\")), n.selectedIndex = -1);\\n        }\\n\\n        d(e, t, \"selected\");\\n      },\\n      INPUT: function (e, t) {\\n        d(e, t, \"checked\"), d(e, t, \"disabled\"), e.value !== t.value && (e.value = t.value), t.hasAttribute(\"value\") || e.removeAttribute(\"value\");\\n      },\\n      TEXTAREA: function (e, t) {\\n        var n = t.value;\\n        e.value !== n && (e.value = n);\\n        var i = e.firstChild;\\n\\n        if (i) {\\n          var r = i.nodeValue;\\n          if (r == n || !n && r == e.placeholder) return;\\n          i.nodeValue = n;\\n        }\\n      },\\n      SELECT: function (e, t) {\\n        if (!t.hasAttribute(\"multiple\")) {\\n          for (var n, i, r = -1, o = 0, a = e.firstChild; a;) if (\"OPTGROUP\" === (i = a.nodeName && a.nodeName.toUpperCase())) a = (n = a).firstChild;else {\\n            if (\"OPTION\" === i) {\\n              if (a.hasAttribute(\"selected\")) {\\n                r = o;\\n                break;\\n              }\\n\\n              o++;\\n            }\\n\\n            !(a = a.nextSibling) && n && (a = n.nextSibling, n = null);\\n          }\\n\\n          e.selectedIndex = r;\\n        }\\n      }\\n    },\\n        f = 1,\\n        v = 11,\\n        p = 3,\\n        g = 8;\\n\\n    function m() {}\\n\\n    function y(e) {\\n      if (e) return e.getAttribute && e.getAttribute(\"id\") || e.id;\\n    }\\n\\n    var b = function (e) {\\n      return function (t, n, i) {\\n        if (i || (i = {}), \"string\" == typeof n) if (\"#document\" === t.nodeName || \"HTML\" === t.nodeName || \"BODY\" === t.nodeName) {\\n          var r = n;\\n          (n = a.createElement(\"html\")).innerHTML = r;\\n        } else n = c(n);\\n        var u = i.getNodeKey || y,\\n            s = i.onBeforeNodeAdded || m,\\n            d = i.onNodeAdded || m,\\n            b = i.onBeforeElUpdated || m,\\n            k = i.onElUpdated || m,\\n            w = i.onBeforeNodeDiscarded || m,\\n            E = i.onNodeDiscarded || m,\\n            A = i.onBeforeElChildrenUpdated || m,\\n            S = !0 === i.childrenOnly,\\n            x = Object.create(null),\\n            C = [];\\n\\n        function P(e) {\\n          C.push(e);\\n        }\\n\\n        function L(e, t, n) {\\n          !1 !== w(e) && (t && t.removeChild(e), E(e), function e(t, n) {\\n            if (t.nodeType === f) for (var i = t.firstChild; i;) {\\n              var r = void 0;\\n              n && (r = u(i)) ? P(r) : (E(i), i.firstChild && e(i, n)), i = i.nextSibling;\\n            }\\n          }(e, n));\\n        }\\n\\n        function I(e) {\\n          d(e);\\n\\n          for (var t = e.firstChild; t;) {\\n            var n = t.nextSibling,\\n                i = u(t);\\n\\n            if (i) {\\n              var r = x[i];\\n              r && l(t, r) ? (t.parentNode.replaceChild(r, t), T(r, t)) : I(t);\\n            } else I(t);\\n\\n            t = n;\\n          }\\n        }\\n\\n        function T(t, n, i) {\\n          var r = u(n);\\n\\n          if (r && delete x[r], !i) {\\n            if (!1 === b(t, n)) return;\\n            if (e(t, n), k(t), !1 === A(t, n)) return;\\n          }\\n\\n          \"TEXTAREA\" !== t.nodeName ? function (e, t) {\\n            var n,\\n                i,\\n                r,\\n                o,\\n                c,\\n                d = t.firstChild,\\n                v = e.firstChild;\\n\\n            e: for (; d;) {\\n              for (o = d.nextSibling, n = u(d); v;) {\\n                if (r = v.nextSibling, d.isSameNode && d.isSameNode(v)) {\\n                  d = o, v = r;\\n                  continue e;\\n                }\\n\\n                i = u(v);\\n                var m = v.nodeType,\\n                    y = void 0;\\n\\n                if (m === d.nodeType && (m === f ? (n ? n !== i && ((c = x[n]) ? r === c ? y = !1 : (e.insertBefore(c, v), i ? P(i) : L(v, e, !0), v = c) : y = !1) : i && (y = !1), (y = !1 !== y && l(v, d)) && T(v, d)) : m !== p && m != g || (y = !0, v.nodeValue !== d.nodeValue && (v.nodeValue = d.nodeValue))), y) {\\n                  d = o, v = r;\\n                  continue e;\\n                }\\n\\n                i ? P(i) : L(v, e, !0), v = r;\\n              }\\n\\n              if (n && (c = x[n]) && l(c, d)) e.appendChild(c), T(c, d);else {\\n                var b = s(d);\\n                !1 !== b && (b && (d = b), d.actualize && (d = d.actualize(e.ownerDocument || a)), e.appendChild(d), I(d));\\n              }\\n              d = o, v = r;\\n            }\\n\\n            !function (e, t, n) {\\n              for (; t;) {\\n                var i = t.nextSibling;\\n                (n = u(t)) ? P(n) : L(t, e, !0), t = i;\\n              }\\n            }(e, v, i);\\n            var k = h[e.nodeName];\\n            k && k(e, t);\\n          }(t, n) : h.TEXTAREA(t, n);\\n        }\\n\\n        !function e(t) {\\n          if (t.nodeType === f || t.nodeType === v) for (var n = t.firstChild; n;) {\\n            var i = u(n);\\n            i && (x[i] = n), e(n), n = n.nextSibling;\\n          }\\n        }(t);\\n        var D = t,\\n            _ = D.nodeType,\\n            N = n.nodeType;\\n        if (!S) if (_ === f) N === f ? l(t, n) || (E(t), D = function (e, t) {\\n          for (var n = e.firstChild; n;) {\\n            var i = n.nextSibling;\\n            t.appendChild(n), n = i;\\n          }\\n\\n          return t;\\n        }(t, function (e, t) {\\n          return t && t !== o ? a.createElementNS(t, e) : a.createElement(e);\\n        }(n.nodeName, n.namespaceURI))) : D = n;else if (_ === p || _ === g) {\\n          if (N === _) return D.nodeValue !== n.nodeValue && (D.nodeValue = n.nodeValue), D;\\n          D = n;\\n        }\\n        if (D === n) E(t);else {\\n          if (n.isSameNode && n.isSameNode(D)) return;\\n          if (T(D, n, S), C) for (var R = 0, O = C.length; R < O; R++) {\\n            var j = x[C[R]];\\n            j && L(j, j.parentNode, !1);\\n          }\\n        }\\n        return !S && D !== t && t.parentNode && (D.actualize && (D = D.actualize(t.ownerDocument || a)), t.parentNode.replaceChild(D, t)), D;\\n      };\\n    }(function (e, t) {\\n      var n,\\n          i,\\n          o,\\n          a,\\n          u = t.attributes;\\n\\n      if (t.nodeType !== r && e.nodeType !== r) {\\n        for (var s = u.length - 1; s >= 0; s--) i = (n = u[s]).name, o = n.namespaceURI, a = n.value, o ? (i = n.localName || i, e.getAttributeNS(o, i) !== a && (\"xmlns\" === n.prefix && (i = n.name), e.setAttributeNS(o, i, a))) : e.getAttribute(i) !== a && e.setAttribute(i, a);\\n\\n        for (var c = e.attributes, l = c.length - 1; l >= 0; l--) i = (n = c[l]).name, (o = n.namespaceURI) ? (i = n.localName || i, t.hasAttributeNS(o, i) || e.removeAttributeNS(o, i)) : t.hasAttribute(i) || e.removeAttribute(i);\\n      }\\n    });\\n\\n    function k(e) {\\n      return P(e) || S(e) || L(e) || C();\\n    }\\n\\n    function w(e, t) {\\n      var n = Object.keys(e);\\n\\n      if (Object.getOwnPropertySymbols) {\\n        var i = Object.getOwnPropertySymbols(e);\\n        t && (i = i.filter(function (t) {\\n          return Object.getOwnPropertyDescriptor(e, t).enumerable;\\n        })), n.push.apply(n, i);\\n      }\\n\\n      return n;\\n    }\\n\\n    function E(e, t, n) {\\n      return t in e ? Object.defineProperty(e, t, {\\n        value: n,\\n        enumerable: !0,\\n        configurable: !0,\\n        writable: !0\\n      }) : e[t] = n, e;\\n    }\\n\\n    function A(e) {\\n      return function (e) {\\n        if (Array.isArray(e)) return I(e);\\n      }(e) || S(e) || L(e) || function () {\\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\\n      }();\\n    }\\n\\n    function S(e) {\\n      if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\\n    }\\n\\n    function x(e, t) {\\n      return P(e) || function (e, t) {\\n        if (\"undefined\" == typeof Symbol || !(Symbol.iterator in Object(e))) return;\\n        var n = [],\\n            i = !0,\\n            r = !1,\\n            o = void 0;\\n\\n        try {\\n          for (var a, u = e[Symbol.iterator](); !(i = (a = u.next()).done) && (n.push(a.value), !t || n.length !== t); i = !0);\\n        } catch (e) {\\n          r = !0, o = e;\\n        } finally {\\n          try {\\n            i || null == u.return || u.return();\\n          } finally {\\n            if (r) throw o;\\n          }\\n        }\\n\\n        return n;\\n      }(e, t) || L(e, t) || C();\\n    }\\n\\n    function C() {\\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\\n    }\\n\\n    function P(e) {\\n      if (Array.isArray(e)) return e;\\n    }\\n\\n    function L(e, t) {\\n      if (e) {\\n        if (\"string\" == typeof e) return I(e, t);\\n        var n = Object.prototype.toString.call(e).slice(8, -1);\\n        return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(e) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? I(e, t) : void 0;\\n      }\\n    }\\n\\n    function I(e, t) {\\n      (null == t || t > e.length) && (t = e.length);\\n\\n      for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];\\n\\n      return i;\\n    }\\n\\n    function T(e, t) {\\n      if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\\n    }\\n\\n    function D(e, t) {\\n      for (var n = 0; n < t.length; n++) {\\n        var i = t[n];\\n        i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\\n      }\\n    }\\n\\n    function _(e, t, n) {\\n      return t && D(e.prototype, t), n && D(e, n), e;\\n    }\\n\\n    function N(e) {\\n      \"@babel/helpers - typeof\";\\n\\n      return (N = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\\n        return typeof e;\\n      } : function (e) {\\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\\n      })(e);\\n    }\\n\\n    n.d(t, \"debug\", function () {\\n      return K;\\n    }), n.d(t, \"Rendered\", function () {\\n      return ue;\\n    }), n.d(t, \"LiveSocket\", function () {\\n      return se;\\n    }), n.d(t, \"Browser\", function () {\\n      return ce;\\n    }), n.d(t, \"DOM\", function () {\\n      return le;\\n    }), n.d(t, \"View\", function () {\\n      return fe;\\n    });\\n\\n    var R = [1e3, 3e3],\\n        O = \"data-phx-view\",\\n        j = [\"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\", \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\"],\\n        H = \"data-phx-component\",\\n        F = \"data-phx-ref\",\\n        M = \"data-phx-upload-ref\",\\n        U = \"[\".concat(O, \"]\"),\\n        B = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\"],\\n        J = [\"checkbox\", \"radio\"],\\n        V = 1,\\n        W = \"phx-\",\\n        q = {\\n      debounce: 300,\\n      throttle: 300\\n    },\\n        z = function (e, t) {\\n      return console.error && console.error(e, t);\\n    };\\n\\n    var K = function (e, t, n, i) {\\n      e.liveSocket.isDebugEnabled() && console.log(\"\".concat(e.id, \" \").concat(t, \": \").concat(n, \" - \"), i);\\n    },\\n        X = function (e) {\\n      return \"function\" == typeof e ? e : function () {\\n        return e;\\n      };\\n    },\\n        $ = function (e) {\\n      return JSON.parse(JSON.stringify(e));\\n    },\\n        G = function (e, t, n) {\\n      do {\\n        if (e.matches(\"[\".concat(t, \"]\"))) return e;\\n        e = e.parentElement || e.parentNode;\\n      } while (null !== e && 1 === e.nodeType && !(n && n.isSameNode(e) || e.matches(U)));\\n\\n      return null;\\n    },\\n        Y = function (e) {\\n      return null !== e && \"object\" === N(e) && !(e instanceof Array);\\n    },\\n        Q = function (e) {\\n      for (var t in e) return !1;\\n\\n      return !0;\\n    },\\n        Z = function (e, t) {\\n      return e && t(e);\\n    },\\n        ee = function () {\\n      function e(t, n, i) {\\n        T(this, e), this.ref = ie.genFileRef(n), this.fileEl = t, this.file = n, this.view = i, this.meta = null, this._isCancelled = !1, this._isDone = !1, this._progress = 0, this._onDone = function () {};\\n      }\\n\\n      return _(e, null, [{\\n        key: \"isActive\",\\n        value: function (e, t) {\\n          var n = void 0 === t._phxRef,\\n              i = e.getAttribute(\"data-phx-active-refs\").split(\",\").indexOf(ie.genFileRef(t)) >= 0;\\n          return t.size > 0 && (n || i);\\n        }\\n      }, {\\n        key: \"isPreflighted\",\\n        value: function (e, t) {\\n          var n = e.getAttribute(\"data-phx-preflighted-refs\").split(\",\").indexOf(ie.genFileRef(t)) >= 0;\\n          return n && this.isActive(e, t);\\n        }\\n      }]), _(e, [{\\n        key: \"metadata\",\\n        value: function () {\\n          return this.meta;\\n        }\\n      }, {\\n        key: \"progress\",\\n        value: function (e) {\\n          var t = this;\\n          this._progress = Math.floor(e), this._progress >= 100 ? (this._progress = 100, this._isDone = !0, this.view.pushFileProgress(this.fileEl, this.ref, 100, function () {\\n            ie.untrackFile(t.fileEl, t.file), t._onDone();\\n          })) : this.view.pushFileProgress(this.fileEl, this.ref, this._progress);\\n        }\\n      }, {\\n        key: \"cancel\",\\n        value: function () {\\n          this._isCancelled = !0, this._isDone = !0, this._onDone();\\n        }\\n      }, {\\n        key: \"isDone\",\\n        value: function () {\\n          return this._isDone;\\n        }\\n      }, {\\n        key: \"error\",\\n        value: function () {\\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"failed\";\\n          this.view.pushFileProgress(this.fileEl, this.ref, {\\n            error: e\\n          });\\n        }\\n      }, {\\n        key: \"onDone\",\\n        value: function (e) {\\n          this._onDone = e;\\n        }\\n      }, {\\n        key: \"toPreflightPayload\",\\n        value: function () {\\n          return {\\n            last_modified: this.file.lastModified,\\n            name: this.file.name,\\n            size: this.file.size,\\n            type: this.file.type,\\n            ref: this.ref\\n          };\\n        }\\n      }, {\\n        key: \"uploader\",\\n        value: function (e) {\\n          if (this.meta.uploader) {\\n            var t = e[this.meta.uploader] || z(\"no uploader configured for \".concat(this.meta.uploader));\\n            return {\\n              name: this.meta.uploader,\\n              callback: t\\n            };\\n          }\\n\\n          return {\\n            name: \"channel\",\\n            callback: re\\n          };\\n        }\\n      }, {\\n        key: \"zipPostFlight\",\\n        value: function (e) {\\n          this.meta = e.entries[this.ref], this.meta || z(\"no preflight upload response returned with ref \".concat(this.ref), {\\n            input: this.fileEl,\\n            response: e\\n          });\\n        }\\n      }]), e;\\n    }(),\\n        te = {\\n      LiveFileUpload: {\\n        preflightedRefs: function () {\\n          return this.el.getAttribute(\"data-phx-preflighted-refs\");\\n        },\\n        mounted: function () {\\n          this.preflightedWas = this.preflightedRefs();\\n        },\\n        updated: function () {\\n          var e = this.preflightedRefs();\\n          this.preflightedWas !== e && (this.preflightedWas = e, \"\" === e && this.__view.cancelSubmit(this.el.form));\\n        }\\n      }\\n    };\\n\\n    te.LiveImgPreview = {\\n      mounted: function () {\\n        var e = this;\\n        this.ref = this.el.getAttribute(\"data-phx-entry-ref\"), this.inputEl = document.getElementById(this.el.getAttribute(M)), ie.getEntryDataURL(this.inputEl, this.ref, function (t) {\\n          return e.el.src = t;\\n        });\\n      }\\n    };\\n\\n    var ne = 0,\\n        ie = function () {\\n      function e(t, n, i) {\\n        T(this, e), this.view = n, this.onComplete = i, this._entries = Array.from(e.filesAwaitingPreflight(t) || []).map(function (e) {\\n          return new ee(t, e, n);\\n        }), this.numEntriesInProgress = this._entries.length;\\n      }\\n\\n      return _(e, null, [{\\n        key: \"genFileRef\",\\n        value: function (e) {\\n          var t = e._phxRef;\\n          return void 0 !== t ? t : (e._phxRef = (ne++).toString(), e._phxRef);\\n        }\\n      }, {\\n        key: \"getEntryDataURL\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = this.activeFiles(e).find(function (e) {\\n            return i.genFileRef(e) === t;\\n          }),\\n              o = new FileReader();\\n          o.onload = function (e) {\\n            return n(e.target.result);\\n          }, o.readAsDataURL(r);\\n        }\\n      }, {\\n        key: \"hasUploadsInProgress\",\\n        value: function (e) {\\n          var t = 0;\\n          return le.findUploadInputs(e).forEach(function (e) {\\n            e.getAttribute(\"data-phx-preflighted-refs\") !== e.getAttribute(\"data-phx-done-refs\") && t++;\\n          }), t > 0;\\n        }\\n      }, {\\n        key: \"serializeUploads\",\\n        value: function (e) {\\n          var t = this,\\n              n = {};\\n          return this.activeFiles(e, \"serialize\").forEach(function (i) {\\n            var r = {\\n              path: e.name\\n            },\\n                o = e.getAttribute(M);\\n            n[o] = n[o] || [], r.ref = t.genFileRef(i), r.name = i.name, r.type = i.type, r.size = i.size, n[o].push(r);\\n          }), n;\\n        }\\n      }, {\\n        key: \"clearFiles\",\\n        value: function (e) {\\n          e.value = null, le.putPrivate(e, \"files\", []);\\n        }\\n      }, {\\n        key: \"untrackFile\",\\n        value: function (e, t) {\\n          le.putPrivate(e, \"files\", le.private(e, \"files\").filter(function (e) {\\n            return !Object.is(e, t);\\n          }));\\n        }\\n      }, {\\n        key: \"trackFiles\",\\n        value: function (e, t) {\\n          var n = this;\\n\\n          if (null !== e.getAttribute(\"multiple\")) {\\n            var i = t.filter(function (t) {\\n              return !n.activeFiles(e).find(function (e) {\\n                return Object.is(e, t);\\n              });\\n            });\\n            le.putPrivate(e, \"files\", this.activeFiles(e).concat(i)), e.value = null;\\n          } else le.putPrivate(e, \"files\", t);\\n        }\\n      }, {\\n        key: \"activeFileInputs\",\\n        value: function (e) {\\n          var t = this,\\n              n = le.findUploadInputs(e);\\n          return Array.from(n).filter(function (e) {\\n            return e.files && t.activeFiles(e).length > 0;\\n          });\\n        }\\n      }, {\\n        key: \"activeFiles\",\\n        value: function (e) {\\n          return (le.private(e, \"files\") || []).filter(function (t) {\\n            return ee.isActive(e, t);\\n          });\\n        }\\n      }, {\\n        key: \"inputsAwaitingPreflight\",\\n        value: function (e) {\\n          var t = this,\\n              n = le.findUploadInputs(e);\\n          return Array.from(n).filter(function (e) {\\n            return t.filesAwaitingPreflight(e).length > 0;\\n          });\\n        }\\n      }, {\\n        key: \"filesAwaitingPreflight\",\\n        value: function (e) {\\n          return this.activeFiles(e).filter(function (t) {\\n            return !ee.isPreflighted(e, t);\\n          });\\n        }\\n      }]), _(e, [{\\n        key: \"entries\",\\n        value: function () {\\n          return this._entries;\\n        }\\n      }, {\\n        key: \"initAdapterUpload\",\\n        value: function (e, t, n) {\\n          var i = this;\\n          this._entries = this._entries.map(function (t) {\\n            return t.zipPostFlight(e), t.onDone(function () {\\n              i.numEntriesInProgress--, 0 === i.numEntriesInProgress && i.onComplete();\\n            }), t;\\n          });\\n\\n          var r = this._entries.reduce(function (e, t) {\\n            var i = t.uploader(n.uploaders),\\n                r = i.name,\\n                o = i.callback;\\n            return e[r] = e[r] || {\\n              callback: o,\\n              entries: []\\n            }, e[r].entries.push(t), e;\\n          }, {});\\n\\n          for (var o in r) {\\n            var a = r[o];\\n            (0, a.callback)(a.entries, t, e, n);\\n          }\\n        }\\n      }]), e;\\n    }(),\\n        re = function (e, t, n, i) {\\n      e.forEach(function (e) {\\n        new oe(e, n.config.chunk_size, i).upload();\\n      });\\n    },\\n        oe = function () {\\n      function e(t, n, i) {\\n        T(this, e), this.liveSocket = i, this.entry = t, this.offset = 0, this.chunkSize = n, this.uploadChannel = i.channel(\"lvu:\".concat(t.ref), {\\n          token: t.metadata()\\n        });\\n      }\\n\\n      return _(e, [{\\n        key: \"upload\",\\n        value: function () {\\n          var e = this;\\n          this.uploadChannel.join().receive(\"ok\", function (t) {\\n            return e.readNextChunk();\\n          }).receive(\"error\", function (t) {\\n            e.uploadChannel.leave(), e.entry.error();\\n          });\\n        }\\n      }, {\\n        key: \"isDone\",\\n        value: function () {\\n          return this.offset >= this.entry.file.size;\\n        }\\n      }, {\\n        key: \"readNextChunk\",\\n        value: function () {\\n          var e = this,\\n              t = new window.FileReader(),\\n              n = this.entry.file.slice(this.offset, this.chunkSize + this.offset);\\n          t.onload = function (t) {\\n            if (null !== t.target.error) return z(\"Read error: \" + t.target.error);\\n            e.offset += t.target.result.byteLength, e.pushChunk(t.target.result);\\n          }, t.readAsArrayBuffer(n);\\n        }\\n      }, {\\n        key: \"pushChunk\",\\n        value: function (e) {\\n          var t = this;\\n          this.uploadChannel.isJoined() && this.uploadChannel.push(\"chunk\", e).receive(\"ok\", function () {\\n            t.entry.progress(t.offset / t.entry.file.size * 100), t.isDone() || setTimeout(function () {\\n              return t.readNextChunk();\\n            }, t.liveSocket.getLatencySim() || 0);\\n          });\\n        }\\n      }]), e;\\n    }(),\\n        ae = function (e) {\\n      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\\n          n = new FormData(e),\\n          i = [];\\n      n.forEach(function (e, t, n) {\\n        e instanceof File && i.push(t);\\n      }), i.forEach(function (e) {\\n        return n.delete(e);\\n      });\\n\\n      var r,\\n          o = new URLSearchParams(),\\n          a = function (e) {\\n        if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\\n          if (Array.isArray(e) || (e = L(e))) {\\n            var t = 0,\\n                n = function () {};\\n\\n            return {\\n              s: n,\\n              n: function () {\\n                return t >= e.length ? {\\n                  done: !0\\n                } : {\\n                  done: !1,\\n                  value: e[t++]\\n                };\\n              },\\n              e: function (e) {\\n                throw e;\\n              },\\n              f: n\\n            };\\n          }\\n\\n          throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\\n        }\\n\\n        var i,\\n            r,\\n            o = !0,\\n            a = !1;\\n        return {\\n          s: function () {\\n            i = e[Symbol.iterator]();\\n          },\\n          n: function () {\\n            var e = i.next();\\n            return o = e.done, e;\\n          },\\n          e: function (e) {\\n            a = !0, r = e;\\n          },\\n          f: function () {\\n            try {\\n              o || null == i.return || i.return();\\n            } finally {\\n              if (a) throw r;\\n            }\\n          }\\n        };\\n      }(n.entries());\\n\\n      try {\\n        for (a.s(); !(r = a.n()).done;) {\\n          var u = x(r.value, 2),\\n              s = u[0],\\n              c = u[1];\\n          o.append(s, c);\\n        }\\n      } catch (e) {\\n        a.e(e);\\n      } finally {\\n        a.f();\\n      }\\n\\n      for (var l in t) o.append(l, t[l]);\\n\\n      return o.toString();\\n    },\\n        ue = function () {\\n      function e(t, n) {\\n        T(this, e), this.viewId = t, this.rendered = {}, this.mergeDiff(n);\\n      }\\n\\n      return _(e, null, [{\\n        key: \"extract\",\\n        value: function (e) {\\n          var t = e.r,\\n              n = e.e,\\n              i = e.t;\\n          return delete e.r, delete e.e, delete e.t, {\\n            diff: e,\\n            title: i,\\n            reply: t || null,\\n            events: n || []\\n          };\\n        }\\n      }]), _(e, [{\\n        key: \"parentViewId\",\\n        value: function () {\\n          return this.viewId;\\n        }\\n      }, {\\n        key: \"toString\",\\n        value: function (e) {\\n          return this.recursiveToString(this.rendered, this.rendered.c, e);\\n        }\\n      }, {\\n        key: \"recursiveToString\",\\n        value: function (e) {\\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e.c,\\n              n = arguments.length > 2 ? arguments[2] : void 0,\\n              i = {\\n            buffer: \"\",\\n            components: t,\\n            onlyCids: n = n ? new Set(n) : null\\n          };\\n          return this.toOutputBuffer(e, i), i.buffer;\\n        }\\n      }, {\\n        key: \"componentCIDs\",\\n        value: function (e) {\\n          return Object.keys(e.c || {}).map(function (e) {\\n            return parseInt(e);\\n          });\\n        }\\n      }, {\\n        key: \"isComponentOnlyDiff\",\\n        value: function (e) {\\n          return !!e.c && 1 === Object.keys(e).length;\\n        }\\n      }, {\\n        key: \"getComponent\",\\n        value: function (e, t) {\\n          return e.c[t];\\n        }\\n      }, {\\n        key: \"mergeDiff\",\\n        value: function (e) {\\n          var t = e.c;\\n\\n          if (delete e.c, this.rendered = this.recursiveMerge(this.rendered, e), this.rendered.c = this.rendered.c || {}, t) {\\n            var n = this.rendered.c;\\n\\n            for (var i in t) {\\n              var r = t[i],\\n                  o = r,\\n                  a = o.s;\\n\\n              if (\"number\" == typeof a) {\\n                for (; \"number\" == typeof a;) a = (o = a > 0 ? t[a] : n[-a]).s;\\n\\n                o = $(o), this.doRecursiveMerge(o, r), o.s = a;\\n              } else o = n[i] || {}, o = this.recursiveMerge(o, r);\\n\\n              t[i] = o;\\n            }\\n\\n            for (var u in t) n[u] = t[u];\\n\\n            e.c = t;\\n          }\\n        }\\n      }, {\\n        key: \"recursiveMerge\",\\n        value: function (e, t) {\\n          return void 0 !== t.s ? t : (this.doRecursiveMerge(e, t), e);\\n        }\\n      }, {\\n        key: \"doRecursiveMerge\",\\n        value: function (e, t) {\\n          for (var n in t) {\\n            var i = t[n],\\n                r = e[n];\\n            Y(i) && void 0 === i.s && Y(r) ? this.doRecursiveMerge(r, i) : e[n] = i;\\n          }\\n        }\\n      }, {\\n        key: \"componentToString\",\\n        value: function (e) {\\n          return this.recursiveCIDToString(this.rendered.c, e);\\n        }\\n      }, {\\n        key: \"pruneCIDs\",\\n        value: function (e) {\\n          var t = this;\\n          e.forEach(function (e) {\\n            return delete t.rendered.c[e];\\n          });\\n        }\\n      }, {\\n        key: \"get\",\\n        value: function () {\\n          return this.rendered;\\n        }\\n      }, {\\n        key: \"isNewFingerprint\",\\n        value: function () {\\n          return !!(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).s;\\n        }\\n      }, {\\n        key: \"toOutputBuffer\",\\n        value: function (e, t) {\\n          if (e.d) return this.comprehensionToBuffer(e, t);\\n          var n = e.s;\\n          t.buffer += n[0];\\n\\n          for (var i = 1; i < n.length; i++) this.dynamicToBuffer(e[i - 1], t), t.buffer += n[i];\\n        }\\n      }, {\\n        key: \"comprehensionToBuffer\",\\n        value: function (e, t) {\\n          for (var n = e.d, i = e.s, r = 0; r < n.length; r++) {\\n            var o = n[r];\\n            t.buffer += i[0];\\n\\n            for (var a = 1; a < i.length; a++) this.dynamicToBuffer(o[a - 1], t), t.buffer += i[a];\\n          }\\n        }\\n      }, {\\n        key: \"dynamicToBuffer\",\\n        value: function (e, t) {\\n          \"number\" == typeof e ? t.buffer += this.recursiveCIDToString(t.components, e, t.onlyCids) : Y(e) ? this.toOutputBuffer(e, t) : t.buffer += e;\\n        }\\n      }, {\\n        key: \"recursiveCIDToString\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = e[t] || z(\"no component for CID \".concat(t), e),\\n              o = document.createElement(\"template\");\\n          o.innerHTML = this.recursiveToString(r, e, n);\\n          var a = o.content,\\n              u = n && !n.has(t),\\n              s = x(Array.from(a.childNodes).reduce(function (e, n, r) {\\n            var a = x(e, 2),\\n                s = a[0],\\n                c = a[1];\\n            return n.nodeType === Node.ELEMENT_NODE ? n.getAttribute(H) ? [s, !0] : (n.setAttribute(H, t), n.id || (n.id = \"\".concat(i.parentViewId(), \"-\").concat(t, \"-\").concat(r)), u && (n.setAttribute(\"data-phx-skip\", \"\"), n.innerHTML = \"\"), [!0, c]) : \"\" !== n.nodeValue.trim() ? (z(\"only HTML element tags are allowed at the root of components.\\\\n\\\\n\" + \\'got: \"\\'.concat(n.nodeValue.trim(), \\'\"\\\\n\\\\n\\') + \"within:\\\\n\", o.innerHTML.trim()), n.replaceWith(i.createSpan(n.nodeValue, t)), [!0, c]) : (n.remove(), [s, c]);\\n          }, [!1, !1]), 2),\\n              c = s[0],\\n              l = s[1];\\n          return c || l ? !c && l ? (z(\"expected at least one HTML element tag directly inside a component, but only subcomponents were found. A component must render at least one HTML tag directly inside itself.\", o.innerHTML.trim()), o.innerHTML) : o.innerHTML : (z(\"expected at least one HTML element tag inside a component, but the component is empty:\\\\n\", o.innerHTML.trim()), this.createSpan(\"\", t).outerHTML);\\n        }\\n      }, {\\n        key: \"createSpan\",\\n        value: function (e, t) {\\n          var n = document.createElement(\"span\");\\n          return n.innerText = e, n.setAttribute(H, t), n;\\n        }\\n      }]), e;\\n    }(),\\n        se = function () {\\n      function e(t, n) {\\n        var i = this,\\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\\n        if (T(this, e), this.unloaded = !1, !n || \"Object\" === n.constructor.name) throw new Error(\\'\\\\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\\\\n\\\\n          import {Socket} from \"phoenix\"\\\\n          import {LiveSocket} from \"phoenix_live_view\"\\\\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\\\\n      \\');\\n        this.socket = new n(t, r), this.bindingPrefix = r.bindingPrefix || W, this.opts = r, this.params = X(r.params || {}), this.viewLogger = r.viewLogger, this.metadataCallbacks = r.metadata || {}, this.defaults = Object.assign($(q), r.defaults || {}), this.activeElement = null, this.prevActive = null, this.silenced = !1, this.main = null, this.linkRef = 0, this.roots = {}, this.href = window.location.href, this.pendingLink = null, this.currentLocation = $(window.location), this.hooks = r.hooks || {}, this.uploaders = r.uploaders || {}, this.loaderTimeout = r.loaderTimeout || V, this.boundTopLevelEvents = !1, this.domCallbacks = Object.assign({\\n          onNodeAdded: X(),\\n          onBeforeElUpdated: X()\\n        }, r.dom || {}), window.addEventListener(\"unload\", function (e) {\\n          i.unloaded = !0;\\n        }), this.socket.onOpen(function () {\\n          i.isUnloaded() && window.location.reload();\\n        });\\n      }\\n\\n      return _(e, [{\\n        key: \"isProfileEnabled\",\\n        value: function () {\\n          return \"true\" === sessionStorage.getItem(\"phx:live-socket:profiling\");\\n        }\\n      }, {\\n        key: \"isDebugEnabled\",\\n        value: function () {\\n          return \"true\" === sessionStorage.getItem(\"phx:live-socket:debug\");\\n        }\\n      }, {\\n        key: \"enableDebug\",\\n        value: function () {\\n          sessionStorage.setItem(\"phx:live-socket:debug\", \"true\");\\n        }\\n      }, {\\n        key: \"enableProfiling\",\\n        value: function () {\\n          sessionStorage.setItem(\"phx:live-socket:profiling\", \"true\");\\n        }\\n      }, {\\n        key: \"disableDebug\",\\n        value: function () {\\n          sessionStorage.removeItem(\"phx:live-socket:debug\");\\n        }\\n      }, {\\n        key: \"disableProfiling\",\\n        value: function () {\\n          sessionStorage.removeItem(\"phx:live-socket:profiling\");\\n        }\\n      }, {\\n        key: \"enableLatencySim\",\\n        value: function (e) {\\n          this.enableDebug(), console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\"), sessionStorage.setItem(\"phx:live-socket:latency-sim\", e);\\n        }\\n      }, {\\n        key: \"disableLatencySim\",\\n        value: function () {\\n          sessionStorage.removeItem(\"phx:live-socket:latency-sim\");\\n        }\\n      }, {\\n        key: \"getLatencySim\",\\n        value: function () {\\n          var e = sessionStorage.getItem(\"phx:live-socket:latency-sim\");\\n          return e ? parseInt(e) : null;\\n        }\\n      }, {\\n        key: \"getSocket\",\\n        value: function () {\\n          return this.socket;\\n        }\\n      }, {\\n        key: \"connect\",\\n        value: function () {\\n          var e = this,\\n              t = function () {\\n            e.joinRootViews() && (e.bindTopLevelEvents(), e.socket.connect());\\n          };\\n\\n          [\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0 ? t() : document.addEventListener(\"DOMContentLoaded\", function () {\\n            return t();\\n          });\\n        }\\n      }, {\\n        key: \"disconnect\",\\n        value: function (e) {\\n          this.socket.disconnect(e);\\n        }\\n      }, {\\n        key: \"triggerDOM\",\\n        value: function (e, t) {\\n          var n;\\n          (n = this.domCallbacks)[e].apply(n, A(t));\\n        }\\n      }, {\\n        key: \"time\",\\n        value: function (e, t) {\\n          if (!this.isProfileEnabled() || !console.time) return t();\\n          console.time(e);\\n          var n = t();\\n          return console.timeEnd(e), n;\\n        }\\n      }, {\\n        key: \"log\",\\n        value: function (e, t, n) {\\n          if (this.viewLogger) {\\n            var i = x(n(), 2),\\n                r = i[0],\\n                o = i[1];\\n            this.viewLogger(e, t, r, o);\\n          } else if (this.isDebugEnabled()) {\\n            var a = x(n(), 2),\\n                u = a[0],\\n                s = a[1];\\n            K(e, t, u, s);\\n          }\\n        }\\n      }, {\\n        key: \"onChannel\",\\n        value: function (e, t, n) {\\n          var i = this;\\n          e.on(t, function (e) {\\n            var t = i.getLatencySim();\\n            t ? (console.log(\"simulating \".concat(t, \"ms of latency from server to client\")), setTimeout(function () {\\n              return n(e);\\n            }, t)) : n(e);\\n          });\\n        }\\n      }, {\\n        key: \"wrapPush\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = this.getLatencySim(),\\n              o = e.joinCount;\\n          if (!r) return t.timeout ? n().receive(\"timeout\", function () {\\n            e.joinCount === o && i.reloadWithJitter(e, function () {\\n              i.log(e, \"timeout\", function () {\\n                return [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"];\\n              });\\n            });\\n          }) : n();\\n          console.log(\"simulating \".concat(r, \"ms of latency from client to server\"));\\n          var a = {\\n            receives: [],\\n            receive: function (e, t) {\\n              this.receives.push([e, t]);\\n            }\\n          };\\n          return setTimeout(function () {\\n            a.receives.reduce(function (e, t) {\\n              var n = x(t, 2),\\n                  i = n[0],\\n                  r = n[1];\\n              return e.receive(i, r);\\n            }, n());\\n          }, r), a;\\n        }\\n      }, {\\n        key: \"reloadWithJitter\",\\n        value: function (e, t) {\\n          var n = this;\\n          e.destroy(), this.disconnect();\\n          var i = R[0],\\n              r = R[1],\\n              o = Math.floor(Math.random() * (r - i + 1)) + i,\\n              a = ce.updateLocal(e.name(), \"consecutive-reloads\", 0, function (e) {\\n            return e + 1;\\n          });\\n          t ? t() : this.log(e, \"join\", function () {\\n            return [\"encountered \".concat(a, \" consecutive reloads\")];\\n          }), a > 10 && (this.log(e, \"join\", function () {\\n            return [\"exceeded \".concat(10, \" consecutive reloads. Entering failsafe mode\")];\\n          }), o = 3e4), setTimeout(function () {\\n            n.hasPendingLink() ? window.location = n.pendingLink : window.location.reload();\\n          }, o);\\n        }\\n      }, {\\n        key: \"getHookCallbacks\",\\n        value: function (e) {\\n          return e && e.startsWith(\"Phoenix.\") ? te[e.split(\".\")[1]] : this.hooks[e];\\n        }\\n      }, {\\n        key: \"isUnloaded\",\\n        value: function () {\\n          return this.unloaded;\\n        }\\n      }, {\\n        key: \"isConnected\",\\n        value: function () {\\n          return this.socket.isConnected();\\n        }\\n      }, {\\n        key: \"getBindingPrefix\",\\n        value: function () {\\n          return this.bindingPrefix;\\n        }\\n      }, {\\n        key: \"binding\",\\n        value: function (e) {\\n          return \"\".concat(this.getBindingPrefix()).concat(e);\\n        }\\n      }, {\\n        key: \"channel\",\\n        value: function (e, t) {\\n          return this.socket.channel(e, t);\\n        }\\n      }, {\\n        key: \"joinRootViews\",\\n        value: function () {\\n          var e = this,\\n              t = !1;\\n          return le.all(document, \"\".concat(U, \":not([\").concat(\"data-phx-parent-id\", \"])\"), function (n) {\\n            if (!e.getRootById(n.id)) {\\n              var i = e.joinRootView(n, e.getHref());\\n              e.root = e.root || i, n.getAttribute(\"data-phx-main\") && (e.main = i);\\n            }\\n\\n            t = !0;\\n          }), t;\\n        }\\n      }, {\\n        key: \"redirect\",\\n        value: function (e, t) {\\n          this.disconnect(), ce.redirect(e, t);\\n        }\\n      }, {\\n        key: \"replaceMain\",\\n        value: function (e, t) {\\n          var n = this,\\n              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,\\n              r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.setPendingLink(e),\\n              o = this.main.el;\\n          this.main.showLoader(this.loaderTimeout), this.main.destroy(), ce.fetchPage(e, function (a, u) {\\n            if (200 !== a) return n.redirect(e);\\n            var s = document.createElement(\"template\");\\n            s.innerHTML = u;\\n            var c = s.content.childNodes[0];\\n            if (!c || !n.isPhxView(c)) return n.redirect(e);\\n            n.joinRootView(c, e, t, function (e, t) {\\n              1 === t && (n.commitPendingLink(r) ? (o.replaceWith(e.el), n.main = e, i && i()) : e.destroy());\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"isPhxView\",\\n        value: function (e) {\\n          return e.getAttribute && null !== e.getAttribute(O);\\n        }\\n      }, {\\n        key: \"joinRootView\",\\n        value: function (e, t, n, i) {\\n          var r = new fe(e, this, null, t, n);\\n          return this.roots[r.id] = r, r.join(i), r;\\n        }\\n      }, {\\n        key: \"owner\",\\n        value: function (e, t) {\\n          var n = this,\\n              i = Z(e.closest(U), function (e) {\\n            return n.getViewByEl(e);\\n          });\\n          i && t(i);\\n        }\\n      }, {\\n        key: \"withinOwners\",\\n        value: function (e, t) {\\n          var n = this;\\n          this.owner(e, function (i) {\\n            var r = e.getAttribute(n.binding(\"target\"));\\n            null === r ? t(i, e) : i.withinTargets(r, t);\\n          });\\n        }\\n      }, {\\n        key: \"getViewByEl\",\\n        value: function (e) {\\n          var t = e.getAttribute(\"data-phx-root-id\");\\n          return Z(this.getRootById(t), function (t) {\\n            return t.getDescendentByEl(e);\\n          });\\n        }\\n      }, {\\n        key: \"getRootById\",\\n        value: function (e) {\\n          return this.roots[e];\\n        }\\n      }, {\\n        key: \"destroyAllViews\",\\n        value: function () {\\n          for (var e in this.roots) this.roots[e].destroy(), delete this.roots[e];\\n        }\\n      }, {\\n        key: \"destroyViewByEl\",\\n        value: function (e) {\\n          var t = this.getRootById(e.getAttribute(\"data-phx-root-id\"));\\n          t && t.destroyDescendent(e.id);\\n        }\\n      }, {\\n        key: \"setActiveElement\",\\n        value: function (e) {\\n          var t = this;\\n\\n          if (this.activeElement !== e) {\\n            this.activeElement = e;\\n\\n            var n = function () {\\n              e === t.activeElement && (t.activeElement = null), e.removeEventListener(\"mouseup\", t), e.removeEventListener(\"touchend\", t);\\n            };\\n\\n            e.addEventListener(\"mouseup\", n), e.addEventListener(\"touchend\", n);\\n          }\\n        }\\n      }, {\\n        key: \"getActiveElement\",\\n        value: function () {\\n          return document.activeElement === document.body ? this.activeElement || document.activeElement : document.activeElement || document.body;\\n        }\\n      }, {\\n        key: \"dropActiveElement\",\\n        value: function (e) {\\n          this.prevActive && e.ownsElement(this.prevActive) && (this.prevActive = null);\\n        }\\n      }, {\\n        key: \"restorePreviouslyActiveFocus\",\\n        value: function () {\\n          this.prevActive && this.prevActive !== document.body && this.prevActive.focus();\\n        }\\n      }, {\\n        key: \"blurActiveElement\",\\n        value: function () {\\n          this.prevActive = this.getActiveElement(), this.prevActive !== document.body && this.prevActive.blur();\\n        }\\n      }, {\\n        key: \"bindTopLevelEvents\",\\n        value: function () {\\n          var e = this;\\n          this.boundTopLevelEvents || (this.boundTopLevelEvents = !0, document.body.addEventListener(\"click\", function () {}), window.addEventListener(\"pageshow\", function (t) {\\n            t.persisted && (e.withPageLoading({\\n              to: window.location.href,\\n              kind: \"redirect\"\\n            }), window.location.reload());\\n          }), this.bindClicks(), this.bindNav(), this.bindForms(), this.bind({\\n            keyup: \"keyup\",\\n            keydown: \"keydown\"\\n          }, function (t, n, i, r, o, a, u) {\\n            var s = r.getAttribute(e.binding(\"key\")),\\n                c = t.key && t.key.toLowerCase();\\n            s && s.toLowerCase() !== c || i.pushKey(r, o, n, a, function (e) {\\n              for (var t = 1; t < arguments.length; t++) {\\n                var n = null != arguments[t] ? arguments[t] : {};\\n                t % 2 ? w(Object(n), !0).forEach(function (t) {\\n                  E(e, t, n[t]);\\n                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : w(Object(n)).forEach(function (t) {\\n                  Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\\n                });\\n              }\\n\\n              return e;\\n            }({\\n              key: t.key\\n            }, e.eventMeta(n, t, r)));\\n          }), this.bind({\\n            blur: \"focusout\",\\n            focus: \"focusin\"\\n          }, function (t, n, i, r, o, a, u) {\\n            u || i.pushEvent(n, r, o, a, e.eventMeta(n, t, r));\\n          }), this.bind({\\n            blur: \"blur\",\\n            focus: \"focus\"\\n          }, function (t, n, i, r, o, a, u) {\\n            u && \"window\" !== !u && i.pushEvent(n, r, o, a, e.eventMeta(n, t, r));\\n          }), window.addEventListener(\"dragover\", function (e) {\\n            return e.preventDefault();\\n          }), window.addEventListener(\"drop\", function (t) {\\n            t.preventDefault();\\n            var n = Z(G(t.target, e.binding(\"drop-target\")), function (t) {\\n              return t.getAttribute(e.binding(\"drop-target\"));\\n            }),\\n                i = n && document.getElementById(n),\\n                r = Array.from(t.dataTransfer.files || []);\\n            i && !i.disabled && 0 !== r.length && i.files instanceof FileList && (ie.trackFiles(i, r), i.dispatchEvent(new Event(\"input\", {\\n              bubbles: !0\\n            })));\\n          }));\\n        }\\n      }, {\\n        key: \"eventMeta\",\\n        value: function (e, t, n) {\\n          var i = this.metadataCallbacks[e];\\n          return i ? i(t, n) : {};\\n        }\\n      }, {\\n        key: \"setPendingLink\",\\n        value: function (e) {\\n          return this.linkRef++, this.pendingLink = e, this.linkRef;\\n        }\\n      }, {\\n        key: \"commitPendingLink\",\\n        value: function (e) {\\n          return this.linkRef === e && (this.href = this.pendingLink, this.pendingLink = null, !0);\\n        }\\n      }, {\\n        key: \"getHref\",\\n        value: function () {\\n          return this.href;\\n        }\\n      }, {\\n        key: \"hasPendingLink\",\\n        value: function () {\\n          return !!this.pendingLink;\\n        }\\n      }, {\\n        key: \"bind\",\\n        value: function (e, t) {\\n          var n = this,\\n              i = function (i) {\\n            var r = e[i];\\n            n.on(r, function (e) {\\n              var r = n.binding(i),\\n                  o = n.binding(\"window-\".concat(i)),\\n                  a = e.target.getAttribute && e.target.getAttribute(r);\\n              a ? n.debounce(e.target, e, function () {\\n                n.withinOwners(e.target, function (n, r) {\\n                  t(e, i, n, e.target, r, a, null);\\n                });\\n              }) : le.all(document, \"[\".concat(o, \"]\"), function (r) {\\n                var a = r.getAttribute(o);\\n                n.debounce(r, e, function () {\\n                  n.withinOwners(r, function (n, o) {\\n                    t(e, i, n, r, o, a, \"window\");\\n                  });\\n                });\\n              });\\n            });\\n          };\\n\\n          for (var r in e) i(r);\\n        }\\n      }, {\\n        key: \"bindClicks\",\\n        value: function () {\\n          this.bindClick(\"click\", \"click\", !1), this.bindClick(\"mousedown\", \"capture-click\", !0);\\n        }\\n      }, {\\n        key: \"bindClick\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = this.binding(t);\\n          window.addEventListener(e, function (e) {\\n            if (i.isConnected()) {\\n              var t = null,\\n                  o = (t = n ? e.target.matches(\"[\".concat(r, \"]\")) ? e.target : e.target.querySelector(\"[\".concat(r, \"]\")) : G(e.target, r)) && t.getAttribute(r);\\n              o && (\"#\" === t.getAttribute(\"href\") && e.preventDefault(), i.debounce(t, e, function () {\\n                i.withinOwners(t, function (n, r) {\\n                  n.pushEvent(\"click\", t, r, o, i.eventMeta(\"click\", e, t));\\n                });\\n              }));\\n            }\\n          }, n);\\n        }\\n      }, {\\n        key: \"bindNav\",\\n        value: function () {\\n          var e = this;\\n\\n          if (ce.canPushState()) {\\n            history.scrollRestoration && (history.scrollRestoration = \"manual\");\\n            var t = null;\\n            window.addEventListener(\"scroll\", function (e) {\\n              clearTimeout(t), t = setTimeout(function () {\\n                ce.updateCurrentState(function (e) {\\n                  return Object.assign(e, {\\n                    scroll: window.scrollY\\n                  });\\n                });\\n              }, 100);\\n            }), window.addEventListener(\"popstate\", function (t) {\\n              if (e.registerNewLocation(window.location)) {\\n                var n = t.state || {},\\n                    i = n.type,\\n                    r = n.id,\\n                    o = n.root,\\n                    a = n.scroll,\\n                    u = window.location.href;\\n                e.main.isConnected() && \"patch\" === i && r === e.main.id ? e.main.pushLinkPatch(u, null) : e.replaceMain(u, null, function () {\\n                  o && e.replaceRootHistory(), \"number\" == typeof a && setTimeout(function () {\\n                    window.scrollTo(0, a);\\n                  }, 0);\\n                });\\n              }\\n            }, !1), window.addEventListener(\"click\", function (t) {\\n              var n = G(t.target, \"data-phx-link\"),\\n                  i = n && n.getAttribute(\"data-phx-link\"),\\n                  r = t.metaKey || t.ctrlKey || 1 === t.button;\\n\\n              if (i && e.isConnected() && e.main && !r) {\\n                var o = n.href,\\n                    a = n.getAttribute(\"data-phx-link-state\");\\n                if (t.preventDefault(), e.pendingLink !== o) if (\"patch\" === i) e.pushHistoryPatch(o, a, n);else {\\n                  if (\"redirect\" !== i) throw new Error(\"expected \".concat(\"data-phx-link\", \\' to be \"patch\" or \"redirect\", got: \\').concat(i));\\n                  e.historyRedirect(o, a);\\n                }\\n              }\\n            }, !1);\\n          }\\n        }\\n      }, {\\n        key: \"withPageLoading\",\\n        value: function (e, t) {\\n          le.dispatchEvent(window, \"phx:page-loading-start\", e);\\n\\n          var n = function () {\\n            return le.dispatchEvent(window, \"phx:page-loading-stop\", e);\\n          };\\n\\n          return t ? t(n) : n;\\n        }\\n      }, {\\n        key: \"pushHistoryPatch\",\\n        value: function (e, t, n) {\\n          var i = this;\\n          this.withPageLoading({\\n            to: e,\\n            kind: \"patch\"\\n          }, function (r) {\\n            i.main.pushLinkPatch(e, n, function () {\\n              i.historyPatch(e, t), r();\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"historyPatch\",\\n        value: function (e, t) {\\n          ce.pushState(t, {\\n            type: \"patch\",\\n            id: this.main.id\\n          }, e), this.registerNewLocation(window.location);\\n        }\\n      }, {\\n        key: \"historyRedirect\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = window.scrollY;\\n          this.withPageLoading({\\n            to: e,\\n            kind: \"redirect\"\\n          }, function (o) {\\n            i.replaceMain(e, n, function () {\\n              ce.pushState(t, {\\n                type: \"redirect\",\\n                id: i.main.id,\\n                scroll: r\\n              }, e), i.registerNewLocation(window.location), o();\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"replaceRootHistory\",\\n        value: function () {\\n          ce.pushState(\"replace\", {\\n            root: !0,\\n            type: \"patch\",\\n            id: this.main.id\\n          });\\n        }\\n      }, {\\n        key: \"registerNewLocation\",\\n        value: function (e) {\\n          var t = this.currentLocation;\\n          return t.pathname + t.search !== e.pathname + e.search && (this.currentLocation = $(e), !0);\\n        }\\n      }, {\\n        key: \"bindForms\",\\n        value: function () {\\n          var e = this,\\n              t = 0;\\n          this.on(\"submit\", function (t) {\\n            var n = t.target.getAttribute(e.binding(\"submit\"));\\n            n && (t.preventDefault(), t.target.disabled = !0, e.withinOwners(t.target, function (e, i) {\\n              return e.submitForm(t.target, i, n);\\n            }));\\n          }, !1);\\n\\n          for (var n = function () {\\n            var n = r[i];\\n            e.on(n, function (i) {\\n              var r = i.target,\\n                  o = r.form && r.form.getAttribute(e.binding(\"change\"));\\n\\n              if (o && (\"number\" !== r.type || !r.validity || !r.validity.badInput)) {\\n                var a = t;\\n                t++;\\n                var u = le.private(r, \"prev-iteration\") || {},\\n                    s = u.at,\\n                    c = u.type;\\n                s === a - 1 && n !== c || (le.putPrivate(r, \"prev-iteration\", {\\n                  at: a,\\n                  type: n\\n                }), e.debounce(r, i, function () {\\n                  e.withinOwners(r.form, function (t, n) {\\n                    le.putPrivate(r, \"phx-has-focused\", !0), le.isTextualInput(r) || e.setActiveElement(r), t.pushInput(r, n, o, i.target);\\n                  });\\n                }));\\n              }\\n            }, !1);\\n          }, i = 0, r = [\"change\", \"input\"]; i < r.length; i++) n();\\n        }\\n      }, {\\n        key: \"debounce\",\\n        value: function (e, t, n) {\\n          var i = this.binding(\"debounce\"),\\n              r = this.binding(\"throttle\"),\\n              o = this.defaults.debounce.toString(),\\n              a = this.defaults.throttle.toString();\\n          le.debounce(e, t, i, o, r, a, n);\\n        }\\n      }, {\\n        key: \"silenceEvents\",\\n        value: function (e) {\\n          this.silenced = !0, e(), this.silenced = !1;\\n        }\\n      }, {\\n        key: \"on\",\\n        value: function (e, t) {\\n          var n = this;\\n          window.addEventListener(e, function (e) {\\n            n.silenced || t(e);\\n          });\\n        }\\n      }]), e;\\n    }(),\\n        ce = {\\n      canPushState: function () {\\n        return void 0 !== history.pushState;\\n      },\\n      dropLocal: function (e, t) {\\n        return window.localStorage.removeItem(this.localKey(e, t));\\n      },\\n      updateLocal: function (e, t, n, i) {\\n        var r = this.getLocal(e, t),\\n            o = this.localKey(e, t),\\n            a = null === r ? n : i(r);\\n        return window.localStorage.setItem(o, JSON.stringify(a)), a;\\n      },\\n      getLocal: function (e, t) {\\n        return JSON.parse(window.localStorage.getItem(this.localKey(e, t)));\\n      },\\n      fetchPage: function (e, t) {\\n        var n = new XMLHttpRequest();\\n        n.open(\"GET\", e, !0), n.timeout = 3e4, n.setRequestHeader(\"content-type\", \"text/html\"), n.setRequestHeader(\"cache-control\", \"max-age=0, no-cache, no-store, must-revalidate, post-check=0, pre-check=0\"), n.setRequestHeader(\"x-requested-with\", \"live-link\"), n.onerror = function () {\\n          return t(400);\\n        }, n.ontimeout = function () {\\n          return t(504);\\n        }, n.onreadystatechange = function () {\\n          if (4 === n.readyState) {\\n            var i = new URL(e),\\n                r = i.pathname + i.search,\\n                o = Z(n.getResponseHeader(\"x-response-url\") || n.responseURL, function (e) {\\n              return new URL(e);\\n            }),\\n                a = o ? o.pathname + o.search : null;\\n            return \"live-link\" !== n.getResponseHeader(\"x-requested-with\") ? t(400) : null === o || a != r ? t(302) : 200 !== n.status ? t(n.status) : void t(200, n.responseText);\\n          }\\n        }, n.send();\\n      },\\n      updateCurrentState: function (e) {\\n        this.canPushState() && history.replaceState(e(history.state || {}), \"\", window.location.href);\\n      },\\n      pushState: function (e, t, n) {\\n        if (this.canPushState()) {\\n          if (n !== window.location.href) {\\n            if (\"redirect\" == t.type && t.scroll) {\\n              var i = history.state || {};\\n              i.scroll = t.scroll, history.replaceState(i, \"\", window.location.href);\\n            }\\n\\n            delete t.scroll, history[e + \"State\"](t, \"\", n || null);\\n            var r = this.getHashTargetEl(window.location.hash);\\n            r ? r.scrollIntoView() : \"redirect\" === t.type && window.scroll(0, 0);\\n          }\\n        } else this.redirect(n);\\n      },\\n      setCookie: function (e, t) {\\n        document.cookie = \"\".concat(e, \"=\").concat(t);\\n      },\\n      getCookie: function (e) {\\n        return document.cookie.replace(new RegExp(\"(?:(?:^|.*;s*)\".concat(e, \"s*=s*([^;]*).*$)|^.*$\")), \"$1\");\\n      },\\n      redirect: function (e, t) {\\n        t && ce.setCookie(\"__phoenix_flash__\", t + \"; max-age=60000; path=/\"), window.location = e;\\n      },\\n      localKey: function (e, t) {\\n        return \"\".concat(e, \"-\").concat(t);\\n      },\\n      getHashTargetEl: function (e) {\\n        var t = e.toString().substring(1);\\n        if (\"\" !== t) return document.getElementById(t) || document.querySelector(\\'a[name=\"\\'.concat(t, \\'\"]\\'));\\n      }\\n    },\\n        le = {\\n      byId: function (e) {\\n        return document.getElementById(e) || z(\"no id found for \".concat(e));\\n      },\\n      removeClass: function (e, t) {\\n        e.classList.remove(t), 0 === e.classList.length && e.removeAttribute(\"class\");\\n      },\\n      all: function (e, t, n) {\\n        var i = Array.from(e.querySelectorAll(t));\\n        return n ? i.forEach(n) : i;\\n      },\\n      childNodeLength: function (e) {\\n        var t = document.createElement(\"template\");\\n        return t.innerHTML = e, t.content.childElementCount;\\n      },\\n      isUploadInput: function (e) {\\n        return \"file\" === e.type && null !== e.getAttribute(M);\\n      },\\n      findUploadInputs: function (e) {\\n        return this.all(e, \\'input[type=\"file\"][\\'.concat(M, \"]\"));\\n      },\\n      findComponentNodeList: function (e, t) {\\n        return this.filterWithinSameLiveView(this.all(e, \"[\".concat(H, \\'=\"\\').concat(t, \\'\"]\\')), e);\\n      },\\n      isPhxDestroyed: function (e) {\\n        return !(!e.id || !le.private(e, \"destroyed\"));\\n      },\\n      markPhxChildDestroyed: function (e) {\\n        e.setAttribute(\"data-phx-session\", \"\"), this.putPrivate(e, \"destroyed\", !0);\\n      },\\n      findPhxChildrenInFragment: function (e, t) {\\n        var n = document.createElement(\"template\");\\n        return n.innerHTML = e, this.findPhxChildren(n.content, t);\\n      },\\n      isIgnored: function (e, t) {\\n        return \"ignore\" === (e.getAttribute(t) || e.getAttribute(\"data-phx-update\"));\\n      },\\n      isPhxUpdate: function (e, t, n) {\\n        return e.getAttribute && n.indexOf(e.getAttribute(t)) >= 0;\\n      },\\n      findPhxChildren: function (e, t) {\\n        return this.all(e, \"\".concat(U, \"[\").concat(\"data-phx-parent-id\", \\'=\"\\').concat(t, \\'\"]\\'));\\n      },\\n      findParentCIDs: function (e, t) {\\n        var n = this,\\n            i = new Set(t);\\n        return t.reduce(function (t, i) {\\n          var r = \"[\".concat(H, \\'=\"\\').concat(i, \\'\"] [\\').concat(H, \"]\");\\n          return n.filterWithinSameLiveView(n.all(e, r), e).map(function (e) {\\n            return parseInt(e.getAttribute(H));\\n          }).forEach(function (e) {\\n            return t.delete(e);\\n          }), t;\\n        }, i);\\n      },\\n      filterWithinSameLiveView: function (e, t) {\\n        var n = this;\\n        return t.querySelector(U) ? e.filter(function (e) {\\n          return n.withinSameLiveView(e, t);\\n        }) : e;\\n      },\\n      withinSameLiveView: function (e, t) {\\n        for (; e = e.parentNode;) {\\n          if (e.isSameNode(t)) return !0;\\n          if (e.getAttribute(O)) return !1;\\n        }\\n      },\\n      private: function (e, t) {\\n        return e.phxPrivate && e.phxPrivate[t];\\n      },\\n      deletePrivate: function (e, t) {\\n        e.phxPrivate && delete e.phxPrivate[t];\\n      },\\n      putPrivate: function (e, t, n) {\\n        e.phxPrivate || (e.phxPrivate = {}), e.phxPrivate[t] = n;\\n      },\\n      copyPrivates: function (e, t) {\\n        t.phxPrivate && (e.phxPrivate = $(t.phxPrivate));\\n      },\\n      putTitle: function (e) {\\n        var t = document.querySelector(\"title\").dataset,\\n            n = t.prefix,\\n            i = t.suffix;\\n        document.title = \"\".concat(n || \"\").concat(e).concat(i || \"\");\\n      },\\n      debounce: function (e, t, n, i, r, o, a) {\\n        var u = this,\\n            s = e.getAttribute(n),\\n            c = e.getAttribute(r);\\n        \"\" === s && (s = i), \"\" === c && (c = o);\\n        var l = s || c;\\n\\n        switch (l) {\\n          case null:\\n            return a();\\n\\n          case \"blur\":\\n            return void (this.once(e, \"debounce-blur\") && e.addEventListener(\"blur\", function () {\\n              return a();\\n            }));\\n\\n          default:\\n            var d = parseInt(l),\\n                h = this.incCycle(e, \"debounce-trigger\", function () {\\n              return c ? u.deletePrivate(e, \"throttled\") : a();\\n            });\\n            if (isNaN(d)) return z(\"invalid throttle/debounce value: \".concat(l));\\n\\n            if (c) {\\n              var f = !1;\\n\\n              if (\"keydown\" === t.type) {\\n                var v = this.private(e, \"debounce-prev-key\");\\n                this.putPrivate(e, \"debounce-prev-key\", t.key), f = v !== t.key;\\n              }\\n\\n              if (!f && this.private(e, \"throttled\")) return !1;\\n              a(), this.putPrivate(e, \"throttled\", !0), setTimeout(function () {\\n                return u.triggerCycle(e, \"debounce-trigger\");\\n              }, d);\\n            } else setTimeout(function () {\\n              return u.triggerCycle(e, \"debounce-trigger\", h);\\n            }, d);\\n\\n            e.form && this.once(e.form, \"bind-debounce\") && e.form.addEventListener(\"submit\", function (t) {\\n              Array.from(new FormData(e.form).entries(), function (t) {\\n                var n = x(t, 2),\\n                    i = n[0],\\n                    r = (n[1], e.form.querySelector(\\'[name=\"\\'.concat(i, \\'\"]\\')));\\n                u.incCycle(r, \"debounce-trigger\"), u.deletePrivate(r, \"throttled\");\\n              });\\n            }), this.once(e, \"bind-debounce\") && e.addEventListener(\"blur\", function (t) {\\n              return u.triggerCycle(e, \"debounce-trigger\");\\n            });\\n        }\\n      },\\n      triggerCycle: function (e, t, n) {\\n        var i = x(this.private(e, t), 2),\\n            r = i[0],\\n            o = i[1];\\n        n || (n = r), n === r && (this.incCycle(e, t), o());\\n      },\\n      once: function (e, t) {\\n        return !0 !== this.private(e, t) && (this.putPrivate(e, t, !0), !0);\\n      },\\n      incCycle: function (e, t) {\\n        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function () {},\\n            i = x(this.private(e, t) || [0, n], 2),\\n            r = i[0];\\n        i[1];\\n        return r++, this.putPrivate(e, t, [r, n]), r;\\n      },\\n      discardError: function (e, t, n) {\\n        var i = t.getAttribute && t.getAttribute(n),\\n            r = i && e.querySelector(\\'[id=\"\\'.concat(i, \\'\"], [name=\"\\').concat(i, \\'\"]\\'));\\n        r && (this.private(r, \"phx-has-focused\") || this.private(r.form, \"phx-has-submitted\") || t.classList.add(\"phx-no-feedback\"));\\n      },\\n      showError: function (e, t) {\\n        var n = this;\\n        (e.id || e.name) && this.all(e.form, \"[\".concat(t, \\'=\"\\').concat(e.id, \\'\"], [\\').concat(t, \\'=\"\\').concat(e.name, \\'\"]\\'), function (e) {\\n          n.removeClass(e, \"phx-no-feedback\");\\n        });\\n      },\\n      isPhxChild: function (e) {\\n        return e.getAttribute && e.getAttribute(\"data-phx-parent-id\");\\n      },\\n      dispatchEvent: function (e, t) {\\n        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\\n            i = new CustomEvent(t, {\\n          bubbles: !0,\\n          cancelable: !0,\\n          detail: n\\n        });\\n        e.dispatchEvent(i);\\n      },\\n      cloneNode: function (e, t) {\\n        if (void 0 === t) return e.cloneNode(!0);\\n        var n = e.cloneNode(!1);\\n        return n.innerHTML = t, n;\\n      },\\n      mergeAttrs: function (e, t) {\\n        for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i = n.exclude || [], r = n.isIgnored, o = t.attributes, a = o.length - 1; a >= 0; a--) {\\n          var u = o[a].name;\\n          i.indexOf(u) < 0 && e.setAttribute(u, t.getAttribute(u));\\n        }\\n\\n        for (var s = e.attributes, c = s.length - 1; c >= 0; c--) {\\n          var l = s[c].name;\\n          r ? l.startsWith(\"data-\") && !t.hasAttribute(l) && e.removeAttribute(l) : t.hasAttribute(l) || e.removeAttribute(l);\\n        }\\n      },\\n      mergeFocusedInput: function (e, t) {\\n        e instanceof HTMLSelectElement || le.mergeAttrs(e, t, {\\n          except: [\"value\"]\\n        }), t.readOnly ? e.setAttribute(\"readonly\", !0) : e.removeAttribute(\"readonly\");\\n      },\\n      hasSelectionRange: function (e) {\\n        return e.setSelectionRange && (\"text\" === e.type || \"textarea\" === e.type);\\n      },\\n      restoreFocus: function (e, t, n) {\\n        if (le.isTextualInput(e)) {\\n          var i = e.matches(\":focus\");\\n          e.readOnly && e.blur(), i || e.focus(), this.hasSelectionRange(e) && e.setSelectionRange(t, n);\\n        }\\n      },\\n      isFormInput: function (e) {\\n        return /^(?:input|select|textarea)$/i.test(e.tagName) && \"button\" !== e.type;\\n      },\\n      syncAttrsToProps: function (e) {\\n        e instanceof HTMLInputElement && J.indexOf(e.type.toLocaleLowerCase()) >= 0 && (e.checked = null !== e.getAttribute(\"checked\"));\\n      },\\n      isTextualInput: function (e) {\\n        return B.indexOf(e.type) >= 0;\\n      },\\n      isNowTriggerFormExternal: function (e, t) {\\n        return e.getAttribute && null !== e.getAttribute(t);\\n      },\\n      syncPendingRef: function (e, t, n) {\\n        var i = e.getAttribute(F);\\n        return null === i || (le.isFormInput(e) || null !== e.getAttribute(n) ? (le.isUploadInput(e) && le.mergeAttrs(e, t, {\\n          isIgnored: !0\\n        }), le.putPrivate(e, F, t), !1) : (j.forEach(function (n) {\\n          e.classList.contains(n) && t.classList.add(n);\\n        }), t.setAttribute(F, i), !0));\\n      },\\n      cleanChildNodes: function (e, t) {\\n        if (le.isPhxUpdate(e, t, [\"append\", \"prepend\"])) {\\n          var n = [];\\n          e.childNodes.forEach(function (e) {\\n            e.id || (e.nodeType === Node.TEXT_NODE && \"\" === e.nodeValue.trim() || z(\"only HTML element tags with an id are allowed inside containers with phx-update.\\\\n\\\\n\" + \\'removing illegal node: \"\\'.concat((e.outerHTML || e.nodeValue).trim(), \\'\"\\\\n\\\\n\\')), n.push(e));\\n          }), n.forEach(function (e) {\\n            return e.remove();\\n          });\\n        }\\n      }\\n    },\\n        de = function () {\\n      function e(t, n, i) {\\n        T(this, e);\\n        var r = new Set(),\\n            o = new Set(A(n.children).map(function (e) {\\n          return e.id;\\n        })),\\n            a = [];\\n        Array.from(t.children).forEach(function (e) {\\n          if (e.id && (r.add(e.id), o.has(e.id))) {\\n            var t = e.previousElementSibling && e.previousElementSibling.id;\\n            a.push({\\n              elementId: e.id,\\n              previousElementId: t\\n            });\\n          }\\n        }), this.containerId = n.id, this.updateType = i, this.elementsToModify = a, this.elementIdsToAdd = A(o).filter(function (e) {\\n          return !r.has(e);\\n        });\\n      }\\n\\n      return _(e, [{\\n        key: \"perform\",\\n        value: function () {\\n          var e = le.byId(this.containerId);\\n          this.elementsToModify.forEach(function (t) {\\n            t.previousElementId ? Z(document.getElementById(t.previousElementId), function (e) {\\n              Z(document.getElementById(t.elementId), function (t) {\\n                t.previousElementSibling && t.previousElementSibling.id == e.id || e.insertAdjacentElement(\"afterend\", t);\\n              });\\n            }) : Z(document.getElementById(t.elementId), function (t) {\\n              null == t.previousElementSibling || e.insertAdjacentElement(\"afterbegin\", t);\\n            });\\n          }), \"prepend\" == this.updateType && this.elementIdsToAdd.reverse().forEach(function (t) {\\n            Z(document.getElementById(t), function (t) {\\n              return e.insertAdjacentElement(\"afterbegin\", t);\\n            });\\n          });\\n        }\\n      }]), e;\\n    }(),\\n        he = function () {\\n      function e(t, n, i, r, o) {\\n        T(this, e), this.view = t, this.liveSocket = t.liveSocket, this.container = n, this.id = i, this.rootID = t.root.id, this.html = r, this.targetCID = o, this.cidPatch = \"number\" == typeof this.targetCID, this.callbacks = {\\n          beforeadded: [],\\n          beforeupdated: [],\\n          beforephxChildAdded: [],\\n          afteradded: [],\\n          afterupdated: [],\\n          afterdiscarded: [],\\n          afterphxChildAdded: []\\n        };\\n      }\\n\\n      return _(e, null, [{\\n        key: \"patchEl\",\\n        value: function (e, t, n) {\\n          b(e, t, {\\n            childrenOnly: !1,\\n            onBeforeElUpdated: function (e, t) {\\n              if (n && n.isSameNode(e) && le.isFormInput(e)) return le.mergeFocusedInput(e, t), !1;\\n            }\\n          });\\n        }\\n      }]), _(e, [{\\n        key: \"before\",\\n        value: function (e, t) {\\n          this.callbacks[\"before\".concat(e)].push(t);\\n        }\\n      }, {\\n        key: \"after\",\\n        value: function (e, t) {\\n          this.callbacks[\"after\".concat(e)].push(t);\\n        }\\n      }, {\\n        key: \"trackBefore\",\\n        value: function (e) {\\n          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];\\n\\n          this.callbacks[\"before\".concat(e)].forEach(function (e) {\\n            return e.apply(void 0, n);\\n          });\\n        }\\n      }, {\\n        key: \"trackAfter\",\\n        value: function (e) {\\n          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];\\n\\n          this.callbacks[\"after\".concat(e)].forEach(function (e) {\\n            return e.apply(void 0, n);\\n          });\\n        }\\n      }, {\\n        key: \"markPrunableContentForRemoval\",\\n        value: function () {\\n          le.all(this.container, \"[phx-update=append] > *, [phx-update=prepend] > *\", function (e) {\\n            e.setAttribute(\"data-phx-remove\", \"\");\\n          });\\n        }\\n      }, {\\n        key: \"perform\",\\n        value: function () {\\n          var e = this,\\n              t = this.view,\\n              n = this.liveSocket,\\n              i = this.container,\\n              r = this.html,\\n              o = this.isCIDPatch() ? this.targetCIDContainer(r) : i;\\n\\n          if (!this.isCIDPatch() || o) {\\n            var a = n.getActiveElement(),\\n                u = a && le.hasSelectionRange(a) ? a : {},\\n                s = u.selectionStart,\\n                c = u.selectionEnd,\\n                l = n.binding(\"update\"),\\n                d = n.binding(\"feedback-for\"),\\n                h = n.binding(\"disable-with\"),\\n                f = n.binding(\"trigger-action\"),\\n                v = [],\\n                p = [],\\n                g = [],\\n                m = null,\\n                y = n.time(\"premorph container prep\", function () {\\n              return e.buildDiffHTML(i, r, l, o);\\n            });\\n            return this.trackBefore(\"added\", i), this.trackBefore(\"updated\", i, i), n.time(\"morphdom\", function () {\\n              b(o, y, {\\n                childrenOnly: null === o.getAttribute(H),\\n                getNodeKey: function (e) {\\n                  return le.isPhxDestroyed(e) ? null : e.id;\\n                },\\n                onBeforeNodeAdded: function (t) {\\n                  return le.discardError(o, t, d), e.trackBefore(\"added\", t), t;\\n                },\\n                onNodeAdded: function (n) {\\n                  le.isNowTriggerFormExternal(n, f) && (m = n), le.isPhxChild(n) && t.ownsElement(n) && e.trackAfter(\"phxChildAdded\", n), v.push(n);\\n                },\\n                onNodeDiscarded: function (t) {\\n                  le.isPhxChild(t) && n.destroyViewByEl(t), e.trackAfter(\"discarded\", t);\\n                },\\n                onBeforeNodeDiscarded: function (t) {\\n                  return !(!t.getAttribute || null === t.getAttribute(\"data-phx-remove\")) || (null === t.parentNode || !le.isPhxUpdate(t.parentNode, l, [\"append\", \"prepend\"]) || !t.id) && !e.skipCIDSibling(t);\\n                },\\n                onElUpdated: function (e) {\\n                  le.isNowTriggerFormExternal(e, f) && (m = e), p.push(e);\\n                },\\n                onBeforeElUpdated: function (t, n) {\\n                  if (le.cleanChildNodes(n, l), e.skipCIDSibling(n)) return !1;\\n                  if (le.isIgnored(t, l)) return e.trackBefore(\"updated\", t, n), le.mergeAttrs(t, n, {\\n                    isIgnored: !0\\n                  }), p.push(t), !1;\\n                  if (\"number\" === t.type && t.validity && t.validity.badInput) return !1;\\n                  if (!le.syncPendingRef(t, n, h)) return le.isUploadInput(t) && (e.trackBefore(\"updated\", t, n), p.push(t)), !1;\\n\\n                  if (le.isPhxChild(n)) {\\n                    var i = t.getAttribute(\"data-phx-session\");\\n                    return le.mergeAttrs(t, n, {\\n                      exclude: [\"data-phx-static\"]\\n                    }), \"\" !== i && t.setAttribute(\"data-phx-session\", i), t.setAttribute(\"data-phx-root-id\", e.rootID), !1;\\n                  }\\n\\n                  return le.copyPrivates(n, t), le.discardError(o, n, d), a && t.isSameNode(a) && le.isFormInput(t) && !e.forceFocusedSelectUpdate(t, n) ? (e.trackBefore(\"updated\", t, n), le.mergeFocusedInput(t, n), le.syncAttrsToProps(t), p.push(t), !1) : (le.isPhxUpdate(n, l, [\"append\", \"prepend\"]) && g.push(new de(t, n, n.getAttribute(l))), le.syncAttrsToProps(n), e.trackBefore(\"updated\", t, n), !0);\\n                }\\n              });\\n            }), n.isDebugEnabled() && function () {\\n              for (var e = new Set(), t = document.querySelectorAll(\"*[id]\"), n = 0, i = t.length; n < i; n++) e.has(t[n].id) ? console.error(\"Multiple IDs detected: \".concat(t[n].id, \". Ensure unique element ids.\")) : e.add(t[n].id);\\n            }(), g.length > 0 && n.time(\"post-morph append/prepend restoration\", function () {\\n              g.forEach(function (e) {\\n                return e.perform();\\n              });\\n            }), n.silenceEvents(function () {\\n              return le.restoreFocus(a, s, c);\\n            }), le.dispatchEvent(document, \"phx:update\"), v.forEach(function (t) {\\n              return e.trackAfter(\"added\", t);\\n            }), p.forEach(function (t) {\\n              return e.trackAfter(\"updated\", t);\\n            }), m && (n.disconnect(), m.submit()), !0;\\n          }\\n        }\\n      }, {\\n        key: \"forceFocusedSelectUpdate\",\\n        value: function (e, t) {\\n          var n = [\"select\", \"select-one\", \"select-multiple\"].find(function (t) {\\n            return t === e.type;\\n          });\\n          return !0 === e.multiple || n && e.innerHTML != t.innerHTML;\\n        }\\n      }, {\\n        key: \"isCIDPatch\",\\n        value: function () {\\n          return this.cidPatch;\\n        }\\n      }, {\\n        key: \"skipCIDSibling\",\\n        value: function (e) {\\n          return e.nodeType === Node.ELEMENT_NODE && null !== e.getAttribute(\"data-phx-skip\");\\n        }\\n      }, {\\n        key: \"targetCIDContainer\",\\n        value: function (e) {\\n          if (this.isCIDPatch()) {\\n            var t = k(le.findComponentNodeList(this.container, this.targetCID)),\\n                n = t[0];\\n            return 0 === t.slice(1).length && 1 === le.childNodeLength(e) ? n : n && n.parentNode;\\n          }\\n        }\\n      }, {\\n        key: \"buildDiffHTML\",\\n        value: function (e, t, n, i) {\\n          var r = this,\\n              o = this.isCIDPatch(),\\n              a = o && i.getAttribute(H) === this.targetCID.toString();\\n          if (!o || a) return t;\\n          var u = null,\\n              s = document.createElement(\"template\");\\n          u = le.cloneNode(i);\\n          var c = k(le.findComponentNodeList(u, this.targetCID)),\\n              l = c[0],\\n              d = c.slice(1);\\n          return s.innerHTML = t, d.forEach(function (e) {\\n            return e.remove();\\n          }), Array.from(u.childNodes).forEach(function (e) {\\n            e.id && e.nodeType === Node.ELEMENT_NODE && e.getAttribute(H) !== r.targetCID.toString() && (e.setAttribute(\"data-phx-skip\", \"\"), e.innerHTML = \"\");\\n          }), Array.from(s.content.childNodes).forEach(function (e) {\\n            return u.insertBefore(e, l);\\n          }), l.remove(), u.outerHTML;\\n        }\\n      }]), e;\\n    }(),\\n        fe = function () {\\n      function e(t, n, i, r, o) {\\n        var a = this;\\n        T(this, e), this.liveSocket = n, this.flash = o, this.parent = i, this.root = i ? i.root : this, this.el = t, this.id = this.el.id, this.view = this.el.getAttribute(O), this.ref = 0, this.childJoins = 0, this.loaderTimer = null, this.pendingDiffs = [], this.pruningCIDs = [], this.href = r, this.joinCount = this.parent ? this.parent.joinCount - 1 : 0, this.joinPending = !0, this.destroyed = !1, this.joinCallback = function () {}, this.stopCallback = function () {}, this.pendingJoinOps = this.parent ? null : [], this.viewHooks = {}, this.uploaders = {}, this.formSubmits = [], this.children = this.parent ? null : {}, this.root.children[this.id] = {}, this.channel = this.liveSocket.channel(\"lv:\".concat(this.id), function () {\\n          return {\\n            url: a.href,\\n            params: a.connectParams(),\\n            session: a.getSession(),\\n            static: a.getStatic(),\\n            flash: a.flash\\n          };\\n        }), this.showLoader(this.liveSocket.loaderTimeout), this.bindChannel();\\n      }\\n\\n      return _(e, [{\\n        key: \"isMain\",\\n        value: function () {\\n          return this.liveSocket.main === this;\\n        }\\n      }, {\\n        key: \"connectParams\",\\n        value: function () {\\n          var e = this.liveSocket.params(this.view),\\n              t = le.all(document, \"[\".concat(this.binding(\"track-static\"), \"]\")).map(function (e) {\\n            return e.src || e.href;\\n          }).filter(function (e) {\\n            return \"string\" == typeof e;\\n          });\\n          return t.length > 0 && (e._track_static = t), e._mounts = this.joinCount, e;\\n        }\\n      }, {\\n        key: \"name\",\\n        value: function () {\\n          return this.view;\\n        }\\n      }, {\\n        key: \"isConnected\",\\n        value: function () {\\n          return this.channel.canPush();\\n        }\\n      }, {\\n        key: \"getSession\",\\n        value: function () {\\n          return this.el.getAttribute(\"data-phx-session\");\\n        }\\n      }, {\\n        key: \"getStatic\",\\n        value: function () {\\n          var e = this.el.getAttribute(\"data-phx-static\");\\n          return \"\" === e ? null : e;\\n        }\\n      }, {\\n        key: \"destroy\",\\n        value: function () {\\n          var e = this,\\n              t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : function () {};\\n          this.destroyAllChildren(), this.destroyed = !0, delete this.root.children[this.id], this.parent && delete this.root.children[this.parent.id][this.id], clearTimeout(this.loaderTimer);\\n\\n          var n = function () {\\n            for (var n in t(), e.viewHooks) e.destroyHook(e.viewHooks[n]);\\n          };\\n\\n          le.markPhxChildDestroyed(this.el), this.log(\"destroyed\", function () {\\n            return [\"the child has been removed from the parent\"];\\n          }), this.channel.leave().receive(\"ok\", n).receive(\"error\", n).receive(\"timeout\", n);\\n        }\\n      }, {\\n        key: \"setContainerClasses\",\\n        value: function () {\\n          var e;\\n          this.el.classList.remove(\"phx-connected\", \"phx-disconnected\", \"phx-error\"), (e = this.el.classList).add.apply(e, arguments);\\n        }\\n      }, {\\n        key: \"isLoading\",\\n        value: function () {\\n          return this.el.classList.contains(\"phx-disconnected\");\\n        }\\n      }, {\\n        key: \"showLoader\",\\n        value: function (e) {\\n          var t = this;\\n          if (clearTimeout(this.loaderTimer), e) this.loaderTimer = setTimeout(function () {\\n            return t.showLoader();\\n          }, e);else {\\n            for (var n in this.viewHooks) this.viewHooks[n].__disconnected();\\n\\n            this.setContainerClasses(\"phx-disconnected\");\\n          }\\n        }\\n      }, {\\n        key: \"hideLoader\",\\n        value: function () {\\n          clearTimeout(this.loaderTimer), this.setContainerClasses(\"phx-connected\");\\n        }\\n      }, {\\n        key: \"triggerReconnected\",\\n        value: function () {\\n          for (var e in this.viewHooks) this.viewHooks[e].__reconnected();\\n        }\\n      }, {\\n        key: \"log\",\\n        value: function (e, t) {\\n          this.liveSocket.log(this, e, t);\\n        }\\n      }, {\\n        key: \"withinTargets\",\\n        value: function (e, t) {\\n          var n = this;\\n\\n          if (/^(0|[1-9]\\\\d*)$/.test(e)) {\\n            var i = le.findComponentNodeList(this.el, e);\\n            0 === i.length ? z(\"no component found matching phx-target of \".concat(e)) : t(this, i[0]);\\n          } else {\\n            var r = Array.from(document.querySelectorAll(e));\\n            0 === r.length && z(\\'nothing found matching the phx-target selector \"\\'.concat(e, \\'\"\\')), r.forEach(function (e) {\\n              return n.liveSocket.owner(e, function (n) {\\n                return t(n, e);\\n              });\\n            });\\n          }\\n        }\\n      }, {\\n        key: \"applyDiff\",\\n        value: function (e, t, n) {\\n          this.log(e, function () {\\n            return [\"\", $(t)];\\n          });\\n          var i = ue.extract(t),\\n              r = i.diff,\\n              o = i.reply,\\n              a = i.events,\\n              u = i.title;\\n          return u && le.putTitle(u), n({\\n            diff: r,\\n            reply: o,\\n            events: a\\n          }), o;\\n        }\\n      }, {\\n        key: \"onJoin\",\\n        value: function (e) {\\n          var t = this,\\n              n = e.rendered;\\n          this.childJoins = 0, this.joinPending = !0, this.flash = null, ce.dropLocal(this.name(), \"consecutive-reloads\"), this.applyDiff(\"mount\", n, function (n) {\\n            var i = n.diff,\\n                r = n.events;\\n            t.rendered = new ue(t.id, i);\\n            var o = t.renderContainer(null, \"join\");\\n            t.dropPendingRefs();\\n            var a = t.formsForRecovery(o);\\n            t.joinCount++, a.length > 0 ? a.forEach(function (e, n) {\\n              t.pushFormRecovery(e, function (e) {\\n                n === a.length - 1 && t.onJoinComplete(e, o, r);\\n              });\\n            }) : t.onJoinComplete(e, o, r);\\n          });\\n        }\\n      }, {\\n        key: \"dropPendingRefs\",\\n        value: function () {\\n          le.all(this.el, \"[\".concat(F, \"]\"), function (e) {\\n            return e.removeAttribute(F);\\n          });\\n        }\\n      }, {\\n        key: \"onJoinComplete\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = e.live_patch;\\n          if (this.joinCount > 1 || this.parent && !this.parent.isJoinPending()) return this.applyJoinPatch(r, t, n);\\n          0 === le.findPhxChildrenInFragment(t, this.id).filter(function (e) {\\n            var t = e.id && i.el.querySelector(\"#\".concat(e.id)),\\n                n = t && t.getAttribute(\"data-phx-static\");\\n            return n && e.setAttribute(\"data-phx-static\", n), i.joinChild(e);\\n          }).length ? this.parent ? (this.root.pendingJoinOps.push([this, function () {\\n            return i.applyJoinPatch(r, t, n);\\n          }]), this.parent.ackJoin(this)) : (this.onAllChildJoinsComplete(), this.applyJoinPatch(r, t, n)) : this.root.pendingJoinOps.push([this, function () {\\n            return i.applyJoinPatch(r, t, n);\\n          }]);\\n        }\\n      }, {\\n        key: \"attachTrueDocEl\",\\n        value: function () {\\n          this.el = le.byId(this.id), this.el.setAttribute(\"data-phx-root-id\", this.root.id);\\n        }\\n      }, {\\n        key: \"dispatchEvents\",\\n        value: function (e) {\\n          e.forEach(function (e) {\\n            var t = x(e, 2),\\n                n = t[0],\\n                i = t[1];\\n            window.dispatchEvent(new CustomEvent(\"phx:hook:\".concat(n), {\\n              detail: i\\n            }));\\n          });\\n        }\\n      }, {\\n        key: \"applyJoinPatch\",\\n        value: function (e, t, n) {\\n          var i = this;\\n          this.attachTrueDocEl();\\n          var r = new he(this, this.el, this.id, t, null);\\n\\n          if (r.markPrunableContentForRemoval(), this.performPatch(r, !1), this.joinNewChildren(), le.all(this.el, \"[\".concat(this.binding(\"hook\"), \"], [data-phx-\").concat(\"hook\", \"]\"), function (e) {\\n            var t = i.addHook(e);\\n            t && t.__mounted();\\n          }), this.joinPending = !1, this.dispatchEvents(n), this.applyPendingUpdates(), e) {\\n            var o = e.kind,\\n                a = e.to;\\n            this.liveSocket.historyPatch(a, o);\\n          }\\n\\n          this.hideLoader(), this.joinCount > 1 && this.triggerReconnected(), this.stopCallback();\\n        }\\n      }, {\\n        key: \"triggerBeforeUpdateHook\",\\n        value: function (e, t) {\\n          this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [e, t]);\\n          var n = this.getHook(e),\\n              i = n && le.isIgnored(e, this.binding(\"update\"));\\n          if (n && !e.isEqualNode(t) && (!i || !function (e, t) {\\n            return JSON.stringify(e) === JSON.stringify(t);\\n          }(e.dataset, t.dataset))) return n.__beforeUpdate(), n;\\n        }\\n      }, {\\n        key: \"performPatch\",\\n        value: function (e, t) {\\n          var n = this,\\n              i = [],\\n              r = !1,\\n              o = new Set();\\n          return e.after(\"added\", function (e) {\\n            n.liveSocket.triggerDOM(\"onNodeAdded\", [e]);\\n            var t = n.addHook(e);\\n            t && t.__mounted();\\n          }), e.after(\"phxChildAdded\", function (e) {\\n            return r = !0;\\n          }), e.before(\"updated\", function (e, t) {\\n            n.triggerBeforeUpdateHook(e, t) && o.add(e.id);\\n          }), e.after(\"updated\", function (e) {\\n            o.has(e.id) && n.getHook(e).__updated();\\n          }), e.after(\"discarded\", function (e) {\\n            var t = n.componentID(e);\\n            \"number\" == typeof t && -1 === i.indexOf(t) && i.push(t);\\n            var r = n.getHook(e);\\n            r && n.destroyHook(r);\\n          }), e.perform(), t && this.maybePushComponentsDestroyed(i), r;\\n        }\\n      }, {\\n        key: \"joinNewChildren\",\\n        value: function () {\\n          var e = this;\\n          le.findPhxChildren(this.el, this.id).forEach(function (t) {\\n            return e.joinChild(t);\\n          });\\n        }\\n      }, {\\n        key: \"getChildById\",\\n        value: function (e) {\\n          return this.root.children[this.id][e];\\n        }\\n      }, {\\n        key: \"getDescendentByEl\",\\n        value: function (e) {\\n          return e.id === this.id ? this : this.children[e.getAttribute(\"data-phx-parent-id\")][e.id];\\n        }\\n      }, {\\n        key: \"destroyDescendent\",\\n        value: function (e) {\\n          for (var t in this.root.children) for (var n in this.root.children[t]) if (n === e) return this.root.children[t][n].destroy();\\n        }\\n      }, {\\n        key: \"joinChild\",\\n        value: function (t) {\\n          if (!this.getChildById(t.id)) {\\n            var n = new e(t, this.liveSocket, this);\\n            return this.root.children[this.id][n.id] = n, n.join(), this.childJoins++, !0;\\n          }\\n        }\\n      }, {\\n        key: \"isJoinPending\",\\n        value: function () {\\n          return this.joinPending;\\n        }\\n      }, {\\n        key: \"ackJoin\",\\n        value: function (e) {\\n          this.childJoins--, 0 === this.childJoins && (this.parent ? this.parent.ackJoin(this) : this.onAllChildJoinsComplete());\\n        }\\n      }, {\\n        key: \"onAllChildJoinsComplete\",\\n        value: function () {\\n          this.joinCallback(), this.pendingJoinOps.forEach(function (e) {\\n            var t = x(e, 2),\\n                n = t[0],\\n                i = t[1];\\n            n.isDestroyed() || i();\\n          }), this.pendingJoinOps = [];\\n        }\\n      }, {\\n        key: \"update\",\\n        value: function (e, t) {\\n          var n = this;\\n          if (this.isJoinPending() || this.liveSocket.hasPendingLink()) return this.pendingDiffs.push({\\n            diff: e,\\n            events: t\\n          });\\n          this.rendered.mergeDiff(e);\\n          var i = !1;\\n          this.rendered.isComponentOnlyDiff(e) ? this.liveSocket.time(\"component patch complete\", function () {\\n            le.findParentCIDs(n.el, n.rendered.componentCIDs(e)).forEach(function (t) {\\n              n.componentPatch(n.rendered.getComponent(e, t), t) && (i = !0);\\n            });\\n          }) : Q(e) || this.liveSocket.time(\"full patch complete\", function () {\\n            var t = n.renderContainer(e, \"update\"),\\n                r = new he(n, n.el, n.id, t, null);\\n            i = n.performPatch(r, !0);\\n          }), this.dispatchEvents(t), i && this.joinNewChildren();\\n        }\\n      }, {\\n        key: \"renderContainer\",\\n        value: function (e, t) {\\n          var n = this;\\n          return this.liveSocket.time(\"toString diff (\".concat(t, \")\"), function () {\\n            var t = n.el.tagName,\\n                i = e ? n.rendered.componentCIDs(e).concat(n.pruningCIDs) : null,\\n                r = n.rendered.toString(i);\\n            return \"<\".concat(t, \">\").concat(r, \"</\").concat(t, \">\");\\n          });\\n        }\\n      }, {\\n        key: \"componentPatch\",\\n        value: function (e, t) {\\n          if (Q(e)) return !1;\\n          var n = this.rendered.componentToString(t),\\n              i = new he(this, this.el, this.id, n, t);\\n          return this.performPatch(i, !0);\\n        }\\n      }, {\\n        key: \"getHook\",\\n        value: function (e) {\\n          return this.viewHooks[pe.elementID(e)];\\n        }\\n      }, {\\n        key: \"addHook\",\\n        value: function (e) {\\n          if (!pe.elementID(e) && e.getAttribute) {\\n            var t = e.getAttribute(\"data-phx-\".concat(\"hook\")) || e.getAttribute(this.binding(\"hook\"));\\n\\n            if (!t || this.ownsElement(e)) {\\n              var n = this.liveSocket.getHookCallbacks(t);\\n\\n              if (n) {\\n                e.id || z(\\'no DOM ID for hook \"\\'.concat(t, \\'\". Hooks require a unique ID on each element.\\'), e);\\n                var i = new pe(this, e, n);\\n                return this.viewHooks[pe.elementID(i.el)] = i, i;\\n              }\\n\\n              null !== t && z(\\'unknown hook found for \"\\'.concat(t, \\'\"\\'), e);\\n            }\\n          }\\n        }\\n      }, {\\n        key: \"destroyHook\",\\n        value: function (e) {\\n          e.__destroyed(), e.__cleanup__(), delete this.viewHooks[pe.elementID(e.el)];\\n        }\\n      }, {\\n        key: \"applyPendingUpdates\",\\n        value: function () {\\n          var e = this;\\n          this.pendingDiffs.forEach(function (t) {\\n            var n = t.diff,\\n                i = t.events;\\n            return e.update(n, i);\\n          }), this.pendingDiffs = [];\\n        }\\n      }, {\\n        key: \"onChannel\",\\n        value: function (e, t) {\\n          var n = this;\\n          this.liveSocket.onChannel(this.channel, e, function (e) {\\n            n.isJoinPending() ? n.root.pendingJoinOps.push([n, function () {\\n              return t(e);\\n            }]) : t(e);\\n          });\\n        }\\n      }, {\\n        key: \"bindChannel\",\\n        value: function () {\\n          var e = this;\\n          this.liveSocket.onChannel(this.channel, \"diff\", function (t) {\\n            e.applyDiff(\"update\", t, function (t) {\\n              var n = t.diff,\\n                  i = t.events;\\n              return e.update(n, i);\\n            });\\n          }), this.onChannel(\"redirect\", function (t) {\\n            var n = t.to,\\n                i = t.flash;\\n            return e.onRedirect({\\n              to: n,\\n              flash: i\\n            });\\n          }), this.onChannel(\"live_patch\", function (t) {\\n            return e.onLivePatch(t);\\n          }), this.onChannel(\"live_redirect\", function (t) {\\n            return e.onLiveRedirect(t);\\n          }), this.channel.onError(function (t) {\\n            return e.onError(t);\\n          }), this.channel.onClose(function (t) {\\n            return e.onClose(t);\\n          });\\n        }\\n      }, {\\n        key: \"destroyAllChildren\",\\n        value: function () {\\n          for (var e in this.root.children[this.id]) this.getChildById(e).destroy();\\n        }\\n      }, {\\n        key: \"onLiveRedirect\",\\n        value: function (e) {\\n          var t = e.to,\\n              n = e.kind,\\n              i = e.flash,\\n              r = this.expandURL(t);\\n          this.liveSocket.historyRedirect(r, n, i);\\n        }\\n      }, {\\n        key: \"onLivePatch\",\\n        value: function (e) {\\n          var t = e.to,\\n              n = e.kind;\\n          this.href = this.expandURL(t), this.liveSocket.historyPatch(t, n);\\n        }\\n      }, {\\n        key: \"expandURL\",\\n        value: function (e) {\\n          return e.startsWith(\"/\") ? \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(e) : e;\\n        }\\n      }, {\\n        key: \"onRedirect\",\\n        value: function (e) {\\n          var t = e.to,\\n              n = e.flash;\\n          this.liveSocket.redirect(t, n);\\n        }\\n      }, {\\n        key: \"isDestroyed\",\\n        value: function () {\\n          return this.destroyed;\\n        }\\n      }, {\\n        key: \"join\",\\n        value: function (e) {\\n          var t = this;\\n          this.parent || (this.stopCallback = this.liveSocket.withPageLoading({\\n            to: this.href,\\n            kind: \"initial\"\\n          })), this.joinCallback = function () {\\n            return e && e(t, t.joinCount);\\n          }, this.liveSocket.wrapPush(this, {\\n            timeout: !1\\n          }, function () {\\n            return t.channel.join().receive(\"ok\", function (e) {\\n              return t.onJoin(e);\\n            }).receive(\"error\", function (e) {\\n              return t.onJoinError(e);\\n            }).receive(\"timeout\", function () {\\n              return t.onJoinError({\\n                reason: \"timeout\"\\n              });\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"onJoinError\",\\n        value: function (e) {\\n          return (e.redirect || e.live_redirect) && (this.joinPending = !1, this.channel.leave()), e.redirect ? this.onRedirect(e.redirect) : e.live_redirect ? this.onLiveRedirect(e.live_redirect) : (this.log(\"error\", function () {\\n            return [\"unable to join\", e];\\n          }), this.liveSocket.reloadWithJitter(this));\\n        }\\n      }, {\\n        key: \"onClose\",\\n        value: function (e) {\\n          if (!this.isDestroyed()) {\\n            if (this.isJoinPending() || this.liveSocket.hasPendingLink() && \"leave\" !== e) return this.liveSocket.reloadWithJitter(this);\\n            this.destroyAllChildren(), this.liveSocket.dropActiveElement(this), document.activeElement && document.activeElement.blur(), this.liveSocket.isUnloaded() && this.showLoader(200);\\n          }\\n        }\\n      }, {\\n        key: \"onError\",\\n        value: function (e) {\\n          this.onClose(e), this.log(\"error\", function () {\\n            return [\"view crashed\", e];\\n          }), this.liveSocket.isUnloaded() || this.displayError();\\n        }\\n      }, {\\n        key: \"displayError\",\\n        value: function () {\\n          this.isMain() && le.dispatchEvent(window, \"phx:page-loading-start\", {\\n            to: this.href,\\n            kind: \"error\"\\n          }), this.showLoader(), this.setContainerClasses(\"phx-disconnected\", \"phx-error\");\\n        }\\n      }, {\\n        key: \"pushWithReply\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function () {},\\n              o = x(e ? e() : [null, []], 2),\\n              a = o[0],\\n              u = x(o[1], 1)[0],\\n              s = function () {};\\n\\n          return u && null !== u.getAttribute(this.binding(\"page-loading\")) && (s = this.liveSocket.withPageLoading({\\n            kind: \"element\",\\n            target: u\\n          })), \"number\" != typeof n.cid && delete n.cid, this.liveSocket.wrapPush(this, {\\n            timeout: !0\\n          }, function () {\\n            return i.channel.push(t, n, 3e4).receive(\"ok\", function (e) {\\n              var t = null;\\n              null !== a && i.undoRefs(a), e.diff && (t = i.applyDiff(\"update\", e.diff, function (e) {\\n                var t = e.diff,\\n                    n = e.events;\\n                i.update(t, n);\\n              })), e.redirect && i.onRedirect(e.redirect), e.live_patch && i.onLivePatch(e.live_patch), e.live_redirect && i.onLiveRedirect(e.live_redirect), s(), r(e, t);\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"undoRefs\",\\n        value: function (e) {\\n          var t = this;\\n          le.all(this.el, \"[\".concat(F, \\'=\"\\').concat(e, \\'\"]\\'), function (e) {\\n            e.removeAttribute(F), null !== e.getAttribute(\"data-phx-readonly\") && (e.readOnly = !1, e.removeAttribute(\"data-phx-readonly\")), null !== e.getAttribute(\"data-phx-disabled\") && (e.disabled = !1, e.removeAttribute(\"data-phx-disabled\")), j.forEach(function (t) {\\n              return le.removeClass(e, t);\\n            });\\n            var n = e.getAttribute(\"data-phx-disable-with-restore\");\\n            null !== n && (e.innerText = n, e.removeAttribute(\"data-phx-disable-with-restore\"));\\n            var i = le.private(e, F);\\n\\n            if (i) {\\n              var r = t.triggerBeforeUpdateHook(e, i);\\n              he.patchEl(e, i, t.liveSocket.getActiveElement()), r && r.__updated(), le.deletePrivate(e, F);\\n            }\\n          });\\n        }\\n      }, {\\n        key: \"putRef\",\\n        value: function (e, t) {\\n          var n = this.ref++,\\n              i = this.binding(\"disable-with\");\\n          return e.forEach(function (e) {\\n            e.classList.add(\"phx-\".concat(t, \"-loading\")), e.setAttribute(F, n);\\n            var r = e.getAttribute(i);\\n            null !== r && (e.getAttribute(\"data-phx-disable-with-restore\") || e.setAttribute(\"data-phx-disable-with-restore\", e.innerText), e.innerText = r);\\n          }), [n, e];\\n        }\\n      }, {\\n        key: \"componentID\",\\n        value: function (e) {\\n          var t = e.getAttribute && e.getAttribute(H);\\n          return t ? parseInt(t) : null;\\n        }\\n      }, {\\n        key: \"targetComponentID\",\\n        value: function (e, t) {\\n          return e.getAttribute(this.binding(\"target\")) ? this.closestComponentID(t) : null;\\n        }\\n      }, {\\n        key: \"closestComponentID\",\\n        value: function (e) {\\n          var t = this;\\n          return e ? Z(e.closest(\"[\".concat(H, \"]\")), function (e) {\\n            return t.ownsElement(e) && t.componentID(e);\\n          }) : null;\\n        }\\n      }, {\\n        key: \"pushHookEvent\",\\n        value: function (e, t, n, i) {\\n          if (!this.isConnected()) return this.log(\"hook\", function () {\\n            return [\"unable to push hook event. LiveView not connected\", t, n];\\n          }), !1;\\n          var r = x(this.putRef([], \"hook\"), 2),\\n              o = r[0],\\n              a = r[1];\\n          return this.pushWithReply(function () {\\n            return [o, a];\\n          }, \"event\", {\\n            type: \"hook\",\\n            event: t,\\n            value: n,\\n            cid: this.closestComponentID(e)\\n          }, function (e, t) {\\n            return i(t, o);\\n          }), o;\\n        }\\n      }, {\\n        key: \"extractMeta\",\\n        value: function (e, t) {\\n          for (var n = this.binding(\"value-\"), i = 0; i < e.attributes.length; i++) {\\n            var r = e.attributes[i].name;\\n            r.startsWith(n) && (t[r.replace(n, \"\")] = e.getAttribute(r));\\n          }\\n\\n          return void 0 !== e.value && (t.value = e.value, \"INPUT\" === e.tagName && J.indexOf(e.type) >= 0 && !e.checked && delete t.value), t;\\n        }\\n      }, {\\n        key: \"pushEvent\",\\n        value: function (e, t, n, i, r) {\\n          var o = this;\\n          this.pushWithReply(function () {\\n            return o.putRef([t], e);\\n          }, \"event\", {\\n            type: e,\\n            event: i,\\n            value: this.extractMeta(t, r),\\n            cid: this.targetComponentID(t, n)\\n          });\\n        }\\n      }, {\\n        key: \"pushKey\",\\n        value: function (e, t, n, i, r) {\\n          var o = this;\\n          this.pushWithReply(function () {\\n            return o.putRef([e], n);\\n          }, \"event\", {\\n            type: n,\\n            event: i,\\n            value: this.extractMeta(e, r),\\n            cid: this.targetComponentID(e, t)\\n          });\\n        }\\n      }, {\\n        key: \"pushFileProgress\",\\n        value: function (e, t, n) {\\n          var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function () {};\\n          this.liveSocket.withinOwners(e.form, function (r, o) {\\n            r.pushWithReply(null, \"progress\", {\\n              event: e.getAttribute(r.binding(\"progress\")),\\n              ref: e.getAttribute(M),\\n              entry_ref: t,\\n              progress: n,\\n              cid: r.targetComponentID(e.form, o)\\n            }, i);\\n          });\\n        }\\n      }, {\\n        key: \"pushInput\",\\n        value: function (e, t, n, i, r) {\\n          var o = this,\\n              a = this.targetComponentID(e.form, t),\\n              u = function () {\\n            return o.putRef([e, e.form], \"change\");\\n          },\\n              s = ae(e.form, {\\n            _target: i.name\\n          });\\n\\n          e.files && e.files.length > 0 && ie.trackFiles(e, Array.from(e.files));\\n          var c = {\\n            type: \"form\",\\n            event: n,\\n            value: s,\\n            uploads: ie.serializeUploads(e),\\n            cid: a\\n          };\\n          this.pushWithReply(u, \"event\", c, function (n) {\\n            if (le.showError(e, o.liveSocket.binding(\"feedback-for\")), le.isUploadInput(e) && null !== e.getAttribute(\"data-phx-auto-upload\")) {\\n              if (ie.filesAwaitingPreflight(e).length > 0) {\\n                var i = x(u(), 2),\\n                    s = i[0];\\n                i[1];\\n                o.uploadFiles(e.form, t, s, a, function (t) {\\n                  r && r(n), o.triggerAwaitingSubmit(e.form);\\n                });\\n              }\\n            } else r && r(n);\\n          });\\n        }\\n      }, {\\n        key: \"triggerAwaitingSubmit\",\\n        value: function (e) {\\n          var t = this.getScheduledSubmit(e);\\n\\n          if (t) {\\n            var n = x(t, 3),\\n                i = (n[0], n[1], n[2]);\\n            this.cancelSubmit(e), i();\\n          }\\n        }\\n      }, {\\n        key: \"getScheduledSubmit\",\\n        value: function (e) {\\n          return this.formSubmits.find(function (t) {\\n            var n = x(t, 2),\\n                i = n[0];\\n            n[1];\\n            return i.isSameNode(e);\\n          });\\n        }\\n      }, {\\n        key: \"scheduleSubmit\",\\n        value: function (e, t, n) {\\n          if (this.getScheduledSubmit(e)) return !0;\\n          this.formSubmits.push([e, t, n]);\\n        }\\n      }, {\\n        key: \"cancelSubmit\",\\n        value: function (e) {\\n          var t = this;\\n          this.formSubmits = this.formSubmits.filter(function (n) {\\n            var i = x(n, 3),\\n                r = i[0],\\n                o = i[1];\\n            i[2];\\n            return !r.isSameNode(e) || (t.undoRefs(o), !1);\\n          });\\n        }\\n      }, {\\n        key: \"pushFormSubmit\",\\n        value: function (e, t, n, i) {\\n          var r = this,\\n              o = function (e) {\\n            return !(G(e, \"\".concat(r.binding(\"update\"), \"=ignore\"), e.form) || G(e, \"data-phx-update=ignore\", e.form));\\n          },\\n              a = function (e) {\\n            return e.hasAttribute(r.binding(\"disable-with\"));\\n          },\\n              u = function (e) {\\n            return \"BUTTON\" == e.tagName;\\n          },\\n              s = function (e) {\\n            return [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(e.tagName);\\n          },\\n              c = function () {\\n            var t = Array.from(e.elements),\\n                n = t.filter(a),\\n                i = t.filter(u).filter(o),\\n                c = t.filter(s).filter(o);\\n            return i.forEach(function (e) {\\n              e.setAttribute(\"data-phx-disabled\", e.disabled), e.disabled = !0;\\n            }), c.forEach(function (e) {\\n              e.setAttribute(\"data-phx-readonly\", e.readOnly), e.readOnly = !0, e.files && (e.setAttribute(\"data-phx-disabled\", e.disabled), e.disabled = !0);\\n            }), e.setAttribute(r.binding(\"page-loading\"), \"\"), r.putRef([e].concat(n).concat(i).concat(c), \"submit\");\\n          },\\n              l = this.targetComponentID(e, t);\\n\\n          if (ie.hasUploadsInProgress(e)) {\\n            var d = x(c(), 2),\\n                h = d[0];\\n            d[1];\\n            return this.scheduleSubmit(e, h, function () {\\n              return r.pushFormSubmit(e, t, n, i);\\n            });\\n          }\\n\\n          if (ie.inputsAwaitingPreflight(e).length > 0) {\\n            var f = x(c(), 2),\\n                v = f[0],\\n                p = f[1],\\n                g = function () {\\n              return [v, p];\\n            };\\n\\n            this.uploadFiles(e, t, v, l, function (t) {\\n              var o = ae(e, {});\\n              r.pushWithReply(g, \"event\", {\\n                type: \"form\",\\n                event: n,\\n                value: o,\\n                cid: l\\n              }, i);\\n            });\\n          } else {\\n            var m = ae(e);\\n            this.pushWithReply(c, \"event\", {\\n              type: \"form\",\\n              event: n,\\n              value: m,\\n              cid: l\\n            }, i);\\n          }\\n        }\\n      }, {\\n        key: \"uploadFiles\",\\n        value: function (e, t, n, i, r) {\\n          var o = this,\\n              a = this.joinCount;\\n          ie.activeFileInputs(e).forEach(function (e) {\\n            var i = new ie(e, o, r);\\n            o.uploaders[e] = i;\\n            var u = i.entries().map(function (e) {\\n              return e.toPreflightPayload();\\n            }),\\n                s = {\\n              ref: e.getAttribute(M),\\n              entries: u,\\n              cid: o.targetComponentID(e.form, t)\\n            };\\n            o.log(\"upload\", function () {\\n              return [\"sending preflight request\", s];\\n            }), o.pushWithReply(null, \"allow_upload\", s, function (e) {\\n              if (o.log(\"upload\", function () {\\n                return [\"got preflight response\", e];\\n              }), e.error) {\\n                o.undoRefs(n);\\n                var t = x(e.error, 2),\\n                    r = t[0],\\n                    u = t[1];\\n                o.log(\"upload\", function () {\\n                  return [\"error for entry \".concat(r), u];\\n                });\\n              } else {\\n                i.initAdapterUpload(e, function (e) {\\n                  o.channel.onError(function () {\\n                    o.joinCount === a && e();\\n                  });\\n                }, o.liveSocket);\\n              }\\n            });\\n          });\\n        }\\n      }, {\\n        key: \"pushFormRecovery\",\\n        value: function (e, t) {\\n          var n = this;\\n          this.liveSocket.withinOwners(e, function (i, r) {\\n            var o = e.elements[0],\\n                a = e.getAttribute(n.binding(\"auto-recover\")) || e.getAttribute(n.binding(\"change\"));\\n            i.pushInput(o, r, a, o, t);\\n          });\\n        }\\n      }, {\\n        key: \"pushLinkPatch\",\\n        value: function (e, t, n) {\\n          var i = this,\\n              r = this.liveSocket.setPendingLink(e),\\n              o = t ? function () {\\n            return i.putRef([t], \"click\");\\n          } : null;\\n          this.pushWithReply(o, \"link\", {\\n            url: e\\n          }, function (t) {\\n            t.link_redirect ? i.liveSocket.replaceMain(e, null, n, r) : i.liveSocket.commitPendingLink(r) && (i.href = e, i.applyPendingUpdates(), n && n());\\n          }).receive(\"timeout\", function () {\\n            return i.liveSocket.redirect(window.location.href);\\n          });\\n        }\\n      }, {\\n        key: \"formsForRecovery\",\\n        value: function (e) {\\n          var t = this;\\n          if (0 === this.joinCount) return [];\\n          var n = this.binding(\"change\"),\\n              i = document.createElement(\"template\");\\n          return i.innerHTML = e, le.all(this.el, \"form[\".concat(n, \"]\")).filter(function (e) {\\n            return t.ownsElement(e);\\n          }).filter(function (e) {\\n            return e.elements.length > 0;\\n          }).filter(function (e) {\\n            return \"ignore\" !== e.getAttribute(t.binding(\"auto-recover\"));\\n          }).filter(function (e) {\\n            return i.content.querySelector(\"form[\".concat(n, \\'=\"\\').concat(e.getAttribute(n), \\'\"]\\'));\\n          });\\n        }\\n      }, {\\n        key: \"maybePushComponentsDestroyed\",\\n        value: function (e) {\\n          var t,\\n              n = this,\\n              i = e.filter(function (e) {\\n            return 0 === le.findComponentNodeList(n.el, e).length;\\n          });\\n          i.length > 0 && ((t = this.pruningCIDs).push.apply(t, A(i)), this.pushWithReply(null, \"cids_will_destroy\", {\\n            cids: i\\n          }, function () {\\n            n.pruningCIDs = n.pruningCIDs.filter(function (e) {\\n              return -1 !== i.indexOf(e);\\n            });\\n            var e = i.filter(function (e) {\\n              return 0 === le.findComponentNodeList(n.el, e).length;\\n            });\\n            e.length > 0 && n.pushWithReply(null, \"cids_destroyed\", {\\n              cids: e\\n            }, function (e) {\\n              n.rendered.pruneCIDs(e.cids);\\n            });\\n          }));\\n        }\\n      }, {\\n        key: \"ownsElement\",\\n        value: function (e) {\\n          return e.getAttribute(\"data-phx-parent-id\") === this.id || Z(e.closest(U), function (e) {\\n            return e.id;\\n          }) === this.id;\\n        }\\n      }, {\\n        key: \"submitForm\",\\n        value: function (e, t, n) {\\n          var i = this;\\n          le.putPrivate(e, \"phx-has-submitted\", !0), this.liveSocket.blurActiveElement(this), this.pushFormSubmit(e, t, n, function () {\\n            i.liveSocket.restorePreviouslyActiveFocus();\\n          });\\n        }\\n      }, {\\n        key: \"binding\",\\n        value: function (e) {\\n          return this.liveSocket.binding(e);\\n        }\\n      }]), e;\\n    }(),\\n        ve = 1,\\n        pe = function () {\\n      function e(t, n, i) {\\n        for (var r in T(this, e), this.__view = t, this.__liveSocket = t.liveSocket, this.__callbacks = i, this.__listeners = new Set(), this.__isDisconnected = !1, this.el = n, this.viewName = t.name(), this.el.phxHookId = this.constructor.makeID(), this.__callbacks) this[r] = this.__callbacks[r];\\n      }\\n\\n      return _(e, null, [{\\n        key: \"makeID\",\\n        value: function () {\\n          return ve++;\\n        }\\n      }, {\\n        key: \"elementID\",\\n        value: function (e) {\\n          return e.phxHookId;\\n        }\\n      }]), _(e, [{\\n        key: \"__mounted\",\\n        value: function () {\\n          this.mounted && this.mounted();\\n        }\\n      }, {\\n        key: \"__updated\",\\n        value: function () {\\n          this.updated && this.updated();\\n        }\\n      }, {\\n        key: \"__beforeUpdate\",\\n        value: function () {\\n          this.beforeUpdate && this.beforeUpdate();\\n        }\\n      }, {\\n        key: \"__destroyed\",\\n        value: function () {\\n          this.destroyed && this.destroyed();\\n        }\\n      }, {\\n        key: \"__reconnected\",\\n        value: function () {\\n          this.__isDisconnected && (this.__isDisconnected = !1, this.reconnected && this.reconnected());\\n        }\\n      }, {\\n        key: \"__disconnected\",\\n        value: function () {\\n          this.__isDisconnected = !0, this.disconnected && this.disconnected();\\n        }\\n      }, {\\n        key: \"pushEvent\",\\n        value: function (e) {\\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\\n              n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function () {};\\n          return this.__view.pushHookEvent(null, e, t, n);\\n        }\\n      }, {\\n        key: \"pushEventTo\",\\n        value: function (e, t) {\\n          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\\n              i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function () {};\\n          return this.__view.withinTargets(e, function (e, r) {\\n            return e.pushHookEvent(r, t, n, i);\\n          });\\n        }\\n      }, {\\n        key: \"handleEvent\",\\n        value: function (e, t) {\\n          var n = function (n, i) {\\n            return i ? e : t(n.detail);\\n          };\\n\\n          return window.addEventListener(\"phx:hook:\".concat(e), n), this.__listeners.add(n), n;\\n        }\\n      }, {\\n        key: \"removeHandleEvent\",\\n        value: function (e) {\\n          var t = e(null, !0);\\n          window.removeEventListener(\"phx:hook:\".concat(t), e), this.__listeners.delete(e);\\n        }\\n      }, {\\n        key: \"__cleanup__\",\\n        value: function () {\\n          var e = this;\\n\\n          this.__listeners.forEach(function (t) {\\n            return e.removeHandleEvent(t);\\n          });\\n        }\\n      }]), e;\\n    }();\\n\\n    t.default = se;\\n  }, function (e, t) {\\n    var n;\\n\\n    n = function () {\\n      return this;\\n    }();\\n\\n    try {\\n      n = n || Function(\"return this\")() || (0, eval)(\"this\");\\n    } catch (e) {\\n      \"object\" == typeof window && (n = window);\\n    }\\n\\n    e.exports = n;\\n  }, function (e, t, n) {\\n    (function (t) {\\n      t.Phoenix || (t.Phoenix = {}), e.exports = t.Phoenix.LiveView = n(0);\\n    }).call(this, n(1));\\n  }]);\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9hbGVhay9zcmMvZmVlZGV4L2RlcHMvcGhvZW5peF9saXZlX3ZpZXcvcHJpdi9zdGF0aWMvcGhvZW5peF9saXZlX3ZpZXcuanM/ZWY3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIhZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSx0KTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzLnBob2VuaXhfbGl2ZV92aWV3PXQoKTplLnBob2VuaXhfbGl2ZV92aWV3PXQoKX0odGhpcyxmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgdD17fTtmdW5jdGlvbiBuKGkpe2lmKHRbaV0pcmV0dXJuIHRbaV0uZXhwb3J0czt2YXIgcj10W2ldPXtpOmksbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtpXS5jYWxsKHIuZXhwb3J0cyxyLHIuZXhwb3J0cyxuKSxyLmw9ITAsci5leHBvcnRzfXJldHVybiBuLm09ZSxuLmM9dCxuLmQ9ZnVuY3Rpb24oZSx0LGkpe24ubyhlLHQpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCxnZXQ6aX0pfSxuLnI9ZnVuY3Rpb24oZSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4ubj1mdW5jdGlvbihlKXt2YXIgdD1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gbi5kKHQsXCJhXCIsdCksdH0sbi5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxuLnA9XCJcIixuKG4ucz0yKX0oW2Z1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtuLnIodCk7dmFyIGkscj0xMTt2YXIgbz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixhPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBkb2N1bWVudD92b2lkIDA6ZG9jdW1lbnQsdT0hIWEmJlwiY29udGVudFwiaW4gYS5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIikscz0hIWEmJmEuY3JlYXRlUmFuZ2UmJlwiY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50XCJpbiBhLmNyZWF0ZVJhbmdlKCk7ZnVuY3Rpb24gYyhlKXtyZXR1cm4gZT1lLnRyaW0oKSx1P2Z1bmN0aW9uKGUpe3ZhciB0PWEuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpO3JldHVybiB0LmlubmVySFRNTD1lLHQuY29udGVudC5jaGlsZE5vZGVzWzBdfShlKTpzP2Z1bmN0aW9uKGUpe3JldHVybiBpfHwoaT1hLmNyZWF0ZVJhbmdlKCkpLnNlbGVjdE5vZGUoYS5ib2R5KSxpLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChlKS5jaGlsZE5vZGVzWzBdfShlKTpmdW5jdGlvbihlKXt2YXIgdD1hLmNyZWF0ZUVsZW1lbnQoXCJib2R5XCIpO3JldHVybiB0LmlubmVySFRNTD1lLHQuY2hpbGROb2Rlc1swXX0oZSl9ZnVuY3Rpb24gbChlLHQpe3ZhciBuLGkscj1lLm5vZGVOYW1lLG89dC5ub2RlTmFtZTtyZXR1cm4gcj09PW98fChuPXIuY2hhckNvZGVBdCgwKSxpPW8uY2hhckNvZGVBdCgwKSxuPD05MCYmaT49OTc/cj09PW8udG9VcHBlckNhc2UoKTppPD05MCYmbj49OTcmJm89PT1yLnRvVXBwZXJDYXNlKCkpfWZ1bmN0aW9uIGQoZSx0LG4pe2Vbbl0hPT10W25dJiYoZVtuXT10W25dLGVbbl0/ZS5zZXRBdHRyaWJ1dGUobixcIlwiKTplLnJlbW92ZUF0dHJpYnV0ZShuKSl9dmFyIGg9e09QVElPTjpmdW5jdGlvbihlLHQpe3ZhciBuPWUucGFyZW50Tm9kZTtpZihuKXt2YXIgaT1uLm5vZGVOYW1lLnRvVXBwZXJDYXNlKCk7XCJPUFRHUk9VUFwiPT09aSYmKGk9KG49bi5wYXJlbnROb2RlKSYmbi5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpKSxcIlNFTEVDVFwiIT09aXx8bi5oYXNBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiKXx8KGUuaGFzQXR0cmlidXRlKFwic2VsZWN0ZWRcIikmJiF0LnNlbGVjdGVkJiYoZS5zZXRBdHRyaWJ1dGUoXCJzZWxlY3RlZFwiLFwic2VsZWN0ZWRcIiksZS5yZW1vdmVBdHRyaWJ1dGUoXCJzZWxlY3RlZFwiKSksbi5zZWxlY3RlZEluZGV4PS0xKX1kKGUsdCxcInNlbGVjdGVkXCIpfSxJTlBVVDpmdW5jdGlvbihlLHQpe2QoZSx0LFwiY2hlY2tlZFwiKSxkKGUsdCxcImRpc2FibGVkXCIpLGUudmFsdWUhPT10LnZhbHVlJiYoZS52YWx1ZT10LnZhbHVlKSx0Lmhhc0F0dHJpYnV0ZShcInZhbHVlXCIpfHxlLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpfSxURVhUQVJFQTpmdW5jdGlvbihlLHQpe3ZhciBuPXQudmFsdWU7ZS52YWx1ZSE9PW4mJihlLnZhbHVlPW4pO3ZhciBpPWUuZmlyc3RDaGlsZDtpZihpKXt2YXIgcj1pLm5vZGVWYWx1ZTtpZihyPT1ufHwhbiYmcj09ZS5wbGFjZWhvbGRlcilyZXR1cm47aS5ub2RlVmFsdWU9bn19LFNFTEVDVDpmdW5jdGlvbihlLHQpe2lmKCF0Lmhhc0F0dHJpYnV0ZShcIm11bHRpcGxlXCIpKXtmb3IodmFyIG4saSxyPS0xLG89MCxhPWUuZmlyc3RDaGlsZDthOylpZihcIk9QVEdST1VQXCI9PT0oaT1hLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkpKWE9KG49YSkuZmlyc3RDaGlsZDtlbHNle2lmKFwiT1BUSU9OXCI9PT1pKXtpZihhLmhhc0F0dHJpYnV0ZShcInNlbGVjdGVkXCIpKXtyPW87YnJlYWt9bysrfSEoYT1hLm5leHRTaWJsaW5nKSYmbiYmKGE9bi5uZXh0U2libGluZyxuPW51bGwpfWUuc2VsZWN0ZWRJbmRleD1yfX19LGY9MSx2PTExLHA9MyxnPTg7ZnVuY3Rpb24gbSgpe31mdW5jdGlvbiB5KGUpe2lmKGUpcmV0dXJuIGUuZ2V0QXR0cmlidXRlJiZlLmdldEF0dHJpYnV0ZShcImlkXCIpfHxlLmlkfXZhciBiPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LG4saSl7aWYoaXx8KGk9e30pLFwic3RyaW5nXCI9PXR5cGVvZiBuKWlmKFwiI2RvY3VtZW50XCI9PT10Lm5vZGVOYW1lfHxcIkhUTUxcIj09PXQubm9kZU5hbWV8fFwiQk9EWVwiPT09dC5ub2RlTmFtZSl7dmFyIHI9bjsobj1hLmNyZWF0ZUVsZW1lbnQoXCJodG1sXCIpKS5pbm5lckhUTUw9cn1lbHNlIG49YyhuKTt2YXIgdT1pLmdldE5vZGVLZXl8fHkscz1pLm9uQmVmb3JlTm9kZUFkZGVkfHxtLGQ9aS5vbk5vZGVBZGRlZHx8bSxiPWkub25CZWZvcmVFbFVwZGF0ZWR8fG0saz1pLm9uRWxVcGRhdGVkfHxtLHc9aS5vbkJlZm9yZU5vZGVEaXNjYXJkZWR8fG0sRT1pLm9uTm9kZURpc2NhcmRlZHx8bSxBPWkub25CZWZvcmVFbENoaWxkcmVuVXBkYXRlZHx8bSxTPSEwPT09aS5jaGlsZHJlbk9ubHkseD1PYmplY3QuY3JlYXRlKG51bGwpLEM9W107ZnVuY3Rpb24gUChlKXtDLnB1c2goZSl9ZnVuY3Rpb24gTChlLHQsbil7ITEhPT13KGUpJiYodCYmdC5yZW1vdmVDaGlsZChlKSxFKGUpLGZ1bmN0aW9uIGUodCxuKXtpZih0Lm5vZGVUeXBlPT09Zilmb3IodmFyIGk9dC5maXJzdENoaWxkO2k7KXt2YXIgcj12b2lkIDA7biYmKHI9dShpKSk/UChyKTooRShpKSxpLmZpcnN0Q2hpbGQmJmUoaSxuKSksaT1pLm5leHRTaWJsaW5nfX0oZSxuKSl9ZnVuY3Rpb24gSShlKXtkKGUpO2Zvcih2YXIgdD1lLmZpcnN0Q2hpbGQ7dDspe3ZhciBuPXQubmV4dFNpYmxpbmcsaT11KHQpO2lmKGkpe3ZhciByPXhbaV07ciYmbCh0LHIpPyh0LnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHIsdCksVChyLHQpKTpJKHQpfWVsc2UgSSh0KTt0PW59fWZ1bmN0aW9uIFQodCxuLGkpe3ZhciByPXUobik7aWYociYmZGVsZXRlIHhbcl0sIWkpe2lmKCExPT09Yih0LG4pKXJldHVybjtpZihlKHQsbiksayh0KSwhMT09PUEodCxuKSlyZXR1cm59XCJURVhUQVJFQVwiIT09dC5ub2RlTmFtZT9mdW5jdGlvbihlLHQpe3ZhciBuLGkscixvLGMsZD10LmZpcnN0Q2hpbGQsdj1lLmZpcnN0Q2hpbGQ7ZTpmb3IoO2Q7KXtmb3Iobz1kLm5leHRTaWJsaW5nLG49dShkKTt2Oyl7aWYocj12Lm5leHRTaWJsaW5nLGQuaXNTYW1lTm9kZSYmZC5pc1NhbWVOb2RlKHYpKXtkPW8sdj1yO2NvbnRpbnVlIGV9aT11KHYpO3ZhciBtPXYubm9kZVR5cGUseT12b2lkIDA7aWYobT09PWQubm9kZVR5cGUmJihtPT09Zj8obj9uIT09aSYmKChjPXhbbl0pP3I9PT1jP3k9ITE6KGUuaW5zZXJ0QmVmb3JlKGMsdiksaT9QKGkpOkwodixlLCEwKSx2PWMpOnk9ITEpOmkmJih5PSExKSwoeT0hMSE9PXkmJmwodixkKSkmJlQodixkKSk6bSE9PXAmJm0hPWd8fCh5PSEwLHYubm9kZVZhbHVlIT09ZC5ub2RlVmFsdWUmJih2Lm5vZGVWYWx1ZT1kLm5vZGVWYWx1ZSkpKSx5KXtkPW8sdj1yO2NvbnRpbnVlIGV9aT9QKGkpOkwodixlLCEwKSx2PXJ9aWYobiYmKGM9eFtuXSkmJmwoYyxkKSllLmFwcGVuZENoaWxkKGMpLFQoYyxkKTtlbHNle3ZhciBiPXMoZCk7ITEhPT1iJiYoYiYmKGQ9YiksZC5hY3R1YWxpemUmJihkPWQuYWN0dWFsaXplKGUub3duZXJEb2N1bWVudHx8YSkpLGUuYXBwZW5kQ2hpbGQoZCksSShkKSl9ZD1vLHY9cn0hZnVuY3Rpb24oZSx0LG4pe2Zvcig7dDspe3ZhciBpPXQubmV4dFNpYmxpbmc7KG49dSh0KSk/UChuKTpMKHQsZSwhMCksdD1pfX0oZSx2LGkpO3ZhciBrPWhbZS5ub2RlTmFtZV07ayYmayhlLHQpfSh0LG4pOmguVEVYVEFSRUEodCxuKX0hZnVuY3Rpb24gZSh0KXtpZih0Lm5vZGVUeXBlPT09Znx8dC5ub2RlVHlwZT09PXYpZm9yKHZhciBuPXQuZmlyc3RDaGlsZDtuOyl7dmFyIGk9dShuKTtpJiYoeFtpXT1uKSxlKG4pLG49bi5uZXh0U2libGluZ319KHQpO3ZhciBEPXQsXz1ELm5vZGVUeXBlLE49bi5ub2RlVHlwZTtpZighUylpZihfPT09ZilOPT09Zj9sKHQsbil8fChFKHQpLEQ9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49ZS5maXJzdENoaWxkO247KXt2YXIgaT1uLm5leHRTaWJsaW5nO3QuYXBwZW5kQ2hpbGQobiksbj1pfXJldHVybiB0fSh0LGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQmJnQhPT1vP2EuY3JlYXRlRWxlbWVudE5TKHQsZSk6YS5jcmVhdGVFbGVtZW50KGUpfShuLm5vZGVOYW1lLG4ubmFtZXNwYWNlVVJJKSkpOkQ9bjtlbHNlIGlmKF89PT1wfHxfPT09Zyl7aWYoTj09PV8pcmV0dXJuIEQubm9kZVZhbHVlIT09bi5ub2RlVmFsdWUmJihELm5vZGVWYWx1ZT1uLm5vZGVWYWx1ZSksRDtEPW59aWYoRD09PW4pRSh0KTtlbHNle2lmKG4uaXNTYW1lTm9kZSYmbi5pc1NhbWVOb2RlKEQpKXJldHVybjtpZihUKEQsbixTKSxDKWZvcih2YXIgUj0wLE89Qy5sZW5ndGg7UjxPO1IrKyl7dmFyIGo9eFtDW1JdXTtqJiZMKGosai5wYXJlbnROb2RlLCExKX19cmV0dXJuIVMmJkQhPT10JiZ0LnBhcmVudE5vZGUmJihELmFjdHVhbGl6ZSYmKEQ9RC5hY3R1YWxpemUodC5vd25lckRvY3VtZW50fHxhKSksdC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChELHQpKSxEfX0oZnVuY3Rpb24oZSx0KXt2YXIgbixpLG8sYSx1PXQuYXR0cmlidXRlcztpZih0Lm5vZGVUeXBlIT09ciYmZS5ub2RlVHlwZSE9PXIpe2Zvcih2YXIgcz11Lmxlbmd0aC0xO3M+PTA7cy0tKWk9KG49dVtzXSkubmFtZSxvPW4ubmFtZXNwYWNlVVJJLGE9bi52YWx1ZSxvPyhpPW4ubG9jYWxOYW1lfHxpLGUuZ2V0QXR0cmlidXRlTlMobyxpKSE9PWEmJihcInhtbG5zXCI9PT1uLnByZWZpeCYmKGk9bi5uYW1lKSxlLnNldEF0dHJpYnV0ZU5TKG8saSxhKSkpOmUuZ2V0QXR0cmlidXRlKGkpIT09YSYmZS5zZXRBdHRyaWJ1dGUoaSxhKTtmb3IodmFyIGM9ZS5hdHRyaWJ1dGVzLGw9Yy5sZW5ndGgtMTtsPj0wO2wtLSlpPShuPWNbbF0pLm5hbWUsKG89bi5uYW1lc3BhY2VVUkkpPyhpPW4ubG9jYWxOYW1lfHxpLHQuaGFzQXR0cmlidXRlTlMobyxpKXx8ZS5yZW1vdmVBdHRyaWJ1dGVOUyhvLGkpKTp0Lmhhc0F0dHJpYnV0ZShpKXx8ZS5yZW1vdmVBdHRyaWJ1dGUoaSl9fSk7ZnVuY3Rpb24gayhlKXtyZXR1cm4gUChlKXx8UyhlKXx8TChlKXx8QygpfWZ1bmN0aW9uIHcoZSx0KXt2YXIgbj1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgaT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihpPWkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKSxuLnB1c2guYXBwbHkobixpKX1yZXR1cm4gbn1mdW5jdGlvbiBFKGUsdCxuKXtyZXR1cm4gdCBpbiBlP09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOm4sZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTplW3RdPW4sZX1mdW5jdGlvbiBBKGUpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBJKGUpfShlKXx8UyhlKXx8TChlKXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiBTKGUpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpcmV0dXJuIEFycmF5LmZyb20oZSl9ZnVuY3Rpb24geChlLHQpe3JldHVybiBQKGUpfHxmdW5jdGlvbihlLHQpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBTeW1ib2x8fCEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSkpcmV0dXJuO3ZhciBuPVtdLGk9ITAscj0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBhLHU9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShpPShhPXUubmV4dCgpKS5kb25lKSYmKG4ucHVzaChhLnZhbHVlKSwhdHx8bi5sZW5ndGghPT10KTtpPSEwKTt9Y2F0Y2goZSl7cj0hMCxvPWV9ZmluYWxseXt0cnl7aXx8bnVsbD09dS5yZXR1cm58fHUucmV0dXJuKCl9ZmluYWxseXtpZihyKXRocm93IG99fXJldHVybiBufShlLHQpfHxMKGUsdCl8fEMoKX1mdW5jdGlvbiBDKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX1mdW5jdGlvbiBQKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9ZnVuY3Rpb24gTChlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBJKGUsdCk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKGUpOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9JKGUsdCk6dm9pZCAwfX1mdW5jdGlvbiBJKGUsdCl7KG51bGw9PXR8fHQ+ZS5sZW5ndGgpJiYodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAsaT1uZXcgQXJyYXkodCk7bjx0O24rKylpW25dPWVbbl07cmV0dXJuIGl9ZnVuY3Rpb24gVChlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gRChlLHQpe2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgaT10W25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxpLmtleSxpKX19ZnVuY3Rpb24gXyhlLHQsbil7cmV0dXJuIHQmJkQoZS5wcm90b3R5cGUsdCksbiYmRChlLG4pLGV9ZnVuY3Rpb24gTihlKXtcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7cmV0dXJuKE49XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0pKGUpfW4uZCh0LFwiZGVidWdcIixmdW5jdGlvbigpe3JldHVybiBLfSksbi5kKHQsXCJSZW5kZXJlZFwiLGZ1bmN0aW9uKCl7cmV0dXJuIHVlfSksbi5kKHQsXCJMaXZlU29ja2V0XCIsZnVuY3Rpb24oKXtyZXR1cm4gc2V9KSxuLmQodCxcIkJyb3dzZXJcIixmdW5jdGlvbigpe3JldHVybiBjZX0pLG4uZCh0LFwiRE9NXCIsZnVuY3Rpb24oKXtyZXR1cm4gbGV9KSxuLmQodCxcIlZpZXdcIixmdW5jdGlvbigpe3JldHVybiBmZX0pO3ZhciBSPVsxZTMsM2UzXSxPPVwiZGF0YS1waHgtdmlld1wiLGo9W1wicGh4LWNsaWNrLWxvYWRpbmdcIixcInBoeC1jaGFuZ2UtbG9hZGluZ1wiLFwicGh4LXN1Ym1pdC1sb2FkaW5nXCIsXCJwaHgta2V5ZG93bi1sb2FkaW5nXCIsXCJwaHgta2V5dXAtbG9hZGluZ1wiLFwicGh4LWJsdXItbG9hZGluZ1wiLFwicGh4LWZvY3VzLWxvYWRpbmdcIl0sSD1cImRhdGEtcGh4LWNvbXBvbmVudFwiLEY9XCJkYXRhLXBoeC1yZWZcIixNPVwiZGF0YS1waHgtdXBsb2FkLXJlZlwiLFU9XCJbXCIuY29uY2F0KE8sXCJdXCIpLEI9W1widGV4dFwiLFwidGV4dGFyZWFcIixcIm51bWJlclwiLFwiZW1haWxcIixcInBhc3N3b3JkXCIsXCJzZWFyY2hcIixcInRlbFwiLFwidXJsXCIsXCJkYXRlXCIsXCJ0aW1lXCJdLEo9W1wiY2hlY2tib3hcIixcInJhZGlvXCJdLFY9MSxXPVwicGh4LVwiLHE9e2RlYm91bmNlOjMwMCx0aHJvdHRsZTozMDB9LHo9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gY29uc29sZS5lcnJvciYmY29uc29sZS5lcnJvcihlLHQpfTt2YXIgSz1mdW5jdGlvbihlLHQsbixpKXtlLmxpdmVTb2NrZXQuaXNEZWJ1Z0VuYWJsZWQoKSYmY29uc29sZS5sb2coXCJcIi5jb25jYXQoZS5pZCxcIiBcIikuY29uY2F0KHQsXCI6IFwiKS5jb25jYXQobixcIiAtIFwiKSxpKX0sWD1mdW5jdGlvbihlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2U6ZnVuY3Rpb24oKXtyZXR1cm4gZX19LCQ9ZnVuY3Rpb24oZSl7cmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZSkpfSxHPWZ1bmN0aW9uKGUsdCxuKXtkb3tpZihlLm1hdGNoZXMoXCJbXCIuY29uY2F0KHQsXCJdXCIpKSlyZXR1cm4gZTtlPWUucGFyZW50RWxlbWVudHx8ZS5wYXJlbnROb2RlfXdoaWxlKG51bGwhPT1lJiYxPT09ZS5ub2RlVHlwZSYmIShuJiZuLmlzU2FtZU5vZGUoZSl8fGUubWF0Y2hlcyhVKSkpO3JldHVybiBudWxsfSxZPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsIT09ZSYmXCJvYmplY3RcIj09PU4oZSkmJiEoZSBpbnN0YW5jZW9mIEFycmF5KX0sUT1mdW5jdGlvbihlKXtmb3IodmFyIHQgaW4gZSlyZXR1cm4hMTtyZXR1cm4hMH0sWj1mdW5jdGlvbihlLHQpe3JldHVybiBlJiZ0KGUpfSxlZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxuLGkpe1QodGhpcyxlKSx0aGlzLnJlZj1pZS5nZW5GaWxlUmVmKG4pLHRoaXMuZmlsZUVsPXQsdGhpcy5maWxlPW4sdGhpcy52aWV3PWksdGhpcy5tZXRhPW51bGwsdGhpcy5faXNDYW5jZWxsZWQ9ITEsdGhpcy5faXNEb25lPSExLHRoaXMuX3Byb2dyZXNzPTAsdGhpcy5fb25Eb25lPWZ1bmN0aW9uKCl7fX1yZXR1cm4gXyhlLG51bGwsW3trZXk6XCJpc0FjdGl2ZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dm9pZCAwPT09dC5fcGh4UmVmLGk9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1hY3RpdmUtcmVmc1wiKS5zcGxpdChcIixcIikuaW5kZXhPZihpZS5nZW5GaWxlUmVmKHQpKT49MDtyZXR1cm4gdC5zaXplPjAmJihufHxpKX19LHtrZXk6XCJpc1ByZWZsaWdodGVkXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LXByZWZsaWdodGVkLXJlZnNcIikuc3BsaXQoXCIsXCIpLmluZGV4T2YoaWUuZ2VuRmlsZVJlZih0KSk+PTA7cmV0dXJuIG4mJnRoaXMuaXNBY3RpdmUoZSx0KX19XSksXyhlLFt7a2V5OlwibWV0YWRhdGFcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1ldGF9fSx7a2V5OlwicHJvZ3Jlc3NcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3RoaXMuX3Byb2dyZXNzPU1hdGguZmxvb3IoZSksdGhpcy5fcHJvZ3Jlc3M+PTEwMD8odGhpcy5fcHJvZ3Jlc3M9MTAwLHRoaXMuX2lzRG9uZT0hMCx0aGlzLnZpZXcucHVzaEZpbGVQcm9ncmVzcyh0aGlzLmZpbGVFbCx0aGlzLnJlZiwxMDAsZnVuY3Rpb24oKXtpZS51bnRyYWNrRmlsZSh0LmZpbGVFbCx0LmZpbGUpLHQuX29uRG9uZSgpfSkpOnRoaXMudmlldy5wdXNoRmlsZVByb2dyZXNzKHRoaXMuZmlsZUVsLHRoaXMucmVmLHRoaXMuX3Byb2dyZXNzKX19LHtrZXk6XCJjYW5jZWxcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2lzQ2FuY2VsbGVkPSEwLHRoaXMuX2lzRG9uZT0hMCx0aGlzLl9vbkRvbmUoKX19LHtrZXk6XCJpc0RvbmVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0RvbmV9fSx7a2V5OlwiZXJyb3JcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcImZhaWxlZFwiO3RoaXMudmlldy5wdXNoRmlsZVByb2dyZXNzKHRoaXMuZmlsZUVsLHRoaXMucmVmLHtlcnJvcjplfSl9fSx7a2V5Olwib25Eb25lXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25Eb25lPWV9fSx7a2V5OlwidG9QcmVmbGlnaHRQYXlsb2FkXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm57bGFzdF9tb2RpZmllZDp0aGlzLmZpbGUubGFzdE1vZGlmaWVkLG5hbWU6dGhpcy5maWxlLm5hbWUsc2l6ZTp0aGlzLmZpbGUuc2l6ZSx0eXBlOnRoaXMuZmlsZS50eXBlLHJlZjp0aGlzLnJlZn19fSx7a2V5OlwidXBsb2FkZXJcIix2YWx1ZTpmdW5jdGlvbihlKXtpZih0aGlzLm1ldGEudXBsb2FkZXIpe3ZhciB0PWVbdGhpcy5tZXRhLnVwbG9hZGVyXXx8eihcIm5vIHVwbG9hZGVyIGNvbmZpZ3VyZWQgZm9yIFwiLmNvbmNhdCh0aGlzLm1ldGEudXBsb2FkZXIpKTtyZXR1cm57bmFtZTp0aGlzLm1ldGEudXBsb2FkZXIsY2FsbGJhY2s6dH19cmV0dXJue25hbWU6XCJjaGFubmVsXCIsY2FsbGJhY2s6cmV9fX0se2tleTpcInppcFBvc3RGbGlnaHRcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLm1ldGE9ZS5lbnRyaWVzW3RoaXMucmVmXSx0aGlzLm1ldGF8fHooXCJubyBwcmVmbGlnaHQgdXBsb2FkIHJlc3BvbnNlIHJldHVybmVkIHdpdGggcmVmIFwiLmNvbmNhdCh0aGlzLnJlZikse2lucHV0OnRoaXMuZmlsZUVsLHJlc3BvbnNlOmV9KX19XSksZX0oKSx0ZT17TGl2ZUZpbGVVcGxvYWQ6e3ByZWZsaWdodGVkUmVmczpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LXByZWZsaWdodGVkLXJlZnNcIil9LG1vdW50ZWQ6ZnVuY3Rpb24oKXt0aGlzLnByZWZsaWdodGVkV2FzPXRoaXMucHJlZmxpZ2h0ZWRSZWZzKCl9LHVwZGF0ZWQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnByZWZsaWdodGVkUmVmcygpO3RoaXMucHJlZmxpZ2h0ZWRXYXMhPT1lJiYodGhpcy5wcmVmbGlnaHRlZFdhcz1lLFwiXCI9PT1lJiZ0aGlzLl9fdmlldy5jYW5jZWxTdWJtaXQodGhpcy5lbC5mb3JtKSl9fX07dGUuTGl2ZUltZ1ByZXZpZXc9e21vdW50ZWQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMucmVmPXRoaXMuZWwuZ2V0QXR0cmlidXRlKFwiZGF0YS1waHgtZW50cnktcmVmXCIpLHRoaXMuaW5wdXRFbD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmVsLmdldEF0dHJpYnV0ZShNKSksaWUuZ2V0RW50cnlEYXRhVVJMKHRoaXMuaW5wdXRFbCx0aGlzLnJlZixmdW5jdGlvbih0KXtyZXR1cm4gZS5lbC5zcmM9dH0pfX07dmFyIG5lPTAsaWU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQsbixpKXtUKHRoaXMsZSksdGhpcy52aWV3PW4sdGhpcy5vbkNvbXBsZXRlPWksdGhpcy5fZW50cmllcz1BcnJheS5mcm9tKGUuZmlsZXNBd2FpdGluZ1ByZWZsaWdodCh0KXx8W10pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbmV3IGVlKHQsZSxuKX0pLHRoaXMubnVtRW50cmllc0luUHJvZ3Jlc3M9dGhpcy5fZW50cmllcy5sZW5ndGh9cmV0dXJuIF8oZSxudWxsLFt7a2V5OlwiZ2VuRmlsZVJlZlwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUuX3BoeFJlZjtyZXR1cm4gdm9pZCAwIT09dD90OihlLl9waHhSZWY9KG5lKyspLnRvU3RyaW5nKCksZS5fcGh4UmVmKX19LHtrZXk6XCJnZXRFbnRyeURhdGFVUkxcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxyPXRoaXMuYWN0aXZlRmlsZXMoZSkuZmluZChmdW5jdGlvbihlKXtyZXR1cm4gaS5nZW5GaWxlUmVmKGUpPT09dH0pLG89bmV3IEZpbGVSZWFkZXI7by5vbmxvYWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZS50YXJnZXQucmVzdWx0KX0sby5yZWFkQXNEYXRhVVJMKHIpfX0se2tleTpcImhhc1VwbG9hZHNJblByb2dyZXNzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9MDtyZXR1cm4gbGUuZmluZFVwbG9hZElucHV0cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuZ2V0QXR0cmlidXRlKFwiZGF0YS1waHgtcHJlZmxpZ2h0ZWQtcmVmc1wiKSE9PWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1waHgtZG9uZS1yZWZzXCIpJiZ0Kyt9KSx0PjB9fSx7a2V5Olwic2VyaWFsaXplVXBsb2Fkc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj17fTtyZXR1cm4gdGhpcy5hY3RpdmVGaWxlcyhlLFwic2VyaWFsaXplXCIpLmZvckVhY2goZnVuY3Rpb24oaSl7dmFyIHI9e3BhdGg6ZS5uYW1lfSxvPWUuZ2V0QXR0cmlidXRlKE0pO25bb109bltvXXx8W10sci5yZWY9dC5nZW5GaWxlUmVmKGkpLHIubmFtZT1pLm5hbWUsci50eXBlPWkudHlwZSxyLnNpemU9aS5zaXplLG5bb10ucHVzaChyKX0pLG59fSx7a2V5OlwiY2xlYXJGaWxlc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe2UudmFsdWU9bnVsbCxsZS5wdXRQcml2YXRlKGUsXCJmaWxlc1wiLFtdKX19LHtrZXk6XCJ1bnRyYWNrRmlsZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7bGUucHV0UHJpdmF0ZShlLFwiZmlsZXNcIixsZS5wcml2YXRlKGUsXCJmaWxlc1wiKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIU9iamVjdC5pcyhlLHQpfSkpfX0se2tleTpcInRyYWNrRmlsZXNcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7aWYobnVsbCE9PWUuZ2V0QXR0cmlidXRlKFwibXVsdGlwbGVcIikpe3ZhciBpPXQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiFuLmFjdGl2ZUZpbGVzKGUpLmZpbmQoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5pcyhlLHQpfSl9KTtsZS5wdXRQcml2YXRlKGUsXCJmaWxlc1wiLHRoaXMuYWN0aXZlRmlsZXMoZSkuY29uY2F0KGkpKSxlLnZhbHVlPW51bGx9ZWxzZSBsZS5wdXRQcml2YXRlKGUsXCJmaWxlc1wiLHQpfX0se2tleTpcImFjdGl2ZUZpbGVJbnB1dHNcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49bGUuZmluZFVwbG9hZElucHV0cyhlKTtyZXR1cm4gQXJyYXkuZnJvbShuKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZmlsZXMmJnQuYWN0aXZlRmlsZXMoZSkubGVuZ3RoPjB9KX19LHtrZXk6XCJhY3RpdmVGaWxlc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybihsZS5wcml2YXRlKGUsXCJmaWxlc1wiKXx8W10pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gZWUuaXNBY3RpdmUoZSx0KX0pfX0se2tleTpcImlucHV0c0F3YWl0aW5nUHJlZmxpZ2h0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPWxlLmZpbmRVcGxvYWRJbnB1dHMoZSk7cmV0dXJuIEFycmF5LmZyb20obikuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiB0LmZpbGVzQXdhaXRpbmdQcmVmbGlnaHQoZSkubGVuZ3RoPjB9KX19LHtrZXk6XCJmaWxlc0F3YWl0aW5nUHJlZmxpZ2h0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuYWN0aXZlRmlsZXMoZSkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiFlZS5pc1ByZWZsaWdodGVkKGUsdCl9KX19XSksXyhlLFt7a2V5OlwiZW50cmllc1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VudHJpZXN9fSx7a2V5OlwiaW5pdEFkYXB0ZXJVcGxvYWRcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpczt0aGlzLl9lbnRyaWVzPXRoaXMuX2VudHJpZXMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnppcFBvc3RGbGlnaHQoZSksdC5vbkRvbmUoZnVuY3Rpb24oKXtpLm51bUVudHJpZXNJblByb2dyZXNzLS0sMD09PWkubnVtRW50cmllc0luUHJvZ3Jlc3MmJmkub25Db21wbGV0ZSgpfSksdH0pO3ZhciByPXRoaXMuX2VudHJpZXMucmVkdWNlKGZ1bmN0aW9uKGUsdCl7dmFyIGk9dC51cGxvYWRlcihuLnVwbG9hZGVycykscj1pLm5hbWUsbz1pLmNhbGxiYWNrO3JldHVybiBlW3JdPWVbcl18fHtjYWxsYmFjazpvLGVudHJpZXM6W119LGVbcl0uZW50cmllcy5wdXNoKHQpLGV9LHt9KTtmb3IodmFyIG8gaW4gcil7dmFyIGE9cltvXTsoMCxhLmNhbGxiYWNrKShhLmVudHJpZXMsdCxlLG4pfX19XSksZX0oKSxyZT1mdW5jdGlvbihlLHQsbixpKXtlLmZvckVhY2goZnVuY3Rpb24oZSl7bmV3IG9lKGUsbi5jb25maWcuY2h1bmtfc2l6ZSxpKS51cGxvYWQoKX0pfSxvZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxuLGkpe1QodGhpcyxlKSx0aGlzLmxpdmVTb2NrZXQ9aSx0aGlzLmVudHJ5PXQsdGhpcy5vZmZzZXQ9MCx0aGlzLmNodW5rU2l6ZT1uLHRoaXMudXBsb2FkQ2hhbm5lbD1pLmNoYW5uZWwoXCJsdnU6XCIuY29uY2F0KHQucmVmKSx7dG9rZW46dC5tZXRhZGF0YSgpfSl9cmV0dXJuIF8oZSxbe2tleTpcInVwbG9hZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLnVwbG9hZENoYW5uZWwuam9pbigpLnJlY2VpdmUoXCJva1wiLGZ1bmN0aW9uKHQpe3JldHVybiBlLnJlYWROZXh0Q2h1bmsoKX0pLnJlY2VpdmUoXCJlcnJvclwiLGZ1bmN0aW9uKHQpe2UudXBsb2FkQ2hhbm5lbC5sZWF2ZSgpLGUuZW50cnkuZXJyb3IoKX0pfX0se2tleTpcImlzRG9uZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub2Zmc2V0Pj10aGlzLmVudHJ5LmZpbGUuc2l6ZX19LHtrZXk6XCJyZWFkTmV4dENodW5rXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9bmV3IHdpbmRvdy5GaWxlUmVhZGVyLG49dGhpcy5lbnRyeS5maWxlLnNsaWNlKHRoaXMub2Zmc2V0LHRoaXMuY2h1bmtTaXplK3RoaXMub2Zmc2V0KTt0Lm9ubG9hZD1mdW5jdGlvbih0KXtpZihudWxsIT09dC50YXJnZXQuZXJyb3IpcmV0dXJuIHooXCJSZWFkIGVycm9yOiBcIit0LnRhcmdldC5lcnJvcik7ZS5vZmZzZXQrPXQudGFyZ2V0LnJlc3VsdC5ieXRlTGVuZ3RoLGUucHVzaENodW5rKHQudGFyZ2V0LnJlc3VsdCl9LHQucmVhZEFzQXJyYXlCdWZmZXIobil9fSx7a2V5OlwicHVzaENodW5rXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLnVwbG9hZENoYW5uZWwuaXNKb2luZWQoKSYmdGhpcy51cGxvYWRDaGFubmVsLnB1c2goXCJjaHVua1wiLGUpLnJlY2VpdmUoXCJva1wiLGZ1bmN0aW9uKCl7dC5lbnRyeS5wcm9ncmVzcyh0Lm9mZnNldC90LmVudHJ5LmZpbGUuc2l6ZSoxMDApLHQuaXNEb25lKCl8fHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gdC5yZWFkTmV4dENodW5rKCl9LHQubGl2ZVNvY2tldC5nZXRMYXRlbmN5U2ltKCl8fDApfSl9fV0pLGV9KCksYWU9ZnVuY3Rpb24oZSl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LG49bmV3IEZvcm1EYXRhKGUpLGk9W107bi5mb3JFYWNoKGZ1bmN0aW9uKGUsdCxuKXtlIGluc3RhbmNlb2YgRmlsZSYmaS5wdXNoKHQpfSksaS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBuLmRlbGV0ZShlKX0pO3ZhciByLG89bmV3IFVSTFNlYXJjaFBhcmFtcyxhPWZ1bmN0aW9uKGUpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBTeW1ib2x8fG51bGw9PWVbU3ltYm9sLml0ZXJhdG9yXSl7aWYoQXJyYXkuaXNBcnJheShlKXx8KGU9TChlKSkpe3ZhciB0PTAsbj1mdW5jdGlvbigpe307cmV0dXJue3M6bixuOmZ1bmN0aW9uKCl7cmV0dXJuIHQ+PWUubGVuZ3RoP3tkb25lOiEwfTp7ZG9uZTohMSx2YWx1ZTplW3QrK119fSxlOmZ1bmN0aW9uKGUpe3Rocm93IGV9LGY6bn19dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfXZhciBpLHIsbz0hMCxhPSExO3JldHVybntzOmZ1bmN0aW9uKCl7aT1lW1N5bWJvbC5pdGVyYXRvcl0oKX0sbjpmdW5jdGlvbigpe3ZhciBlPWkubmV4dCgpO3JldHVybiBvPWUuZG9uZSxlfSxlOmZ1bmN0aW9uKGUpe2E9ITAscj1lfSxmOmZ1bmN0aW9uKCl7dHJ5e298fG51bGw9PWkucmV0dXJufHxpLnJldHVybigpfWZpbmFsbHl7aWYoYSl0aHJvdyByfX19fShuLmVudHJpZXMoKSk7dHJ5e2ZvcihhLnMoKTshKHI9YS5uKCkpLmRvbmU7KXt2YXIgdT14KHIudmFsdWUsMikscz11WzBdLGM9dVsxXTtvLmFwcGVuZChzLGMpfX1jYXRjaChlKXthLmUoZSl9ZmluYWxseXthLmYoKX1mb3IodmFyIGwgaW4gdClvLmFwcGVuZChsLHRbbF0pO3JldHVybiBvLnRvU3RyaW5nKCl9LHVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4pe1QodGhpcyxlKSx0aGlzLnZpZXdJZD10LHRoaXMucmVuZGVyZWQ9e30sdGhpcy5tZXJnZURpZmYobil9cmV0dXJuIF8oZSxudWxsLFt7a2V5OlwiZXh0cmFjdFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUucixuPWUuZSxpPWUudDtyZXR1cm4gZGVsZXRlIGUucixkZWxldGUgZS5lLGRlbGV0ZSBlLnQse2RpZmY6ZSx0aXRsZTppLHJlcGx5OnR8fG51bGwsZXZlbnRzOm58fFtdfX19XSksXyhlLFt7a2V5OlwicGFyZW50Vmlld0lkXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52aWV3SWR9fSx7a2V5OlwidG9TdHJpbmdcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZWN1cnNpdmVUb1N0cmluZyh0aGlzLnJlbmRlcmVkLHRoaXMucmVuZGVyZWQuYyxlKX19LHtrZXk6XCJyZWN1cnNpdmVUb1N0cmluZ1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTplLmMsbj1hcmd1bWVudHMubGVuZ3RoPjI/YXJndW1lbnRzWzJdOnZvaWQgMCxpPXtidWZmZXI6XCJcIixjb21wb25lbnRzOnQsb25seUNpZHM6bj1uP25ldyBTZXQobik6bnVsbH07cmV0dXJuIHRoaXMudG9PdXRwdXRCdWZmZXIoZSxpKSxpLmJ1ZmZlcn19LHtrZXk6XCJjb21wb25lbnRDSURzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5rZXlzKGUuY3x8e30pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZSl9KX19LHtrZXk6XCJpc0NvbXBvbmVudE9ubHlEaWZmXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuISFlLmMmJjE9PT1PYmplY3Qua2V5cyhlKS5sZW5ndGh9fSx7a2V5OlwiZ2V0Q29tcG9uZW50XCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5jW3RdfX0se2tleTpcIm1lcmdlRGlmZlwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUuYztpZihkZWxldGUgZS5jLHRoaXMucmVuZGVyZWQ9dGhpcy5yZWN1cnNpdmVNZXJnZSh0aGlzLnJlbmRlcmVkLGUpLHRoaXMucmVuZGVyZWQuYz10aGlzLnJlbmRlcmVkLmN8fHt9LHQpe3ZhciBuPXRoaXMucmVuZGVyZWQuYztmb3IodmFyIGkgaW4gdCl7dmFyIHI9dFtpXSxvPXIsYT1vLnM7aWYoXCJudW1iZXJcIj09dHlwZW9mIGEpe2Zvcig7XCJudW1iZXJcIj09dHlwZW9mIGE7KWE9KG89YT4wP3RbYV06blstYV0pLnM7bz0kKG8pLHRoaXMuZG9SZWN1cnNpdmVNZXJnZShvLHIpLG8ucz1hfWVsc2Ugbz1uW2ldfHx7fSxvPXRoaXMucmVjdXJzaXZlTWVyZ2UobyxyKTt0W2ldPW99Zm9yKHZhciB1IGluIHQpblt1XT10W3VdO2UuYz10fX19LHtrZXk6XCJyZWN1cnNpdmVNZXJnZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMCE9PXQucz90Oih0aGlzLmRvUmVjdXJzaXZlTWVyZ2UoZSx0KSxlKX19LHtrZXk6XCJkb1JlY3Vyc2l2ZU1lcmdlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl7dmFyIGk9dFtuXSxyPWVbbl07WShpKSYmdm9pZCAwPT09aS5zJiZZKHIpP3RoaXMuZG9SZWN1cnNpdmVNZXJnZShyLGkpOmVbbl09aX19fSx7a2V5OlwiY29tcG9uZW50VG9TdHJpbmdcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZWN1cnNpdmVDSURUb1N0cmluZyh0aGlzLnJlbmRlcmVkLmMsZSl9fSx7a2V5OlwicHJ1bmVDSURzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztlLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGRlbGV0ZSB0LnJlbmRlcmVkLmNbZV19KX19LHtrZXk6XCJnZXRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnJlbmRlcmVkfX0se2tleTpcImlzTmV3RmluZ2VycHJpbnRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiEhKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSkuc319LHtrZXk6XCJ0b091dHB1dEJ1ZmZlclwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7aWYoZS5kKXJldHVybiB0aGlzLmNvbXByZWhlbnNpb25Ub0J1ZmZlcihlLHQpO3ZhciBuPWUuczt0LmJ1ZmZlcis9blswXTtmb3IodmFyIGk9MTtpPG4ubGVuZ3RoO2krKyl0aGlzLmR5bmFtaWNUb0J1ZmZlcihlW2ktMV0sdCksdC5idWZmZXIrPW5baV19fSx7a2V5OlwiY29tcHJlaGVuc2lvblRvQnVmZmVyXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49ZS5kLGk9ZS5zLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIG89bltyXTt0LmJ1ZmZlcis9aVswXTtmb3IodmFyIGE9MTthPGkubGVuZ3RoO2ErKyl0aGlzLmR5bmFtaWNUb0J1ZmZlcihvW2EtMV0sdCksdC5idWZmZXIrPWlbYV19fX0se2tleTpcImR5bmFtaWNUb0J1ZmZlclwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7XCJudW1iZXJcIj09dHlwZW9mIGU/dC5idWZmZXIrPXRoaXMucmVjdXJzaXZlQ0lEVG9TdHJpbmcodC5jb21wb25lbnRzLGUsdC5vbmx5Q2lkcyk6WShlKT90aGlzLnRvT3V0cHV0QnVmZmVyKGUsdCk6dC5idWZmZXIrPWV9fSx7a2V5OlwicmVjdXJzaXZlQ0lEVG9TdHJpbmdcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxyPWVbdF18fHooXCJubyBjb21wb25lbnQgZm9yIENJRCBcIi5jb25jYXQodCksZSksbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIik7by5pbm5lckhUTUw9dGhpcy5yZWN1cnNpdmVUb1N0cmluZyhyLGUsbik7dmFyIGE9by5jb250ZW50LHU9biYmIW4uaGFzKHQpLHM9eChBcnJheS5mcm9tKGEuY2hpbGROb2RlcykucmVkdWNlKGZ1bmN0aW9uKGUsbixyKXt2YXIgYT14KGUsMikscz1hWzBdLGM9YVsxXTtyZXR1cm4gbi5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFP24uZ2V0QXR0cmlidXRlKEgpP1tzLCEwXToobi5zZXRBdHRyaWJ1dGUoSCx0KSxuLmlkfHwobi5pZD1cIlwiLmNvbmNhdChpLnBhcmVudFZpZXdJZCgpLFwiLVwiKS5jb25jYXQodCxcIi1cIikuY29uY2F0KHIpKSx1JiYobi5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1za2lwXCIsXCJcIiksbi5pbm5lckhUTUw9XCJcIiksWyEwLGNdKTpcIlwiIT09bi5ub2RlVmFsdWUudHJpbSgpPyh6KFwib25seSBIVE1MIGVsZW1lbnQgdGFncyBhcmUgYWxsb3dlZCBhdCB0aGUgcm9vdCBvZiBjb21wb25lbnRzLlxcblxcblwiKydnb3Q6IFwiJy5jb25jYXQobi5ub2RlVmFsdWUudHJpbSgpLCdcIlxcblxcbicpK1wid2l0aGluOlxcblwiLG8uaW5uZXJIVE1MLnRyaW0oKSksbi5yZXBsYWNlV2l0aChpLmNyZWF0ZVNwYW4obi5ub2RlVmFsdWUsdCkpLFshMCxjXSk6KG4ucmVtb3ZlKCksW3MsY10pfSxbITEsITFdKSwyKSxjPXNbMF0sbD1zWzFdO3JldHVybiBjfHxsPyFjJiZsPyh6KFwiZXhwZWN0ZWQgYXQgbGVhc3Qgb25lIEhUTUwgZWxlbWVudCB0YWcgZGlyZWN0bHkgaW5zaWRlIGEgY29tcG9uZW50LCBidXQgb25seSBzdWJjb21wb25lbnRzIHdlcmUgZm91bmQuIEEgY29tcG9uZW50IG11c3QgcmVuZGVyIGF0IGxlYXN0IG9uZSBIVE1MIHRhZyBkaXJlY3RseSBpbnNpZGUgaXRzZWxmLlwiLG8uaW5uZXJIVE1MLnRyaW0oKSksby5pbm5lckhUTUwpOm8uaW5uZXJIVE1MOih6KFwiZXhwZWN0ZWQgYXQgbGVhc3Qgb25lIEhUTUwgZWxlbWVudCB0YWcgaW5zaWRlIGEgY29tcG9uZW50LCBidXQgdGhlIGNvbXBvbmVudCBpcyBlbXB0eTpcXG5cIixvLmlubmVySFRNTC50cmltKCkpLHRoaXMuY3JlYXRlU3BhbihcIlwiLHQpLm91dGVySFRNTCl9fSx7a2V5OlwiY3JlYXRlU3BhblwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7cmV0dXJuIG4uaW5uZXJUZXh0PWUsbi5zZXRBdHRyaWJ1dGUoSCx0KSxufX1dKSxlfSgpLHNlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4pe3ZhciBpPXRoaXMscj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e307aWYoVCh0aGlzLGUpLHRoaXMudW5sb2FkZWQ9ITEsIW58fFwiT2JqZWN0XCI9PT1uLmNvbnN0cnVjdG9yLm5hbWUpdGhyb3cgbmV3IEVycm9yKCdcXG4gICAgICBhIHBob2VuaXggU29ja2V0IG11c3QgYmUgcHJvdmlkZWQgYXMgdGhlIHNlY29uZCBhcmd1bWVudCB0byB0aGUgTGl2ZVNvY2tldCBjb25zdHJ1Y3Rvci4gRm9yIGV4YW1wbGU6XFxuXFxuICAgICAgICAgIGltcG9ydCB7U29ja2V0fSBmcm9tIFwicGhvZW5peFwiXFxuICAgICAgICAgIGltcG9ydCB7TGl2ZVNvY2tldH0gZnJvbSBcInBob2VuaXhfbGl2ZV92aWV3XCJcXG4gICAgICAgICAgbGV0IGxpdmVTb2NrZXQgPSBuZXcgTGl2ZVNvY2tldChcIi9saXZlXCIsIFNvY2tldCwgey4uLn0pXFxuICAgICAgJyk7dGhpcy5zb2NrZXQ9bmV3IG4odCxyKSx0aGlzLmJpbmRpbmdQcmVmaXg9ci5iaW5kaW5nUHJlZml4fHxXLHRoaXMub3B0cz1yLHRoaXMucGFyYW1zPVgoci5wYXJhbXN8fHt9KSx0aGlzLnZpZXdMb2dnZXI9ci52aWV3TG9nZ2VyLHRoaXMubWV0YWRhdGFDYWxsYmFja3M9ci5tZXRhZGF0YXx8e30sdGhpcy5kZWZhdWx0cz1PYmplY3QuYXNzaWduKCQocSksci5kZWZhdWx0c3x8e30pLHRoaXMuYWN0aXZlRWxlbWVudD1udWxsLHRoaXMucHJldkFjdGl2ZT1udWxsLHRoaXMuc2lsZW5jZWQ9ITEsdGhpcy5tYWluPW51bGwsdGhpcy5saW5rUmVmPTAsdGhpcy5yb290cz17fSx0aGlzLmhyZWY9d2luZG93LmxvY2F0aW9uLmhyZWYsdGhpcy5wZW5kaW5nTGluaz1udWxsLHRoaXMuY3VycmVudExvY2F0aW9uPSQod2luZG93LmxvY2F0aW9uKSx0aGlzLmhvb2tzPXIuaG9va3N8fHt9LHRoaXMudXBsb2FkZXJzPXIudXBsb2FkZXJzfHx7fSx0aGlzLmxvYWRlclRpbWVvdXQ9ci5sb2FkZXJUaW1lb3V0fHxWLHRoaXMuYm91bmRUb3BMZXZlbEV2ZW50cz0hMSx0aGlzLmRvbUNhbGxiYWNrcz1PYmplY3QuYXNzaWduKHtvbk5vZGVBZGRlZDpYKCksb25CZWZvcmVFbFVwZGF0ZWQ6WCgpfSxyLmRvbXx8e30pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidW5sb2FkXCIsZnVuY3Rpb24oZSl7aS51bmxvYWRlZD0hMH0pLHRoaXMuc29ja2V0Lm9uT3BlbihmdW5jdGlvbigpe2kuaXNVbmxvYWRlZCgpJiZ3aW5kb3cubG9jYXRpb24ucmVsb2FkKCl9KX1yZXR1cm4gXyhlLFt7a2V5OlwiaXNQcm9maWxlRW5hYmxlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJ0cnVlXCI9PT1zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwicGh4OmxpdmUtc29ja2V0OnByb2ZpbGluZ1wiKX19LHtrZXk6XCJpc0RlYnVnRW5hYmxlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJ0cnVlXCI9PT1zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwicGh4OmxpdmUtc29ja2V0OmRlYnVnXCIpfX0se2tleTpcImVuYWJsZURlYnVnXCIsdmFsdWU6ZnVuY3Rpb24oKXtzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwicGh4OmxpdmUtc29ja2V0OmRlYnVnXCIsXCJ0cnVlXCIpfX0se2tleTpcImVuYWJsZVByb2ZpbGluZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7c2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcInBoeDpsaXZlLXNvY2tldDpwcm9maWxpbmdcIixcInRydWVcIil9fSx7a2V5OlwiZGlzYWJsZURlYnVnXCIsdmFsdWU6ZnVuY3Rpb24oKXtzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKFwicGh4OmxpdmUtc29ja2V0OmRlYnVnXCIpfX0se2tleTpcImRpc2FibGVQcm9maWxpbmdcIix2YWx1ZTpmdW5jdGlvbigpe3Nlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oXCJwaHg6bGl2ZS1zb2NrZXQ6cHJvZmlsaW5nXCIpfX0se2tleTpcImVuYWJsZUxhdGVuY3lTaW1cIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLmVuYWJsZURlYnVnKCksY29uc29sZS5sb2coXCJsYXRlbmN5IHNpbXVsYXRvciBlbmFibGVkIGZvciB0aGUgZHVyYXRpb24gb2YgdGhpcyBicm93c2VyIHNlc3Npb24uIENhbGwgZGlzYWJsZUxhdGVuY3lTaW0oKSB0byBkaXNhYmxlXCIpLHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXCJwaHg6bGl2ZS1zb2NrZXQ6bGF0ZW5jeS1zaW1cIixlKX19LHtrZXk6XCJkaXNhYmxlTGF0ZW5jeVNpbVwiLHZhbHVlOmZ1bmN0aW9uKCl7c2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShcInBoeDpsaXZlLXNvY2tldDpsYXRlbmN5LXNpbVwiKX19LHtrZXk6XCJnZXRMYXRlbmN5U2ltXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwicGh4OmxpdmUtc29ja2V0OmxhdGVuY3ktc2ltXCIpO3JldHVybiBlP3BhcnNlSW50KGUpOm51bGx9fSx7a2V5OlwiZ2V0U29ja2V0XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zb2NrZXR9fSx7a2V5OlwiY29ubmVjdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWZ1bmN0aW9uKCl7ZS5qb2luUm9vdFZpZXdzKCkmJihlLmJpbmRUb3BMZXZlbEV2ZW50cygpLGUuc29ja2V0LmNvbm5lY3QoKSl9O1tcImNvbXBsZXRlXCIsXCJsb2FkZWRcIixcImludGVyYWN0aXZlXCJdLmluZGV4T2YoZG9jdW1lbnQucmVhZHlTdGF0ZSk+PTA/dCgpOmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsZnVuY3Rpb24oKXtyZXR1cm4gdCgpfSl9fSx7a2V5OlwiZGlzY29ubmVjdFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuc29ja2V0LmRpc2Nvbm5lY3QoZSl9fSx7a2V5OlwidHJpZ2dlckRPTVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG47KG49dGhpcy5kb21DYWxsYmFja3MpW2VdLmFwcGx5KG4sQSh0KSl9fSx7a2V5OlwidGltZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7aWYoIXRoaXMuaXNQcm9maWxlRW5hYmxlZCgpfHwhY29uc29sZS50aW1lKXJldHVybiB0KCk7Y29uc29sZS50aW1lKGUpO3ZhciBuPXQoKTtyZXR1cm4gY29uc29sZS50aW1lRW5kKGUpLG59fSx7a2V5OlwibG9nXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe2lmKHRoaXMudmlld0xvZ2dlcil7dmFyIGk9eChuKCksMikscj1pWzBdLG89aVsxXTt0aGlzLnZpZXdMb2dnZXIoZSx0LHIsbyl9ZWxzZSBpZih0aGlzLmlzRGVidWdFbmFibGVkKCkpe3ZhciBhPXgobigpLDIpLHU9YVswXSxzPWFbMV07SyhlLHQsdSxzKX19fSx7a2V5Olwib25DaGFubmVsXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7ZS5vbih0LGZ1bmN0aW9uKGUpe3ZhciB0PWkuZ2V0TGF0ZW5jeVNpbSgpO3Q/KGNvbnNvbGUubG9nKFwic2ltdWxhdGluZyBcIi5jb25jYXQodCxcIm1zIG9mIGxhdGVuY3kgZnJvbSBzZXJ2ZXIgdG8gY2xpZW50XCIpKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIG4oZSl9LHQpKTpuKGUpfSl9fSx7a2V5Olwid3JhcFB1c2hcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxyPXRoaXMuZ2V0TGF0ZW5jeVNpbSgpLG89ZS5qb2luQ291bnQ7aWYoIXIpcmV0dXJuIHQudGltZW91dD9uKCkucmVjZWl2ZShcInRpbWVvdXRcIixmdW5jdGlvbigpe2Uuam9pbkNvdW50PT09byYmaS5yZWxvYWRXaXRoSml0dGVyKGUsZnVuY3Rpb24oKXtpLmxvZyhlLFwidGltZW91dFwiLGZ1bmN0aW9uKCl7cmV0dXJuW1wicmVjZWl2ZWQgdGltZW91dCB3aGlsZSBjb21tdW5pY2F0aW5nIHdpdGggc2VydmVyLiBGYWxsaW5nIGJhY2sgdG8gaGFyZCByZWZyZXNoIGZvciByZWNvdmVyeVwiXX0pfSl9KTpuKCk7Y29uc29sZS5sb2coXCJzaW11bGF0aW5nIFwiLmNvbmNhdChyLFwibXMgb2YgbGF0ZW5jeSBmcm9tIGNsaWVudCB0byBzZXJ2ZXJcIikpO3ZhciBhPXtyZWNlaXZlczpbXSxyZWNlaXZlOmZ1bmN0aW9uKGUsdCl7dGhpcy5yZWNlaXZlcy5wdXNoKFtlLHRdKX19O3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5yZWNlaXZlcy5yZWR1Y2UoZnVuY3Rpb24oZSx0KXt2YXIgbj14KHQsMiksaT1uWzBdLHI9blsxXTtyZXR1cm4gZS5yZWNlaXZlKGkscil9LG4oKSl9LHIpLGF9fSx7a2V5OlwicmVsb2FkV2l0aEppdHRlclwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztlLmRlc3Ryb3koKSx0aGlzLmRpc2Nvbm5lY3QoKTt2YXIgaT1SWzBdLHI9UlsxXSxvPU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSooci1pKzEpKStpLGE9Y2UudXBkYXRlTG9jYWwoZS5uYW1lKCksXCJjb25zZWN1dGl2ZS1yZWxvYWRzXCIsMCxmdW5jdGlvbihlKXtyZXR1cm4gZSsxfSk7dD90KCk6dGhpcy5sb2coZSxcImpvaW5cIixmdW5jdGlvbigpe3JldHVybltcImVuY291bnRlcmVkIFwiLmNvbmNhdChhLFwiIGNvbnNlY3V0aXZlIHJlbG9hZHNcIildfSksYT4xMCYmKHRoaXMubG9nKGUsXCJqb2luXCIsZnVuY3Rpb24oKXtyZXR1cm5bXCJleGNlZWRlZCBcIi5jb25jYXQoMTAsXCIgY29uc2VjdXRpdmUgcmVsb2Fkcy4gRW50ZXJpbmcgZmFpbHNhZmUgbW9kZVwiKV19KSxvPTNlNCksc2V0VGltZW91dChmdW5jdGlvbigpe24uaGFzUGVuZGluZ0xpbmsoKT93aW5kb3cubG9jYXRpb249bi5wZW5kaW5nTGluazp3aW5kb3cubG9jYXRpb24ucmVsb2FkKCl9LG8pfX0se2tleTpcImdldEhvb2tDYWxsYmFja3NcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5zdGFydHNXaXRoKFwiUGhvZW5peC5cIik/dGVbZS5zcGxpdChcIi5cIilbMV1dOnRoaXMuaG9va3NbZV19fSx7a2V5OlwiaXNVbmxvYWRlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudW5sb2FkZWR9fSx7a2V5OlwiaXNDb25uZWN0ZWRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNvY2tldC5pc0Nvbm5lY3RlZCgpfX0se2tleTpcImdldEJpbmRpbmdQcmVmaXhcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmJpbmRpbmdQcmVmaXh9fSx7a2V5OlwiYmluZGluZ1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVyblwiXCIuY29uY2F0KHRoaXMuZ2V0QmluZGluZ1ByZWZpeCgpKS5jb25jYXQoZSl9fSx7a2V5OlwiY2hhbm5lbFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuc29ja2V0LmNoYW5uZWwoZSx0KX19LHtrZXk6XCJqb2luUm9vdFZpZXdzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ITE7cmV0dXJuIGxlLmFsbChkb2N1bWVudCxcIlwiLmNvbmNhdChVLFwiOm5vdChbXCIpLmNvbmNhdChcImRhdGEtcGh4LXBhcmVudC1pZFwiLFwiXSlcIiksZnVuY3Rpb24obil7aWYoIWUuZ2V0Um9vdEJ5SWQobi5pZCkpe3ZhciBpPWUuam9pblJvb3RWaWV3KG4sZS5nZXRIcmVmKCkpO2Uucm9vdD1lLnJvb3R8fGksbi5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1tYWluXCIpJiYoZS5tYWluPWkpfXQ9ITB9KSx0fX0se2tleTpcInJlZGlyZWN0XCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt0aGlzLmRpc2Nvbm5lY3QoKSxjZS5yZWRpcmVjdChlLHQpfX0se2tleTpcInJlcGxhY2VNYWluXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLGk9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwscj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106dGhpcy5zZXRQZW5kaW5nTGluayhlKSxvPXRoaXMubWFpbi5lbDt0aGlzLm1haW4uc2hvd0xvYWRlcih0aGlzLmxvYWRlclRpbWVvdXQpLHRoaXMubWFpbi5kZXN0cm95KCksY2UuZmV0Y2hQYWdlKGUsZnVuY3Rpb24oYSx1KXtpZigyMDAhPT1hKXJldHVybiBuLnJlZGlyZWN0KGUpO3ZhciBzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZW1wbGF0ZVwiKTtzLmlubmVySFRNTD11O3ZhciBjPXMuY29udGVudC5jaGlsZE5vZGVzWzBdO2lmKCFjfHwhbi5pc1BoeFZpZXcoYykpcmV0dXJuIG4ucmVkaXJlY3QoZSk7bi5qb2luUm9vdFZpZXcoYyxlLHQsZnVuY3Rpb24oZSx0KXsxPT09dCYmKG4uY29tbWl0UGVuZGluZ0xpbmsocik/KG8ucmVwbGFjZVdpdGgoZS5lbCksbi5tYWluPWUsaSYmaSgpKTplLmRlc3Ryb3koKSl9KX0pfX0se2tleTpcImlzUGh4Vmlld1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEF0dHJpYnV0ZSYmbnVsbCE9PWUuZ2V0QXR0cmlidXRlKE8pfX0se2tleTpcImpvaW5Sb290Vmlld1wiLHZhbHVlOmZ1bmN0aW9uKGUsdCxuLGkpe3ZhciByPW5ldyBmZShlLHRoaXMsbnVsbCx0LG4pO3JldHVybiB0aGlzLnJvb3RzW3IuaWRdPXIsci5qb2luKGkpLHJ9fSx7a2V5Olwib3duZXJcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMsaT1aKGUuY2xvc2VzdChVKSxmdW5jdGlvbihlKXtyZXR1cm4gbi5nZXRWaWV3QnlFbChlKX0pO2kmJnQoaSl9fSx7a2V5Olwid2l0aGluT3duZXJzXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO3RoaXMub3duZXIoZSxmdW5jdGlvbihpKXt2YXIgcj1lLmdldEF0dHJpYnV0ZShuLmJpbmRpbmcoXCJ0YXJnZXRcIikpO251bGw9PT1yP3QoaSxlKTppLndpdGhpblRhcmdldHMocix0KX0pfX0se2tleTpcImdldFZpZXdCeUVsXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1yb290LWlkXCIpO3JldHVybiBaKHRoaXMuZ2V0Um9vdEJ5SWQodCksZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0RGVzY2VuZGVudEJ5RWwoZSl9KX19LHtrZXk6XCJnZXRSb290QnlJZFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJvb3RzW2VdfX0se2tleTpcImRlc3Ryb3lBbGxWaWV3c1wiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlIGluIHRoaXMucm9vdHMpdGhpcy5yb290c1tlXS5kZXN0cm95KCksZGVsZXRlIHRoaXMucm9vdHNbZV19fSx7a2V5OlwiZGVzdHJveVZpZXdCeUVsXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5nZXRSb290QnlJZChlLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LXJvb3QtaWRcIikpO3QmJnQuZGVzdHJveURlc2NlbmRlbnQoZS5pZCl9fSx7a2V5Olwic2V0QWN0aXZlRWxlbWVudFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYodGhpcy5hY3RpdmVFbGVtZW50IT09ZSl7dGhpcy5hY3RpdmVFbGVtZW50PWU7dmFyIG49ZnVuY3Rpb24oKXtlPT09dC5hY3RpdmVFbGVtZW50JiYodC5hY3RpdmVFbGVtZW50PW51bGwpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIix0KSxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLHQpfTtlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsbiksZS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIixuKX19fSx7a2V5OlwiZ2V0QWN0aXZlRWxlbWVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ9PT1kb2N1bWVudC5ib2R5P3RoaXMuYWN0aXZlRWxlbWVudHx8ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDpkb2N1bWVudC5hY3RpdmVFbGVtZW50fHxkb2N1bWVudC5ib2R5fX0se2tleTpcImRyb3BBY3RpdmVFbGVtZW50XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5wcmV2QWN0aXZlJiZlLm93bnNFbGVtZW50KHRoaXMucHJldkFjdGl2ZSkmJih0aGlzLnByZXZBY3RpdmU9bnVsbCl9fSx7a2V5OlwicmVzdG9yZVByZXZpb3VzbHlBY3RpdmVGb2N1c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5wcmV2QWN0aXZlJiZ0aGlzLnByZXZBY3RpdmUhPT1kb2N1bWVudC5ib2R5JiZ0aGlzLnByZXZBY3RpdmUuZm9jdXMoKX19LHtrZXk6XCJibHVyQWN0aXZlRWxlbWVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5wcmV2QWN0aXZlPXRoaXMuZ2V0QWN0aXZlRWxlbWVudCgpLHRoaXMucHJldkFjdGl2ZSE9PWRvY3VtZW50LmJvZHkmJnRoaXMucHJldkFjdGl2ZS5ibHVyKCl9fSx7a2V5OlwiYmluZFRvcExldmVsRXZlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuYm91bmRUb3BMZXZlbEV2ZW50c3x8KHRoaXMuYm91bmRUb3BMZXZlbEV2ZW50cz0hMCxkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7fSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJwYWdlc2hvd1wiLGZ1bmN0aW9uKHQpe3QucGVyc2lzdGVkJiYoZS53aXRoUGFnZUxvYWRpbmcoe3RvOndpbmRvdy5sb2NhdGlvbi5ocmVmLGtpbmQ6XCJyZWRpcmVjdFwifSksd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpKX0pLHRoaXMuYmluZENsaWNrcygpLHRoaXMuYmluZE5hdigpLHRoaXMuYmluZEZvcm1zKCksdGhpcy5iaW5kKHtrZXl1cDpcImtleXVwXCIsa2V5ZG93bjpcImtleWRvd25cIn0sZnVuY3Rpb24odCxuLGkscixvLGEsdSl7dmFyIHM9ci5nZXRBdHRyaWJ1dGUoZS5iaW5kaW5nKFwia2V5XCIpKSxjPXQua2V5JiZ0LmtleS50b0xvd2VyQ2FzZSgpO3MmJnMudG9Mb3dlckNhc2UoKSE9PWN8fGkucHVzaEtleShyLG8sbixhLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciBuPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP3coT2JqZWN0KG4pLCEwKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe0UoZSx0LG5bdF0pfSk6T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM/T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhuKSk6dyhPYmplY3QobikpLmZvckVhY2goZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG4sdCkpfSl9cmV0dXJuIGV9KHtrZXk6dC5rZXl9LGUuZXZlbnRNZXRhKG4sdCxyKSkpfSksdGhpcy5iaW5kKHtibHVyOlwiZm9jdXNvdXRcIixmb2N1czpcImZvY3VzaW5cIn0sZnVuY3Rpb24odCxuLGkscixvLGEsdSl7dXx8aS5wdXNoRXZlbnQobixyLG8sYSxlLmV2ZW50TWV0YShuLHQscikpfSksdGhpcy5iaW5kKHtibHVyOlwiYmx1clwiLGZvY3VzOlwiZm9jdXNcIn0sZnVuY3Rpb24odCxuLGkscixvLGEsdSl7dSYmXCJ3aW5kb3dcIiE9PSF1JiZpLnB1c2hFdmVudChuLHIsbyxhLGUuZXZlbnRNZXRhKG4sdCxyKSl9KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsZnVuY3Rpb24oZSl7cmV0dXJuIGUucHJldmVudERlZmF1bHQoKX0pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKTt2YXIgbj1aKEcodC50YXJnZXQsZS5iaW5kaW5nKFwiZHJvcC10YXJnZXRcIikpLGZ1bmN0aW9uKHQpe3JldHVybiB0LmdldEF0dHJpYnV0ZShlLmJpbmRpbmcoXCJkcm9wLXRhcmdldFwiKSl9KSxpPW4mJmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG4pLHI9QXJyYXkuZnJvbSh0LmRhdGFUcmFuc2Zlci5maWxlc3x8W10pO2kmJiFpLmRpc2FibGVkJiYwIT09ci5sZW5ndGgmJmkuZmlsZXMgaW5zdGFuY2VvZiBGaWxlTGlzdCYmKGllLnRyYWNrRmlsZXMoaSxyKSxpLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KFwiaW5wdXRcIix7YnViYmxlczohMH0pKSl9KSl9fSx7a2V5OlwiZXZlbnRNZXRhXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXMubWV0YWRhdGFDYWxsYmFja3NbZV07cmV0dXJuIGk/aSh0LG4pOnt9fX0se2tleTpcInNldFBlbmRpbmdMaW5rXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMubGlua1JlZisrLHRoaXMucGVuZGluZ0xpbms9ZSx0aGlzLmxpbmtSZWZ9fSx7a2V5OlwiY29tbWl0UGVuZGluZ0xpbmtcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5saW5rUmVmPT09ZSYmKHRoaXMuaHJlZj10aGlzLnBlbmRpbmdMaW5rLHRoaXMucGVuZGluZ0xpbms9bnVsbCwhMCl9fSx7a2V5OlwiZ2V0SHJlZlwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaHJlZn19LHtrZXk6XCJoYXNQZW5kaW5nTGlua1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLnBlbmRpbmdMaW5rfX0se2tleTpcImJpbmRcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMsaT1mdW5jdGlvbihpKXt2YXIgcj1lW2ldO24ub24ocixmdW5jdGlvbihlKXt2YXIgcj1uLmJpbmRpbmcoaSksbz1uLmJpbmRpbmcoXCJ3aW5kb3ctXCIuY29uY2F0KGkpKSxhPWUudGFyZ2V0LmdldEF0dHJpYnV0ZSYmZS50YXJnZXQuZ2V0QXR0cmlidXRlKHIpO2E/bi5kZWJvdW5jZShlLnRhcmdldCxlLGZ1bmN0aW9uKCl7bi53aXRoaW5Pd25lcnMoZS50YXJnZXQsZnVuY3Rpb24obixyKXt0KGUsaSxuLGUudGFyZ2V0LHIsYSxudWxsKX0pfSk6bGUuYWxsKGRvY3VtZW50LFwiW1wiLmNvbmNhdChvLFwiXVwiKSxmdW5jdGlvbihyKXt2YXIgYT1yLmdldEF0dHJpYnV0ZShvKTtuLmRlYm91bmNlKHIsZSxmdW5jdGlvbigpe24ud2l0aGluT3duZXJzKHIsZnVuY3Rpb24obixvKXt0KGUsaSxuLHIsbyxhLFwid2luZG93XCIpfSl9KX0pfSl9O2Zvcih2YXIgciBpbiBlKWkocil9fSx7a2V5OlwiYmluZENsaWNrc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5iaW5kQ2xpY2soXCJjbGlja1wiLFwiY2xpY2tcIiwhMSksdGhpcy5iaW5kQ2xpY2soXCJtb3VzZWRvd25cIixcImNhcHR1cmUtY2xpY2tcIiwhMCl9fSx7a2V5OlwiYmluZENsaWNrXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXMscj10aGlzLmJpbmRpbmcodCk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZSxmdW5jdGlvbihlKXtpZihpLmlzQ29ubmVjdGVkKCkpe3ZhciB0PW51bGwsbz0odD1uP2UudGFyZ2V0Lm1hdGNoZXMoXCJbXCIuY29uY2F0KHIsXCJdXCIpKT9lLnRhcmdldDplLnRhcmdldC5xdWVyeVNlbGVjdG9yKFwiW1wiLmNvbmNhdChyLFwiXVwiKSk6RyhlLnRhcmdldCxyKSkmJnQuZ2V0QXR0cmlidXRlKHIpO28mJihcIiNcIj09PXQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSYmZS5wcmV2ZW50RGVmYXVsdCgpLGkuZGVib3VuY2UodCxlLGZ1bmN0aW9uKCl7aS53aXRoaW5Pd25lcnModCxmdW5jdGlvbihuLHIpe24ucHVzaEV2ZW50KFwiY2xpY2tcIix0LHIsbyxpLmV2ZW50TWV0YShcImNsaWNrXCIsZSx0KSl9KX0pKX19LG4pfX0se2tleTpcImJpbmROYXZcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYoY2UuY2FuUHVzaFN0YXRlKCkpe2hpc3Rvcnkuc2Nyb2xsUmVzdG9yYXRpb24mJihoaXN0b3J5LnNjcm9sbFJlc3RvcmF0aW9uPVwibWFudWFsXCIpO3ZhciB0PW51bGw7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixmdW5jdGlvbihlKXtjbGVhclRpbWVvdXQodCksdD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Y2UudXBkYXRlQ3VycmVudFN0YXRlKGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QuYXNzaWduKGUse3Njcm9sbDp3aW5kb3cuc2Nyb2xsWX0pfSl9LDEwMCl9KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInBvcHN0YXRlXCIsZnVuY3Rpb24odCl7aWYoZS5yZWdpc3Rlck5ld0xvY2F0aW9uKHdpbmRvdy5sb2NhdGlvbikpe3ZhciBuPXQuc3RhdGV8fHt9LGk9bi50eXBlLHI9bi5pZCxvPW4ucm9vdCxhPW4uc2Nyb2xsLHU9d2luZG93LmxvY2F0aW9uLmhyZWY7ZS5tYWluLmlzQ29ubmVjdGVkKCkmJlwicGF0Y2hcIj09PWkmJnI9PT1lLm1haW4uaWQ/ZS5tYWluLnB1c2hMaW5rUGF0Y2godSxudWxsKTplLnJlcGxhY2VNYWluKHUsbnVsbCxmdW5jdGlvbigpe28mJmUucmVwbGFjZVJvb3RIaXN0b3J5KCksXCJudW1iZXJcIj09dHlwZW9mIGEmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cuc2Nyb2xsVG8oMCxhKX0sMCl9KX19LCExKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24odCl7dmFyIG49Ryh0LnRhcmdldCxcImRhdGEtcGh4LWxpbmtcIiksaT1uJiZuLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LWxpbmtcIikscj10Lm1ldGFLZXl8fHQuY3RybEtleXx8MT09PXQuYnV0dG9uO2lmKGkmJmUuaXNDb25uZWN0ZWQoKSYmZS5tYWluJiYhcil7dmFyIG89bi5ocmVmLGE9bi5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1saW5rLXN0YXRlXCIpO2lmKHQucHJldmVudERlZmF1bHQoKSxlLnBlbmRpbmdMaW5rIT09bylpZihcInBhdGNoXCI9PT1pKWUucHVzaEhpc3RvcnlQYXRjaChvLGEsbik7ZWxzZXtpZihcInJlZGlyZWN0XCIhPT1pKXRocm93IG5ldyBFcnJvcihcImV4cGVjdGVkIFwiLmNvbmNhdChcImRhdGEtcGh4LWxpbmtcIiwnIHRvIGJlIFwicGF0Y2hcIiBvciBcInJlZGlyZWN0XCIsIGdvdDogJykuY29uY2F0KGkpKTtlLmhpc3RvcnlSZWRpcmVjdChvLGEpfX19LCExKX19fSx7a2V5Olwid2l0aFBhZ2VMb2FkaW5nXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtsZS5kaXNwYXRjaEV2ZW50KHdpbmRvdyxcInBoeDpwYWdlLWxvYWRpbmctc3RhcnRcIixlKTt2YXIgbj1mdW5jdGlvbigpe3JldHVybiBsZS5kaXNwYXRjaEV2ZW50KHdpbmRvdyxcInBoeDpwYWdlLWxvYWRpbmctc3RvcFwiLGUpfTtyZXR1cm4gdD90KG4pOm59fSx7a2V5OlwicHVzaEhpc3RvcnlQYXRjaFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzO3RoaXMud2l0aFBhZ2VMb2FkaW5nKHt0bzplLGtpbmQ6XCJwYXRjaFwifSxmdW5jdGlvbihyKXtpLm1haW4ucHVzaExpbmtQYXRjaChlLG4sZnVuY3Rpb24oKXtpLmhpc3RvcnlQYXRjaChlLHQpLHIoKX0pfSl9fSx7a2V5OlwiaGlzdG9yeVBhdGNoXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtjZS5wdXNoU3RhdGUodCx7dHlwZTpcInBhdGNoXCIsaWQ6dGhpcy5tYWluLmlkfSxlKSx0aGlzLnJlZ2lzdGVyTmV3TG9jYXRpb24od2luZG93LmxvY2F0aW9uKX19LHtrZXk6XCJoaXN0b3J5UmVkaXJlY3RcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxyPXdpbmRvdy5zY3JvbGxZO3RoaXMud2l0aFBhZ2VMb2FkaW5nKHt0bzplLGtpbmQ6XCJyZWRpcmVjdFwifSxmdW5jdGlvbihvKXtpLnJlcGxhY2VNYWluKGUsbixmdW5jdGlvbigpe2NlLnB1c2hTdGF0ZSh0LHt0eXBlOlwicmVkaXJlY3RcIixpZDppLm1haW4uaWQsc2Nyb2xsOnJ9LGUpLGkucmVnaXN0ZXJOZXdMb2NhdGlvbih3aW5kb3cubG9jYXRpb24pLG8oKX0pfSl9fSx7a2V5OlwicmVwbGFjZVJvb3RIaXN0b3J5XCIsdmFsdWU6ZnVuY3Rpb24oKXtjZS5wdXNoU3RhdGUoXCJyZXBsYWNlXCIse3Jvb3Q6ITAsdHlwZTpcInBhdGNoXCIsaWQ6dGhpcy5tYWluLmlkfSl9fSx7a2V5OlwicmVnaXN0ZXJOZXdMb2NhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuY3VycmVudExvY2F0aW9uO3JldHVybiB0LnBhdGhuYW1lK3Quc2VhcmNoIT09ZS5wYXRobmFtZStlLnNlYXJjaCYmKHRoaXMuY3VycmVudExvY2F0aW9uPSQoZSksITApfX0se2tleTpcImJpbmRGb3Jtc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PTA7dGhpcy5vbihcInN1Ym1pdFwiLGZ1bmN0aW9uKHQpe3ZhciBuPXQudGFyZ2V0LmdldEF0dHJpYnV0ZShlLmJpbmRpbmcoXCJzdWJtaXRcIikpO24mJih0LnByZXZlbnREZWZhdWx0KCksdC50YXJnZXQuZGlzYWJsZWQ9ITAsZS53aXRoaW5Pd25lcnModC50YXJnZXQsZnVuY3Rpb24oZSxpKXtyZXR1cm4gZS5zdWJtaXRGb3JtKHQudGFyZ2V0LGksbil9KSl9LCExKTtmb3IodmFyIG49ZnVuY3Rpb24oKXt2YXIgbj1yW2ldO2Uub24obixmdW5jdGlvbihpKXt2YXIgcj1pLnRhcmdldCxvPXIuZm9ybSYmci5mb3JtLmdldEF0dHJpYnV0ZShlLmJpbmRpbmcoXCJjaGFuZ2VcIikpO2lmKG8mJihcIm51bWJlclwiIT09ci50eXBlfHwhci52YWxpZGl0eXx8IXIudmFsaWRpdHkuYmFkSW5wdXQpKXt2YXIgYT10O3QrKzt2YXIgdT1sZS5wcml2YXRlKHIsXCJwcmV2LWl0ZXJhdGlvblwiKXx8e30scz11LmF0LGM9dS50eXBlO3M9PT1hLTEmJm4hPT1jfHwobGUucHV0UHJpdmF0ZShyLFwicHJldi1pdGVyYXRpb25cIix7YXQ6YSx0eXBlOm59KSxlLmRlYm91bmNlKHIsaSxmdW5jdGlvbigpe2Uud2l0aGluT3duZXJzKHIuZm9ybSxmdW5jdGlvbih0LG4pe2xlLnB1dFByaXZhdGUocixcInBoeC1oYXMtZm9jdXNlZFwiLCEwKSxsZS5pc1RleHR1YWxJbnB1dChyKXx8ZS5zZXRBY3RpdmVFbGVtZW50KHIpLHQucHVzaElucHV0KHIsbixvLGkudGFyZ2V0KX0pfSkpfX0sITEpfSxpPTAscj1bXCJjaGFuZ2VcIixcImlucHV0XCJdO2k8ci5sZW5ndGg7aSsrKW4oKX19LHtrZXk6XCJkZWJvdW5jZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzLmJpbmRpbmcoXCJkZWJvdW5jZVwiKSxyPXRoaXMuYmluZGluZyhcInRocm90dGxlXCIpLG89dGhpcy5kZWZhdWx0cy5kZWJvdW5jZS50b1N0cmluZygpLGE9dGhpcy5kZWZhdWx0cy50aHJvdHRsZS50b1N0cmluZygpO2xlLmRlYm91bmNlKGUsdCxpLG8scixhLG4pfX0se2tleTpcInNpbGVuY2VFdmVudHNcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLnNpbGVuY2VkPSEwLGUoKSx0aGlzLnNpbGVuY2VkPSExfX0se2tleTpcIm9uXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKGUsZnVuY3Rpb24oZSl7bi5zaWxlbmNlZHx8dChlKX0pfX1dKSxlfSgpLGNlPXtjYW5QdXNoU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09aGlzdG9yeS5wdXNoU3RhdGV9LGRyb3BMb2NhbDpmdW5jdGlvbihlLHQpe3JldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5sb2NhbEtleShlLHQpKX0sdXBkYXRlTG9jYWw6ZnVuY3Rpb24oZSx0LG4saSl7dmFyIHI9dGhpcy5nZXRMb2NhbChlLHQpLG89dGhpcy5sb2NhbEtleShlLHQpLGE9bnVsbD09PXI/bjppKHIpO3JldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0obyxKU09OLnN0cmluZ2lmeShhKSksYX0sZ2V0TG9jYWw6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5sb2NhbEtleShlLHQpKSl9LGZldGNoUGFnZTpmdW5jdGlvbihlLHQpe3ZhciBuPW5ldyBYTUxIdHRwUmVxdWVzdDtuLm9wZW4oXCJHRVRcIixlLCEwKSxuLnRpbWVvdXQ9M2U0LG4uc2V0UmVxdWVzdEhlYWRlcihcImNvbnRlbnQtdHlwZVwiLFwidGV4dC9odG1sXCIpLG4uc2V0UmVxdWVzdEhlYWRlcihcImNhY2hlLWNvbnRyb2xcIixcIm1heC1hZ2U9MCwgbm8tY2FjaGUsIG5vLXN0b3JlLCBtdXN0LXJldmFsaWRhdGUsIHBvc3QtY2hlY2s9MCwgcHJlLWNoZWNrPTBcIiksbi5zZXRSZXF1ZXN0SGVhZGVyKFwieC1yZXF1ZXN0ZWQtd2l0aFwiLFwibGl2ZS1saW5rXCIpLG4ub25lcnJvcj1mdW5jdGlvbigpe3JldHVybiB0KDQwMCl9LG4ub250aW1lb3V0PWZ1bmN0aW9uKCl7cmV0dXJuIHQoNTA0KX0sbi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtpZig0PT09bi5yZWFkeVN0YXRlKXt2YXIgaT1uZXcgVVJMKGUpLHI9aS5wYXRobmFtZStpLnNlYXJjaCxvPVoobi5nZXRSZXNwb25zZUhlYWRlcihcIngtcmVzcG9uc2UtdXJsXCIpfHxuLnJlc3BvbnNlVVJMLGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgVVJMKGUpfSksYT1vP28ucGF0aG5hbWUrby5zZWFyY2g6bnVsbDtyZXR1cm5cImxpdmUtbGlua1wiIT09bi5nZXRSZXNwb25zZUhlYWRlcihcIngtcmVxdWVzdGVkLXdpdGhcIik/dCg0MDApOm51bGw9PT1vfHxhIT1yP3QoMzAyKToyMDAhPT1uLnN0YXR1cz90KG4uc3RhdHVzKTp2b2lkIHQoMjAwLG4ucmVzcG9uc2VUZXh0KX19LG4uc2VuZCgpfSx1cGRhdGVDdXJyZW50U3RhdGU6ZnVuY3Rpb24oZSl7dGhpcy5jYW5QdXNoU3RhdGUoKSYmaGlzdG9yeS5yZXBsYWNlU3RhdGUoZShoaXN0b3J5LnN0YXRlfHx7fSksXCJcIix3aW5kb3cubG9jYXRpb24uaHJlZil9LHB1c2hTdGF0ZTpmdW5jdGlvbihlLHQsbil7aWYodGhpcy5jYW5QdXNoU3RhdGUoKSl7aWYobiE9PXdpbmRvdy5sb2NhdGlvbi5ocmVmKXtpZihcInJlZGlyZWN0XCI9PXQudHlwZSYmdC5zY3JvbGwpe3ZhciBpPWhpc3Rvcnkuc3RhdGV8fHt9O2kuc2Nyb2xsPXQuc2Nyb2xsLGhpc3RvcnkucmVwbGFjZVN0YXRlKGksXCJcIix3aW5kb3cubG9jYXRpb24uaHJlZil9ZGVsZXRlIHQuc2Nyb2xsLGhpc3RvcnlbZStcIlN0YXRlXCJdKHQsXCJcIixufHxudWxsKTt2YXIgcj10aGlzLmdldEhhc2hUYXJnZXRFbCh3aW5kb3cubG9jYXRpb24uaGFzaCk7cj9yLnNjcm9sbEludG9WaWV3KCk6XCJyZWRpcmVjdFwiPT09dC50eXBlJiZ3aW5kb3cuc2Nyb2xsKDAsMCl9fWVsc2UgdGhpcy5yZWRpcmVjdChuKX0sc2V0Q29va2llOmZ1bmN0aW9uKGUsdCl7ZG9jdW1lbnQuY29va2llPVwiXCIuY29uY2F0KGUsXCI9XCIpLmNvbmNhdCh0KX0sZ2V0Q29va2llOmZ1bmN0aW9uKGUpe3JldHVybiBkb2N1bWVudC5jb29raWUucmVwbGFjZShuZXcgUmVnRXhwKFwiKD86KD86XnwuKjtzKilcIi5jb25jYXQoZSxcInMqPXMqKFteO10qKS4qJCl8Xi4qJFwiKSksXCIkMVwiKX0scmVkaXJlY3Q6ZnVuY3Rpb24oZSx0KXt0JiZjZS5zZXRDb29raWUoXCJfX3Bob2VuaXhfZmxhc2hfX1wiLHQrXCI7IG1heC1hZ2U9NjAwMDA7IHBhdGg9L1wiKSx3aW5kb3cubG9jYXRpb249ZX0sbG9jYWxLZXk6ZnVuY3Rpb24oZSx0KXtyZXR1cm5cIlwiLmNvbmNhdChlLFwiLVwiKS5jb25jYXQodCl9LGdldEhhc2hUYXJnZXRFbDpmdW5jdGlvbihlKXt2YXIgdD1lLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDEpO2lmKFwiXCIhPT10KXJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KXx8ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYVtuYW1lPVwiJy5jb25jYXQodCwnXCJdJykpfX0sbGU9e2J5SWQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGUpfHx6KFwibm8gaWQgZm91bmQgZm9yIFwiLmNvbmNhdChlKSl9LHJlbW92ZUNsYXNzOmZ1bmN0aW9uKGUsdCl7ZS5jbGFzc0xpc3QucmVtb3ZlKHQpLDA9PT1lLmNsYXNzTGlzdC5sZW5ndGgmJmUucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIil9LGFsbDpmdW5jdGlvbihlLHQsbil7dmFyIGk9QXJyYXkuZnJvbShlLnF1ZXJ5U2VsZWN0b3JBbGwodCkpO3JldHVybiBuP2kuZm9yRWFjaChuKTppfSxjaGlsZE5vZGVMZW5ndGg6ZnVuY3Rpb24oZSl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpO3JldHVybiB0LmlubmVySFRNTD1lLHQuY29udGVudC5jaGlsZEVsZW1lbnRDb3VudH0saXNVcGxvYWRJbnB1dDpmdW5jdGlvbihlKXtyZXR1cm5cImZpbGVcIj09PWUudHlwZSYmbnVsbCE9PWUuZ2V0QXR0cmlidXRlKE0pfSxmaW5kVXBsb2FkSW5wdXRzOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmFsbChlLCdpbnB1dFt0eXBlPVwiZmlsZVwiXVsnLmNvbmNhdChNLFwiXVwiKSl9LGZpbmRDb21wb25lbnROb2RlTGlzdDpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmZpbHRlcldpdGhpblNhbWVMaXZlVmlldyh0aGlzLmFsbChlLFwiW1wiLmNvbmNhdChILCc9XCInKS5jb25jYXQodCwnXCJdJykpLGUpfSxpc1BoeERlc3Ryb3llZDpmdW5jdGlvbihlKXtyZXR1cm4hKCFlLmlkfHwhbGUucHJpdmF0ZShlLFwiZGVzdHJveWVkXCIpKX0sbWFya1BoeENoaWxkRGVzdHJveWVkOmZ1bmN0aW9uKGUpe2Uuc2V0QXR0cmlidXRlKFwiZGF0YS1waHgtc2Vzc2lvblwiLFwiXCIpLHRoaXMucHV0UHJpdmF0ZShlLFwiZGVzdHJveWVkXCIsITApfSxmaW5kUGh4Q2hpbGRyZW5JbkZyYWdtZW50OmZ1bmN0aW9uKGUsdCl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpO3JldHVybiBuLmlubmVySFRNTD1lLHRoaXMuZmluZFBoeENoaWxkcmVuKG4uY29udGVudCx0KX0saXNJZ25vcmVkOmZ1bmN0aW9uKGUsdCl7cmV0dXJuXCJpZ25vcmVcIj09PShlLmdldEF0dHJpYnV0ZSh0KXx8ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC11cGRhdGVcIikpfSxpc1BoeFVwZGF0ZTpmdW5jdGlvbihlLHQsbil7cmV0dXJuIGUuZ2V0QXR0cmlidXRlJiZuLmluZGV4T2YoZS5nZXRBdHRyaWJ1dGUodCkpPj0wfSxmaW5kUGh4Q2hpbGRyZW46ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5hbGwoZSxcIlwiLmNvbmNhdChVLFwiW1wiKS5jb25jYXQoXCJkYXRhLXBoeC1wYXJlbnQtaWRcIiwnPVwiJykuY29uY2F0KHQsJ1wiXScpKX0sZmluZFBhcmVudENJRHM6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLGk9bmV3IFNldCh0KTtyZXR1cm4gdC5yZWR1Y2UoZnVuY3Rpb24odCxpKXt2YXIgcj1cIltcIi5jb25jYXQoSCwnPVwiJykuY29uY2F0KGksJ1wiXSBbJykuY29uY2F0KEgsXCJdXCIpO3JldHVybiBuLmZpbHRlcldpdGhpblNhbWVMaXZlVmlldyhuLmFsbChlLHIpLGUpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZS5nZXRBdHRyaWJ1dGUoSCkpfSkuZm9yRWFjaChmdW5jdGlvbihlKXtyZXR1cm4gdC5kZWxldGUoZSl9KSx0fSxpKX0sZmlsdGVyV2l0aGluU2FtZUxpdmVWaWV3OmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztyZXR1cm4gdC5xdWVyeVNlbGVjdG9yKFUpP2UuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBuLndpdGhpblNhbWVMaXZlVmlldyhlLHQpfSk6ZX0sd2l0aGluU2FtZUxpdmVWaWV3OmZ1bmN0aW9uKGUsdCl7Zm9yKDtlPWUucGFyZW50Tm9kZTspe2lmKGUuaXNTYW1lTm9kZSh0KSlyZXR1cm4hMDtpZihlLmdldEF0dHJpYnV0ZShPKSlyZXR1cm4hMX19LHByaXZhdGU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5waHhQcml2YXRlJiZlLnBoeFByaXZhdGVbdF19LGRlbGV0ZVByaXZhdGU6ZnVuY3Rpb24oZSx0KXtlLnBoeFByaXZhdGUmJmRlbGV0ZSBlLnBoeFByaXZhdGVbdF19LHB1dFByaXZhdGU6ZnVuY3Rpb24oZSx0LG4pe2UucGh4UHJpdmF0ZXx8KGUucGh4UHJpdmF0ZT17fSksZS5waHhQcml2YXRlW3RdPW59LGNvcHlQcml2YXRlczpmdW5jdGlvbihlLHQpe3QucGh4UHJpdmF0ZSYmKGUucGh4UHJpdmF0ZT0kKHQucGh4UHJpdmF0ZSkpfSxwdXRUaXRsZTpmdW5jdGlvbihlKXt2YXIgdD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwidGl0bGVcIikuZGF0YXNldCxuPXQucHJlZml4LGk9dC5zdWZmaXg7ZG9jdW1lbnQudGl0bGU9XCJcIi5jb25jYXQobnx8XCJcIikuY29uY2F0KGUpLmNvbmNhdChpfHxcIlwiKX0sZGVib3VuY2U6ZnVuY3Rpb24oZSx0LG4saSxyLG8sYSl7dmFyIHU9dGhpcyxzPWUuZ2V0QXR0cmlidXRlKG4pLGM9ZS5nZXRBdHRyaWJ1dGUocik7XCJcIj09PXMmJihzPWkpLFwiXCI9PT1jJiYoYz1vKTt2YXIgbD1zfHxjO3N3aXRjaChsKXtjYXNlIG51bGw6cmV0dXJuIGEoKTtjYXNlXCJibHVyXCI6cmV0dXJuIHZvaWQodGhpcy5vbmNlKGUsXCJkZWJvdW5jZS1ibHVyXCIpJiZlLmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsZnVuY3Rpb24oKXtyZXR1cm4gYSgpfSkpO2RlZmF1bHQ6dmFyIGQ9cGFyc2VJbnQobCksaD10aGlzLmluY0N5Y2xlKGUsXCJkZWJvdW5jZS10cmlnZ2VyXCIsZnVuY3Rpb24oKXtyZXR1cm4gYz91LmRlbGV0ZVByaXZhdGUoZSxcInRocm90dGxlZFwiKTphKCl9KTtpZihpc05hTihkKSlyZXR1cm4geihcImludmFsaWQgdGhyb3R0bGUvZGVib3VuY2UgdmFsdWU6IFwiLmNvbmNhdChsKSk7aWYoYyl7dmFyIGY9ITE7aWYoXCJrZXlkb3duXCI9PT10LnR5cGUpe3ZhciB2PXRoaXMucHJpdmF0ZShlLFwiZGVib3VuY2UtcHJldi1rZXlcIik7dGhpcy5wdXRQcml2YXRlKGUsXCJkZWJvdW5jZS1wcmV2LWtleVwiLHQua2V5KSxmPXYhPT10LmtleX1pZighZiYmdGhpcy5wcml2YXRlKGUsXCJ0aHJvdHRsZWRcIikpcmV0dXJuITE7YSgpLHRoaXMucHV0UHJpdmF0ZShlLFwidGhyb3R0bGVkXCIsITApLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gdS50cmlnZ2VyQ3ljbGUoZSxcImRlYm91bmNlLXRyaWdnZXJcIil9LGQpfWVsc2Ugc2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiB1LnRyaWdnZXJDeWNsZShlLFwiZGVib3VuY2UtdHJpZ2dlclwiLGgpfSxkKTtlLmZvcm0mJnRoaXMub25jZShlLmZvcm0sXCJiaW5kLWRlYm91bmNlXCIpJiZlLmZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLGZ1bmN0aW9uKHQpe0FycmF5LmZyb20obmV3IEZvcm1EYXRhKGUuZm9ybSkuZW50cmllcygpLGZ1bmN0aW9uKHQpe3ZhciBuPXgodCwyKSxpPW5bMF0scj0oblsxXSxlLmZvcm0ucXVlcnlTZWxlY3RvcignW25hbWU9XCInLmNvbmNhdChpLCdcIl0nKSkpO3UuaW5jQ3ljbGUocixcImRlYm91bmNlLXRyaWdnZXJcIiksdS5kZWxldGVQcml2YXRlKHIsXCJ0aHJvdHRsZWRcIil9KX0pLHRoaXMub25jZShlLFwiYmluZC1kZWJvdW5jZVwiKSYmZS5hZGRFdmVudExpc3RlbmVyKFwiYmx1clwiLGZ1bmN0aW9uKHQpe3JldHVybiB1LnRyaWdnZXJDeWNsZShlLFwiZGVib3VuY2UtdHJpZ2dlclwiKX0pfX0sdHJpZ2dlckN5Y2xlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT14KHRoaXMucHJpdmF0ZShlLHQpLDIpLHI9aVswXSxvPWlbMV07bnx8KG49ciksbj09PXImJih0aGlzLmluY0N5Y2xlKGUsdCksbygpKX0sb25jZTpmdW5jdGlvbihlLHQpe3JldHVybiEwIT09dGhpcy5wcml2YXRlKGUsdCkmJih0aGlzLnB1dFByaXZhdGUoZSx0LCEwKSwhMCl9LGluY0N5Y2xlOmZ1bmN0aW9uKGUsdCl7dmFyIG49YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOmZ1bmN0aW9uKCl7fSxpPXgodGhpcy5wcml2YXRlKGUsdCl8fFswLG5dLDIpLHI9aVswXTtpWzFdO3JldHVybiByKyssdGhpcy5wdXRQcml2YXRlKGUsdCxbcixuXSkscn0sZGlzY2FyZEVycm9yOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10LmdldEF0dHJpYnV0ZSYmdC5nZXRBdHRyaWJ1dGUobikscj1pJiZlLnF1ZXJ5U2VsZWN0b3IoJ1tpZD1cIicuY29uY2F0KGksJ1wiXSwgW25hbWU9XCInKS5jb25jYXQoaSwnXCJdJykpO3ImJih0aGlzLnByaXZhdGUocixcInBoeC1oYXMtZm9jdXNlZFwiKXx8dGhpcy5wcml2YXRlKHIuZm9ybSxcInBoeC1oYXMtc3VibWl0dGVkXCIpfHx0LmNsYXNzTGlzdC5hZGQoXCJwaHgtbm8tZmVlZGJhY2tcIikpfSxzaG93RXJyb3I6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzOyhlLmlkfHxlLm5hbWUpJiZ0aGlzLmFsbChlLmZvcm0sXCJbXCIuY29uY2F0KHQsJz1cIicpLmNvbmNhdChlLmlkLCdcIl0sIFsnKS5jb25jYXQodCwnPVwiJykuY29uY2F0KGUubmFtZSwnXCJdJyksZnVuY3Rpb24oZSl7bi5yZW1vdmVDbGFzcyhlLFwicGh4LW5vLWZlZWRiYWNrXCIpfSl9LGlzUGh4Q2hpbGQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuZ2V0QXR0cmlidXRlJiZlLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LXBhcmVudC1pZFwiKX0sZGlzcGF0Y2hFdmVudDpmdW5jdGlvbihlLHQpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fSxpPW5ldyBDdXN0b21FdmVudCh0LHtidWJibGVzOiEwLGNhbmNlbGFibGU6ITAsZGV0YWlsOm59KTtlLmRpc3BhdGNoRXZlbnQoaSl9LGNsb25lTm9kZTpmdW5jdGlvbihlLHQpe2lmKHZvaWQgMD09PXQpcmV0dXJuIGUuY2xvbmVOb2RlKCEwKTt2YXIgbj1lLmNsb25lTm9kZSghMSk7cmV0dXJuIG4uaW5uZXJIVE1MPXQsbn0sbWVyZ2VBdHRyczpmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e30saT1uLmV4Y2x1ZGV8fFtdLHI9bi5pc0lnbm9yZWQsbz10LmF0dHJpYnV0ZXMsYT1vLmxlbmd0aC0xO2E+PTA7YS0tKXt2YXIgdT1vW2FdLm5hbWU7aS5pbmRleE9mKHUpPDAmJmUuc2V0QXR0cmlidXRlKHUsdC5nZXRBdHRyaWJ1dGUodSkpfWZvcih2YXIgcz1lLmF0dHJpYnV0ZXMsYz1zLmxlbmd0aC0xO2M+PTA7Yy0tKXt2YXIgbD1zW2NdLm5hbWU7cj9sLnN0YXJ0c1dpdGgoXCJkYXRhLVwiKSYmIXQuaGFzQXR0cmlidXRlKGwpJiZlLnJlbW92ZUF0dHJpYnV0ZShsKTp0Lmhhc0F0dHJpYnV0ZShsKXx8ZS5yZW1vdmVBdHRyaWJ1dGUobCl9fSxtZXJnZUZvY3VzZWRJbnB1dDpmdW5jdGlvbihlLHQpe2UgaW5zdGFuY2VvZiBIVE1MU2VsZWN0RWxlbWVudHx8bGUubWVyZ2VBdHRycyhlLHQse2V4Y2VwdDpbXCJ2YWx1ZVwiXX0pLHQucmVhZE9ubHk/ZS5zZXRBdHRyaWJ1dGUoXCJyZWFkb25seVwiLCEwKTplLnJlbW92ZUF0dHJpYnV0ZShcInJlYWRvbmx5XCIpfSxoYXNTZWxlY3Rpb25SYW5nZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5zZXRTZWxlY3Rpb25SYW5nZSYmKFwidGV4dFwiPT09ZS50eXBlfHxcInRleHRhcmVhXCI9PT1lLnR5cGUpfSxyZXN0b3JlRm9jdXM6ZnVuY3Rpb24oZSx0LG4pe2lmKGxlLmlzVGV4dHVhbElucHV0KGUpKXt2YXIgaT1lLm1hdGNoZXMoXCI6Zm9jdXNcIik7ZS5yZWFkT25seSYmZS5ibHVyKCksaXx8ZS5mb2N1cygpLHRoaXMuaGFzU2VsZWN0aW9uUmFuZ2UoZSkmJmUuc2V0U2VsZWN0aW9uUmFuZ2UodCxuKX19LGlzRm9ybUlucHV0OmZ1bmN0aW9uKGUpe3JldHVybi9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhKSQvaS50ZXN0KGUudGFnTmFtZSkmJlwiYnV0dG9uXCIhPT1lLnR5cGV9LHN5bmNBdHRyc1RvUHJvcHM6ZnVuY3Rpb24oZSl7ZSBpbnN0YW5jZW9mIEhUTUxJbnB1dEVsZW1lbnQmJkouaW5kZXhPZihlLnR5cGUudG9Mb2NhbGVMb3dlckNhc2UoKSk+PTAmJihlLmNoZWNrZWQ9bnVsbCE9PWUuZ2V0QXR0cmlidXRlKFwiY2hlY2tlZFwiKSl9LGlzVGV4dHVhbElucHV0OmZ1bmN0aW9uKGUpe3JldHVybiBCLmluZGV4T2YoZS50eXBlKT49MH0saXNOb3dUcmlnZ2VyRm9ybUV4dGVybmFsOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuZ2V0QXR0cmlidXRlJiZudWxsIT09ZS5nZXRBdHRyaWJ1dGUodCl9LHN5bmNQZW5kaW5nUmVmOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1lLmdldEF0dHJpYnV0ZShGKTtyZXR1cm4gbnVsbD09PWl8fChsZS5pc0Zvcm1JbnB1dChlKXx8bnVsbCE9PWUuZ2V0QXR0cmlidXRlKG4pPyhsZS5pc1VwbG9hZElucHV0KGUpJiZsZS5tZXJnZUF0dHJzKGUsdCx7aXNJZ25vcmVkOiEwfSksbGUucHV0UHJpdmF0ZShlLEYsdCksITEpOihqLmZvckVhY2goZnVuY3Rpb24obil7ZS5jbGFzc0xpc3QuY29udGFpbnMobikmJnQuY2xhc3NMaXN0LmFkZChuKX0pLHQuc2V0QXR0cmlidXRlKEYsaSksITApKX0sY2xlYW5DaGlsZE5vZGVzOmZ1bmN0aW9uKGUsdCl7aWYobGUuaXNQaHhVcGRhdGUoZSx0LFtcImFwcGVuZFwiLFwicHJlcGVuZFwiXSkpe3ZhciBuPVtdO2UuY2hpbGROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuaWR8fChlLm5vZGVUeXBlPT09Tm9kZS5URVhUX05PREUmJlwiXCI9PT1lLm5vZGVWYWx1ZS50cmltKCl8fHooXCJvbmx5IEhUTUwgZWxlbWVudCB0YWdzIHdpdGggYW4gaWQgYXJlIGFsbG93ZWQgaW5zaWRlIGNvbnRhaW5lcnMgd2l0aCBwaHgtdXBkYXRlLlxcblxcblwiKydyZW1vdmluZyBpbGxlZ2FsIG5vZGU6IFwiJy5jb25jYXQoKGUub3V0ZXJIVE1MfHxlLm5vZGVWYWx1ZSkudHJpbSgpLCdcIlxcblxcbicpKSxuLnB1c2goZSkpfSksbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLnJlbW92ZSgpfSl9fX0sZGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQsbixpKXtUKHRoaXMsZSk7dmFyIHI9bmV3IFNldCxvPW5ldyBTZXQoQShuLmNoaWxkcmVuKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuaWR9KSksYT1bXTtBcnJheS5mcm9tKHQuY2hpbGRyZW4pLmZvckVhY2goZnVuY3Rpb24oZSl7aWYoZS5pZCYmKHIuYWRkKGUuaWQpLG8uaGFzKGUuaWQpKSl7dmFyIHQ9ZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nJiZlLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuaWQ7YS5wdXNoKHtlbGVtZW50SWQ6ZS5pZCxwcmV2aW91c0VsZW1lbnRJZDp0fSl9fSksdGhpcy5jb250YWluZXJJZD1uLmlkLHRoaXMudXBkYXRlVHlwZT1pLHRoaXMuZWxlbWVudHNUb01vZGlmeT1hLHRoaXMuZWxlbWVudElkc1RvQWRkPUEobykuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFyLmhhcyhlKX0pfXJldHVybiBfKGUsW3trZXk6XCJwZXJmb3JtXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1sZS5ieUlkKHRoaXMuY29udGFpbmVySWQpO3RoaXMuZWxlbWVudHNUb01vZGlmeS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QucHJldmlvdXNFbGVtZW50SWQ/Wihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0LnByZXZpb3VzRWxlbWVudElkKSxmdW5jdGlvbihlKXtaKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHQuZWxlbWVudElkKSxmdW5jdGlvbih0KXt0LnByZXZpb3VzRWxlbWVudFNpYmxpbmcmJnQucHJldmlvdXNFbGVtZW50U2libGluZy5pZD09ZS5pZHx8ZS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJhZnRlcmVuZFwiLHQpfSl9KTpaKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHQuZWxlbWVudElkKSxmdW5jdGlvbih0KXtudWxsPT10LnByZXZpb3VzRWxlbWVudFNpYmxpbmd8fGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYWZ0ZXJiZWdpblwiLHQpfSl9KSxcInByZXBlbmRcIj09dGhpcy51cGRhdGVUeXBlJiZ0aGlzLmVsZW1lbnRJZHNUb0FkZC5yZXZlcnNlKCkuZm9yRWFjaChmdW5jdGlvbih0KXtaKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHQpLGZ1bmN0aW9uKHQpe3JldHVybiBlLmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyYmVnaW5cIix0KX0pfSl9fV0pLGV9KCksaGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQsbixpLHIsbyl7VCh0aGlzLGUpLHRoaXMudmlldz10LHRoaXMubGl2ZVNvY2tldD10LmxpdmVTb2NrZXQsdGhpcy5jb250YWluZXI9bix0aGlzLmlkPWksdGhpcy5yb290SUQ9dC5yb290LmlkLHRoaXMuaHRtbD1yLHRoaXMudGFyZ2V0Q0lEPW8sdGhpcy5jaWRQYXRjaD1cIm51bWJlclwiPT10eXBlb2YgdGhpcy50YXJnZXRDSUQsdGhpcy5jYWxsYmFja3M9e2JlZm9yZWFkZGVkOltdLGJlZm9yZXVwZGF0ZWQ6W10sYmVmb3JlcGh4Q2hpbGRBZGRlZDpbXSxhZnRlcmFkZGVkOltdLGFmdGVydXBkYXRlZDpbXSxhZnRlcmRpc2NhcmRlZDpbXSxhZnRlcnBoeENoaWxkQWRkZWQ6W119fXJldHVybiBfKGUsbnVsbCxbe2tleTpcInBhdGNoRWxcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7YihlLHQse2NoaWxkcmVuT25seTohMSxvbkJlZm9yZUVsVXBkYXRlZDpmdW5jdGlvbihlLHQpe2lmKG4mJm4uaXNTYW1lTm9kZShlKSYmbGUuaXNGb3JtSW5wdXQoZSkpcmV0dXJuIGxlLm1lcmdlRm9jdXNlZElucHV0KGUsdCksITF9fSl9fV0pLF8oZSxbe2tleTpcImJlZm9yZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dGhpcy5jYWxsYmFja3NbXCJiZWZvcmVcIi5jb25jYXQoZSldLnB1c2godCl9fSx7a2V5OlwiYWZ0ZXJcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3RoaXMuY2FsbGJhY2tzW1wiYWZ0ZXJcIi5jb25jYXQoZSldLnB1c2godCl9fSx7a2V5OlwidHJhY2tCZWZvcmVcIix2YWx1ZTpmdW5jdGlvbihlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLGk9MTtpPHQ7aSsrKW5baS0xXT1hcmd1bWVudHNbaV07dGhpcy5jYWxsYmFja3NbXCJiZWZvcmVcIi5jb25jYXQoZSldLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIGUuYXBwbHkodm9pZCAwLG4pfSl9fSx7a2V5OlwidHJhY2tBZnRlclwiLHZhbHVlOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCksaT0xO2k8dDtpKyspbltpLTFdPWFyZ3VtZW50c1tpXTt0aGlzLmNhbGxiYWNrc1tcImFmdGVyXCIuY29uY2F0KGUpXS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmFwcGx5KHZvaWQgMCxuKX0pfX0se2tleTpcIm1hcmtQcnVuYWJsZUNvbnRlbnRGb3JSZW1vdmFsXCIsdmFsdWU6ZnVuY3Rpb24oKXtsZS5hbGwodGhpcy5jb250YWluZXIsXCJbcGh4LXVwZGF0ZT1hcHBlbmRdID4gKiwgW3BoeC11cGRhdGU9cHJlcGVuZF0gPiAqXCIsZnVuY3Rpb24oZSl7ZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1yZW1vdmVcIixcIlwiKX0pfX0se2tleTpcInBlcmZvcm1cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLnZpZXcsbj10aGlzLmxpdmVTb2NrZXQsaT10aGlzLmNvbnRhaW5lcixyPXRoaXMuaHRtbCxvPXRoaXMuaXNDSURQYXRjaCgpP3RoaXMudGFyZ2V0Q0lEQ29udGFpbmVyKHIpOmk7aWYoIXRoaXMuaXNDSURQYXRjaCgpfHxvKXt2YXIgYT1uLmdldEFjdGl2ZUVsZW1lbnQoKSx1PWEmJmxlLmhhc1NlbGVjdGlvblJhbmdlKGEpP2E6e30scz11LnNlbGVjdGlvblN0YXJ0LGM9dS5zZWxlY3Rpb25FbmQsbD1uLmJpbmRpbmcoXCJ1cGRhdGVcIiksZD1uLmJpbmRpbmcoXCJmZWVkYmFjay1mb3JcIiksaD1uLmJpbmRpbmcoXCJkaXNhYmxlLXdpdGhcIiksZj1uLmJpbmRpbmcoXCJ0cmlnZ2VyLWFjdGlvblwiKSx2PVtdLHA9W10sZz1bXSxtPW51bGwseT1uLnRpbWUoXCJwcmVtb3JwaCBjb250YWluZXIgcHJlcFwiLGZ1bmN0aW9uKCl7cmV0dXJuIGUuYnVpbGREaWZmSFRNTChpLHIsbCxvKX0pO3JldHVybiB0aGlzLnRyYWNrQmVmb3JlKFwiYWRkZWRcIixpKSx0aGlzLnRyYWNrQmVmb3JlKFwidXBkYXRlZFwiLGksaSksbi50aW1lKFwibW9ycGhkb21cIixmdW5jdGlvbigpe2Iobyx5LHtjaGlsZHJlbk9ubHk6bnVsbD09PW8uZ2V0QXR0cmlidXRlKEgpLGdldE5vZGVLZXk6ZnVuY3Rpb24oZSl7cmV0dXJuIGxlLmlzUGh4RGVzdHJveWVkKGUpP251bGw6ZS5pZH0sb25CZWZvcmVOb2RlQWRkZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIGxlLmRpc2NhcmRFcnJvcihvLHQsZCksZS50cmFja0JlZm9yZShcImFkZGVkXCIsdCksdH0sb25Ob2RlQWRkZWQ6ZnVuY3Rpb24obil7bGUuaXNOb3dUcmlnZ2VyRm9ybUV4dGVybmFsKG4sZikmJihtPW4pLGxlLmlzUGh4Q2hpbGQobikmJnQub3duc0VsZW1lbnQobikmJmUudHJhY2tBZnRlcihcInBoeENoaWxkQWRkZWRcIixuKSx2LnB1c2gobil9LG9uTm9kZURpc2NhcmRlZDpmdW5jdGlvbih0KXtsZS5pc1BoeENoaWxkKHQpJiZuLmRlc3Ryb3lWaWV3QnlFbCh0KSxlLnRyYWNrQWZ0ZXIoXCJkaXNjYXJkZWRcIix0KX0sb25CZWZvcmVOb2RlRGlzY2FyZGVkOmZ1bmN0aW9uKHQpe3JldHVybiEoIXQuZ2V0QXR0cmlidXRlfHxudWxsPT09dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1yZW1vdmVcIikpfHwobnVsbD09PXQucGFyZW50Tm9kZXx8IWxlLmlzUGh4VXBkYXRlKHQucGFyZW50Tm9kZSxsLFtcImFwcGVuZFwiLFwicHJlcGVuZFwiXSl8fCF0LmlkKSYmIWUuc2tpcENJRFNpYmxpbmcodCl9LG9uRWxVcGRhdGVkOmZ1bmN0aW9uKGUpe2xlLmlzTm93VHJpZ2dlckZvcm1FeHRlcm5hbChlLGYpJiYobT1lKSxwLnB1c2goZSl9LG9uQmVmb3JlRWxVcGRhdGVkOmZ1bmN0aW9uKHQsbil7aWYobGUuY2xlYW5DaGlsZE5vZGVzKG4sbCksZS5za2lwQ0lEU2libGluZyhuKSlyZXR1cm4hMTtpZihsZS5pc0lnbm9yZWQodCxsKSlyZXR1cm4gZS50cmFja0JlZm9yZShcInVwZGF0ZWRcIix0LG4pLGxlLm1lcmdlQXR0cnModCxuLHtpc0lnbm9yZWQ6ITB9KSxwLnB1c2godCksITE7aWYoXCJudW1iZXJcIj09PXQudHlwZSYmdC52YWxpZGl0eSYmdC52YWxpZGl0eS5iYWRJbnB1dClyZXR1cm4hMTtpZighbGUuc3luY1BlbmRpbmdSZWYodCxuLGgpKXJldHVybiBsZS5pc1VwbG9hZElucHV0KHQpJiYoZS50cmFja0JlZm9yZShcInVwZGF0ZWRcIix0LG4pLHAucHVzaCh0KSksITE7aWYobGUuaXNQaHhDaGlsZChuKSl7dmFyIGk9dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1zZXNzaW9uXCIpO3JldHVybiBsZS5tZXJnZUF0dHJzKHQsbix7ZXhjbHVkZTpbXCJkYXRhLXBoeC1zdGF0aWNcIl19KSxcIlwiIT09aSYmdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1zZXNzaW9uXCIsaSksdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1yb290LWlkXCIsZS5yb290SUQpLCExfXJldHVybiBsZS5jb3B5UHJpdmF0ZXMobix0KSxsZS5kaXNjYXJkRXJyb3IobyxuLGQpLGEmJnQuaXNTYW1lTm9kZShhKSYmbGUuaXNGb3JtSW5wdXQodCkmJiFlLmZvcmNlRm9jdXNlZFNlbGVjdFVwZGF0ZSh0LG4pPyhlLnRyYWNrQmVmb3JlKFwidXBkYXRlZFwiLHQsbiksbGUubWVyZ2VGb2N1c2VkSW5wdXQodCxuKSxsZS5zeW5jQXR0cnNUb1Byb3BzKHQpLHAucHVzaCh0KSwhMSk6KGxlLmlzUGh4VXBkYXRlKG4sbCxbXCJhcHBlbmRcIixcInByZXBlbmRcIl0pJiZnLnB1c2gobmV3IGRlKHQsbixuLmdldEF0dHJpYnV0ZShsKSkpLGxlLnN5bmNBdHRyc1RvUHJvcHMobiksZS50cmFja0JlZm9yZShcInVwZGF0ZWRcIix0LG4pLCEwKX19KX0pLG4uaXNEZWJ1Z0VuYWJsZWQoKSYmZnVuY3Rpb24oKXtmb3IodmFyIGU9bmV3IFNldCx0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIqW2lkXVwiKSxuPTAsaT10Lmxlbmd0aDtuPGk7bisrKWUuaGFzKHRbbl0uaWQpP2NvbnNvbGUuZXJyb3IoXCJNdWx0aXBsZSBJRHMgZGV0ZWN0ZWQ6IFwiLmNvbmNhdCh0W25dLmlkLFwiLiBFbnN1cmUgdW5pcXVlIGVsZW1lbnQgaWRzLlwiKSk6ZS5hZGQodFtuXS5pZCl9KCksZy5sZW5ndGg+MCYmbi50aW1lKFwicG9zdC1tb3JwaCBhcHBlbmQvcHJlcGVuZCByZXN0b3JhdGlvblwiLGZ1bmN0aW9uKCl7Zy5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLnBlcmZvcm0oKX0pfSksbi5zaWxlbmNlRXZlbnRzKGZ1bmN0aW9uKCl7cmV0dXJuIGxlLnJlc3RvcmVGb2N1cyhhLHMsYyl9KSxsZS5kaXNwYXRjaEV2ZW50KGRvY3VtZW50LFwicGh4OnVwZGF0ZVwiKSx2LmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIGUudHJhY2tBZnRlcihcImFkZGVkXCIsdCl9KSxwLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIGUudHJhY2tBZnRlcihcInVwZGF0ZWRcIix0KX0pLG0mJihuLmRpc2Nvbm5lY3QoKSxtLnN1Ym1pdCgpKSwhMH19fSx7a2V5OlwiZm9yY2VGb2N1c2VkU2VsZWN0VXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1bXCJzZWxlY3RcIixcInNlbGVjdC1vbmVcIixcInNlbGVjdC1tdWx0aXBsZVwiXS5maW5kKGZ1bmN0aW9uKHQpe3JldHVybiB0PT09ZS50eXBlfSk7cmV0dXJuITA9PT1lLm11bHRpcGxlfHxuJiZlLmlubmVySFRNTCE9dC5pbm5lckhUTUx9fSx7a2V5OlwiaXNDSURQYXRjaFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2lkUGF0Y2h9fSx7a2V5Olwic2tpcENJRFNpYmxpbmdcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFJiZudWxsIT09ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1za2lwXCIpfX0se2tleTpcInRhcmdldENJRENvbnRhaW5lclwiLHZhbHVlOmZ1bmN0aW9uKGUpe2lmKHRoaXMuaXNDSURQYXRjaCgpKXt2YXIgdD1rKGxlLmZpbmRDb21wb25lbnROb2RlTGlzdCh0aGlzLmNvbnRhaW5lcix0aGlzLnRhcmdldENJRCkpLG49dFswXTtyZXR1cm4gMD09PXQuc2xpY2UoMSkubGVuZ3RoJiYxPT09bGUuY2hpbGROb2RlTGVuZ3RoKGUpP246biYmbi5wYXJlbnROb2RlfX19LHtrZXk6XCJidWlsZERpZmZIVE1MXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4saSl7dmFyIHI9dGhpcyxvPXRoaXMuaXNDSURQYXRjaCgpLGE9byYmaS5nZXRBdHRyaWJ1dGUoSCk9PT10aGlzLnRhcmdldENJRC50b1N0cmluZygpO2lmKCFvfHxhKXJldHVybiB0O3ZhciB1PW51bGwscz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIik7dT1sZS5jbG9uZU5vZGUoaSk7dmFyIGM9ayhsZS5maW5kQ29tcG9uZW50Tm9kZUxpc3QodSx0aGlzLnRhcmdldENJRCkpLGw9Y1swXSxkPWMuc2xpY2UoMSk7cmV0dXJuIHMuaW5uZXJIVE1MPXQsZC5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlLnJlbW92ZSgpfSksQXJyYXkuZnJvbSh1LmNoaWxkTm9kZXMpLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5pZCYmZS5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFJiZlLmdldEF0dHJpYnV0ZShIKSE9PXIudGFyZ2V0Q0lELnRvU3RyaW5nKCkmJihlLnNldEF0dHJpYnV0ZShcImRhdGEtcGh4LXNraXBcIixcIlwiKSxlLmlubmVySFRNTD1cIlwiKX0pLEFycmF5LmZyb20ocy5jb250ZW50LmNoaWxkTm9kZXMpLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHUuaW5zZXJ0QmVmb3JlKGUsbCl9KSxsLnJlbW92ZSgpLHUub3V0ZXJIVE1MfX1dKSxlfSgpLGZlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4saSxyLG8pe3ZhciBhPXRoaXM7VCh0aGlzLGUpLHRoaXMubGl2ZVNvY2tldD1uLHRoaXMuZmxhc2g9byx0aGlzLnBhcmVudD1pLHRoaXMucm9vdD1pP2kucm9vdDp0aGlzLHRoaXMuZWw9dCx0aGlzLmlkPXRoaXMuZWwuaWQsdGhpcy52aWV3PXRoaXMuZWwuZ2V0QXR0cmlidXRlKE8pLHRoaXMucmVmPTAsdGhpcy5jaGlsZEpvaW5zPTAsdGhpcy5sb2FkZXJUaW1lcj1udWxsLHRoaXMucGVuZGluZ0RpZmZzPVtdLHRoaXMucHJ1bmluZ0NJRHM9W10sdGhpcy5ocmVmPXIsdGhpcy5qb2luQ291bnQ9dGhpcy5wYXJlbnQ/dGhpcy5wYXJlbnQuam9pbkNvdW50LTE6MCx0aGlzLmpvaW5QZW5kaW5nPSEwLHRoaXMuZGVzdHJveWVkPSExLHRoaXMuam9pbkNhbGxiYWNrPWZ1bmN0aW9uKCl7fSx0aGlzLnN0b3BDYWxsYmFjaz1mdW5jdGlvbigpe30sdGhpcy5wZW5kaW5nSm9pbk9wcz10aGlzLnBhcmVudD9udWxsOltdLHRoaXMudmlld0hvb2tzPXt9LHRoaXMudXBsb2FkZXJzPXt9LHRoaXMuZm9ybVN1Ym1pdHM9W10sdGhpcy5jaGlsZHJlbj10aGlzLnBhcmVudD9udWxsOnt9LHRoaXMucm9vdC5jaGlsZHJlblt0aGlzLmlkXT17fSx0aGlzLmNoYW5uZWw9dGhpcy5saXZlU29ja2V0LmNoYW5uZWwoXCJsdjpcIi5jb25jYXQodGhpcy5pZCksZnVuY3Rpb24oKXtyZXR1cm57dXJsOmEuaHJlZixwYXJhbXM6YS5jb25uZWN0UGFyYW1zKCksc2Vzc2lvbjphLmdldFNlc3Npb24oKSxzdGF0aWM6YS5nZXRTdGF0aWMoKSxmbGFzaDphLmZsYXNofX0pLHRoaXMuc2hvd0xvYWRlcih0aGlzLmxpdmVTb2NrZXQubG9hZGVyVGltZW91dCksdGhpcy5iaW5kQ2hhbm5lbCgpfXJldHVybiBfKGUsW3trZXk6XCJpc01haW5cIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxpdmVTb2NrZXQubWFpbj09PXRoaXN9fSx7a2V5OlwiY29ubmVjdFBhcmFtc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5saXZlU29ja2V0LnBhcmFtcyh0aGlzLnZpZXcpLHQ9bGUuYWxsKGRvY3VtZW50LFwiW1wiLmNvbmNhdCh0aGlzLmJpbmRpbmcoXCJ0cmFjay1zdGF0aWNcIiksXCJdXCIpKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3JjfHxlLmhyZWZ9KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGV9KTtyZXR1cm4gdC5sZW5ndGg+MCYmKGUuX3RyYWNrX3N0YXRpYz10KSxlLl9tb3VudHM9dGhpcy5qb2luQ291bnQsZX19LHtrZXk6XCJuYW1lXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52aWV3fX0se2tleTpcImlzQ29ubmVjdGVkXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGFubmVsLmNhblB1c2goKX19LHtrZXk6XCJnZXRTZXNzaW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1zZXNzaW9uXCIpfX0se2tleTpcImdldFN0YXRpY1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5lbC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1zdGF0aWNcIik7cmV0dXJuXCJcIj09PWU/bnVsbDplfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06ZnVuY3Rpb24oKXt9O3RoaXMuZGVzdHJveUFsbENoaWxkcmVuKCksdGhpcy5kZXN0cm95ZWQ9ITAsZGVsZXRlIHRoaXMucm9vdC5jaGlsZHJlblt0aGlzLmlkXSx0aGlzLnBhcmVudCYmZGVsZXRlIHRoaXMucm9vdC5jaGlsZHJlblt0aGlzLnBhcmVudC5pZF1bdGhpcy5pZF0sY2xlYXJUaW1lb3V0KHRoaXMubG9hZGVyVGltZXIpO3ZhciBuPWZ1bmN0aW9uKCl7Zm9yKHZhciBuIGluIHQoKSxlLnZpZXdIb29rcyllLmRlc3Ryb3lIb29rKGUudmlld0hvb2tzW25dKX07bGUubWFya1BoeENoaWxkRGVzdHJveWVkKHRoaXMuZWwpLHRoaXMubG9nKFwiZGVzdHJveWVkXCIsZnVuY3Rpb24oKXtyZXR1cm5bXCJ0aGUgY2hpbGQgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBwYXJlbnRcIl19KSx0aGlzLmNoYW5uZWwubGVhdmUoKS5yZWNlaXZlKFwib2tcIixuKS5yZWNlaXZlKFwiZXJyb3JcIixuKS5yZWNlaXZlKFwidGltZW91dFwiLG4pfX0se2tleTpcInNldENvbnRhaW5lckNsYXNzZXNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlO3RoaXMuZWwuY2xhc3NMaXN0LnJlbW92ZShcInBoeC1jb25uZWN0ZWRcIixcInBoeC1kaXNjb25uZWN0ZWRcIixcInBoeC1lcnJvclwiKSwoZT10aGlzLmVsLmNsYXNzTGlzdCkuYWRkLmFwcGx5KGUsYXJndW1lbnRzKX19LHtrZXk6XCJpc0xvYWRpbmdcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsLmNsYXNzTGlzdC5jb250YWlucyhcInBoeC1kaXNjb25uZWN0ZWRcIil9fSx7a2V5Olwic2hvd0xvYWRlclwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYoY2xlYXJUaW1lb3V0KHRoaXMubG9hZGVyVGltZXIpLGUpdGhpcy5sb2FkZXJUaW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIHQuc2hvd0xvYWRlcigpfSxlKTtlbHNle2Zvcih2YXIgbiBpbiB0aGlzLnZpZXdIb29rcyl0aGlzLnZpZXdIb29rc1tuXS5fX2Rpc2Nvbm5lY3RlZCgpO3RoaXMuc2V0Q29udGFpbmVyQ2xhc3NlcyhcInBoeC1kaXNjb25uZWN0ZWRcIil9fX0se2tleTpcImhpZGVMb2FkZXJcIix2YWx1ZTpmdW5jdGlvbigpe2NsZWFyVGltZW91dCh0aGlzLmxvYWRlclRpbWVyKSx0aGlzLnNldENvbnRhaW5lckNsYXNzZXMoXCJwaHgtY29ubmVjdGVkXCIpfX0se2tleTpcInRyaWdnZXJSZWNvbm5lY3RlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlIGluIHRoaXMudmlld0hvb2tzKXRoaXMudmlld0hvb2tzW2VdLl9fcmVjb25uZWN0ZWQoKX19LHtrZXk6XCJsb2dcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3RoaXMubGl2ZVNvY2tldC5sb2codGhpcyxlLHQpfX0se2tleTpcIndpdGhpblRhcmdldHNcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7aWYoL14oMHxbMS05XVxcZCopJC8udGVzdChlKSl7dmFyIGk9bGUuZmluZENvbXBvbmVudE5vZGVMaXN0KHRoaXMuZWwsZSk7MD09PWkubGVuZ3RoP3ooXCJubyBjb21wb25lbnQgZm91bmQgbWF0Y2hpbmcgcGh4LXRhcmdldCBvZiBcIi5jb25jYXQoZSkpOnQodGhpcyxpWzBdKX1lbHNle3ZhciByPUFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlKSk7MD09PXIubGVuZ3RoJiZ6KCdub3RoaW5nIGZvdW5kIG1hdGNoaW5nIHRoZSBwaHgtdGFyZ2V0IHNlbGVjdG9yIFwiJy5jb25jYXQoZSwnXCInKSksci5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBuLmxpdmVTb2NrZXQub3duZXIoZSxmdW5jdGlvbihuKXtyZXR1cm4gdChuLGUpfSl9KX19fSx7a2V5OlwiYXBwbHlEaWZmXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3RoaXMubG9nKGUsZnVuY3Rpb24oKXtyZXR1cm5bXCJcIiwkKHQpXX0pO3ZhciBpPXVlLmV4dHJhY3QodCkscj1pLmRpZmYsbz1pLnJlcGx5LGE9aS5ldmVudHMsdT1pLnRpdGxlO3JldHVybiB1JiZsZS5wdXRUaXRsZSh1KSxuKHtkaWZmOnIscmVwbHk6byxldmVudHM6YX0pLG99fSx7a2V5Olwib25Kb2luXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPWUucmVuZGVyZWQ7dGhpcy5jaGlsZEpvaW5zPTAsdGhpcy5qb2luUGVuZGluZz0hMCx0aGlzLmZsYXNoPW51bGwsY2UuZHJvcExvY2FsKHRoaXMubmFtZSgpLFwiY29uc2VjdXRpdmUtcmVsb2Fkc1wiKSx0aGlzLmFwcGx5RGlmZihcIm1vdW50XCIsbixmdW5jdGlvbihuKXt2YXIgaT1uLmRpZmYscj1uLmV2ZW50czt0LnJlbmRlcmVkPW5ldyB1ZSh0LmlkLGkpO3ZhciBvPXQucmVuZGVyQ29udGFpbmVyKG51bGwsXCJqb2luXCIpO3QuZHJvcFBlbmRpbmdSZWZzKCk7dmFyIGE9dC5mb3Jtc0ZvclJlY292ZXJ5KG8pO3Quam9pbkNvdW50KyssYS5sZW5ndGg+MD9hLmZvckVhY2goZnVuY3Rpb24oZSxuKXt0LnB1c2hGb3JtUmVjb3ZlcnkoZSxmdW5jdGlvbihlKXtuPT09YS5sZW5ndGgtMSYmdC5vbkpvaW5Db21wbGV0ZShlLG8scil9KX0pOnQub25Kb2luQ29tcGxldGUoZSxvLHIpfSl9fSx7a2V5OlwiZHJvcFBlbmRpbmdSZWZzXCIsdmFsdWU6ZnVuY3Rpb24oKXtsZS5hbGwodGhpcy5lbCxcIltcIi5jb25jYXQoRixcIl1cIiksZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVtb3ZlQXR0cmlidXRlKEYpfSl9fSx7a2V5Olwib25Kb2luQ29tcGxldGVcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxyPWUubGl2ZV9wYXRjaDtpZih0aGlzLmpvaW5Db3VudD4xfHx0aGlzLnBhcmVudCYmIXRoaXMucGFyZW50LmlzSm9pblBlbmRpbmcoKSlyZXR1cm4gdGhpcy5hcHBseUpvaW5QYXRjaChyLHQsbik7MD09PWxlLmZpbmRQaHhDaGlsZHJlbkluRnJhZ21lbnQodCx0aGlzLmlkKS5maWx0ZXIoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5pZCYmaS5lbC5xdWVyeVNlbGVjdG9yKFwiI1wiLmNvbmNhdChlLmlkKSksbj10JiZ0LmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LXN0YXRpY1wiKTtyZXR1cm4gbiYmZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1zdGF0aWNcIixuKSxpLmpvaW5DaGlsZChlKX0pLmxlbmd0aD90aGlzLnBhcmVudD8odGhpcy5yb290LnBlbmRpbmdKb2luT3BzLnB1c2goW3RoaXMsZnVuY3Rpb24oKXtyZXR1cm4gaS5hcHBseUpvaW5QYXRjaChyLHQsbil9XSksdGhpcy5wYXJlbnQuYWNrSm9pbih0aGlzKSk6KHRoaXMub25BbGxDaGlsZEpvaW5zQ29tcGxldGUoKSx0aGlzLmFwcGx5Sm9pblBhdGNoKHIsdCxuKSk6dGhpcy5yb290LnBlbmRpbmdKb2luT3BzLnB1c2goW3RoaXMsZnVuY3Rpb24oKXtyZXR1cm4gaS5hcHBseUpvaW5QYXRjaChyLHQsbil9XSl9fSx7a2V5OlwiYXR0YWNoVHJ1ZURvY0VsXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmVsPWxlLmJ5SWQodGhpcy5pZCksdGhpcy5lbC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1yb290LWlkXCIsdGhpcy5yb290LmlkKX19LHtrZXk6XCJkaXNwYXRjaEV2ZW50c1wiLHZhbHVlOmZ1bmN0aW9uKGUpe2UuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD14KGUsMiksbj10WzBdLGk9dFsxXTt3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXCJwaHg6aG9vazpcIi5jb25jYXQobikse2RldGFpbDppfSkpfSl9fSx7a2V5OlwiYXBwbHlKb2luUGF0Y2hcIix2YWx1ZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpczt0aGlzLmF0dGFjaFRydWVEb2NFbCgpO3ZhciByPW5ldyBoZSh0aGlzLHRoaXMuZWwsdGhpcy5pZCx0LG51bGwpO2lmKHIubWFya1BydW5hYmxlQ29udGVudEZvclJlbW92YWwoKSx0aGlzLnBlcmZvcm1QYXRjaChyLCExKSx0aGlzLmpvaW5OZXdDaGlsZHJlbigpLGxlLmFsbCh0aGlzLmVsLFwiW1wiLmNvbmNhdCh0aGlzLmJpbmRpbmcoXCJob29rXCIpLFwiXSwgW2RhdGEtcGh4LVwiKS5jb25jYXQoXCJob29rXCIsXCJdXCIpLGZ1bmN0aW9uKGUpe3ZhciB0PWkuYWRkSG9vayhlKTt0JiZ0Ll9fbW91bnRlZCgpfSksdGhpcy5qb2luUGVuZGluZz0hMSx0aGlzLmRpc3BhdGNoRXZlbnRzKG4pLHRoaXMuYXBwbHlQZW5kaW5nVXBkYXRlcygpLGUpe3ZhciBvPWUua2luZCxhPWUudG87dGhpcy5saXZlU29ja2V0Lmhpc3RvcnlQYXRjaChhLG8pfXRoaXMuaGlkZUxvYWRlcigpLHRoaXMuam9pbkNvdW50PjEmJnRoaXMudHJpZ2dlclJlY29ubmVjdGVkKCksdGhpcy5zdG9wQ2FsbGJhY2soKX19LHtrZXk6XCJ0cmlnZ2VyQmVmb3JlVXBkYXRlSG9va1wiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dGhpcy5saXZlU29ja2V0LnRyaWdnZXJET00oXCJvbkJlZm9yZUVsVXBkYXRlZFwiLFtlLHRdKTt2YXIgbj10aGlzLmdldEhvb2soZSksaT1uJiZsZS5pc0lnbm9yZWQoZSx0aGlzLmJpbmRpbmcoXCJ1cGRhdGVcIikpO2lmKG4mJiFlLmlzRXF1YWxOb2RlKHQpJiYoIWl8fCFmdW5jdGlvbihlLHQpe3JldHVybiBKU09OLnN0cmluZ2lmeShlKT09PUpTT04uc3RyaW5naWZ5KHQpfShlLmRhdGFzZXQsdC5kYXRhc2V0KSkpcmV0dXJuIG4uX19iZWZvcmVVcGRhdGUoKSxufX0se2tleTpcInBlcmZvcm1QYXRjaFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxpPVtdLHI9ITEsbz1uZXcgU2V0O3JldHVybiBlLmFmdGVyKFwiYWRkZWRcIixmdW5jdGlvbihlKXtuLmxpdmVTb2NrZXQudHJpZ2dlckRPTShcIm9uTm9kZUFkZGVkXCIsW2VdKTt2YXIgdD1uLmFkZEhvb2soZSk7dCYmdC5fX21vdW50ZWQoKX0pLGUuYWZ0ZXIoXCJwaHhDaGlsZEFkZGVkXCIsZnVuY3Rpb24oZSl7cmV0dXJuIHI9ITB9KSxlLmJlZm9yZShcInVwZGF0ZWRcIixmdW5jdGlvbihlLHQpe24udHJpZ2dlckJlZm9yZVVwZGF0ZUhvb2soZSx0KSYmby5hZGQoZS5pZCl9KSxlLmFmdGVyKFwidXBkYXRlZFwiLGZ1bmN0aW9uKGUpe28uaGFzKGUuaWQpJiZuLmdldEhvb2soZSkuX191cGRhdGVkKCl9KSxlLmFmdGVyKFwiZGlzY2FyZGVkXCIsZnVuY3Rpb24oZSl7dmFyIHQ9bi5jb21wb25lbnRJRChlKTtcIm51bWJlclwiPT10eXBlb2YgdCYmLTE9PT1pLmluZGV4T2YodCkmJmkucHVzaCh0KTt2YXIgcj1uLmdldEhvb2soZSk7ciYmbi5kZXN0cm95SG9vayhyKX0pLGUucGVyZm9ybSgpLHQmJnRoaXMubWF5YmVQdXNoQ29tcG9uZW50c0Rlc3Ryb3llZChpKSxyfX0se2tleTpcImpvaW5OZXdDaGlsZHJlblwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztsZS5maW5kUGh4Q2hpbGRyZW4odGhpcy5lbCx0aGlzLmlkKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBlLmpvaW5DaGlsZCh0KX0pfX0se2tleTpcImdldENoaWxkQnlJZFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnJvb3QuY2hpbGRyZW5bdGhpcy5pZF1bZV19fSx7a2V5OlwiZ2V0RGVzY2VuZGVudEJ5RWxcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5pZD09PXRoaXMuaWQ/dGhpczp0aGlzLmNoaWxkcmVuW2UuZ2V0QXR0cmlidXRlKFwiZGF0YS1waHgtcGFyZW50LWlkXCIpXVtlLmlkXX19LHtrZXk6XCJkZXN0cm95RGVzY2VuZGVudFwiLHZhbHVlOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdCBpbiB0aGlzLnJvb3QuY2hpbGRyZW4pZm9yKHZhciBuIGluIHRoaXMucm9vdC5jaGlsZHJlblt0XSlpZihuPT09ZSlyZXR1cm4gdGhpcy5yb290LmNoaWxkcmVuW3RdW25dLmRlc3Ryb3koKX19LHtrZXk6XCJqb2luQ2hpbGRcIix2YWx1ZTpmdW5jdGlvbih0KXtpZighdGhpcy5nZXRDaGlsZEJ5SWQodC5pZCkpe3ZhciBuPW5ldyBlKHQsdGhpcy5saXZlU29ja2V0LHRoaXMpO3JldHVybiB0aGlzLnJvb3QuY2hpbGRyZW5bdGhpcy5pZF1bbi5pZF09bixuLmpvaW4oKSx0aGlzLmNoaWxkSm9pbnMrKywhMH19fSx7a2V5OlwiaXNKb2luUGVuZGluZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuam9pblBlbmRpbmd9fSx7a2V5OlwiYWNrSm9pblwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuY2hpbGRKb2lucy0tLDA9PT10aGlzLmNoaWxkSm9pbnMmJih0aGlzLnBhcmVudD90aGlzLnBhcmVudC5hY2tKb2luKHRoaXMpOnRoaXMub25BbGxDaGlsZEpvaW5zQ29tcGxldGUoKSl9fSx7a2V5Olwib25BbGxDaGlsZEpvaW5zQ29tcGxldGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuam9pbkNhbGxiYWNrKCksdGhpcy5wZW5kaW5nSm9pbk9wcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PXgoZSwyKSxuPXRbMF0saT10WzFdO24uaXNEZXN0cm95ZWQoKXx8aSgpfSksdGhpcy5wZW5kaW5nSm9pbk9wcz1bXX19LHtrZXk6XCJ1cGRhdGVcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7aWYodGhpcy5pc0pvaW5QZW5kaW5nKCl8fHRoaXMubGl2ZVNvY2tldC5oYXNQZW5kaW5nTGluaygpKXJldHVybiB0aGlzLnBlbmRpbmdEaWZmcy5wdXNoKHtkaWZmOmUsZXZlbnRzOnR9KTt0aGlzLnJlbmRlcmVkLm1lcmdlRGlmZihlKTt2YXIgaT0hMTt0aGlzLnJlbmRlcmVkLmlzQ29tcG9uZW50T25seURpZmYoZSk/dGhpcy5saXZlU29ja2V0LnRpbWUoXCJjb21wb25lbnQgcGF0Y2ggY29tcGxldGVcIixmdW5jdGlvbigpe2xlLmZpbmRQYXJlbnRDSURzKG4uZWwsbi5yZW5kZXJlZC5jb21wb25lbnRDSURzKGUpKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe24uY29tcG9uZW50UGF0Y2gobi5yZW5kZXJlZC5nZXRDb21wb25lbnQoZSx0KSx0KSYmKGk9ITApfSl9KTpRKGUpfHx0aGlzLmxpdmVTb2NrZXQudGltZShcImZ1bGwgcGF0Y2ggY29tcGxldGVcIixmdW5jdGlvbigpe3ZhciB0PW4ucmVuZGVyQ29udGFpbmVyKGUsXCJ1cGRhdGVcIikscj1uZXcgaGUobixuLmVsLG4uaWQsdCxudWxsKTtpPW4ucGVyZm9ybVBhdGNoKHIsITApfSksdGhpcy5kaXNwYXRjaEV2ZW50cyh0KSxpJiZ0aGlzLmpvaW5OZXdDaGlsZHJlbigpfX0se2tleTpcInJlbmRlckNvbnRhaW5lclwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztyZXR1cm4gdGhpcy5saXZlU29ja2V0LnRpbWUoXCJ0b1N0cmluZyBkaWZmIChcIi5jb25jYXQodCxcIilcIiksZnVuY3Rpb24oKXt2YXIgdD1uLmVsLnRhZ05hbWUsaT1lP24ucmVuZGVyZWQuY29tcG9uZW50Q0lEcyhlKS5jb25jYXQobi5wcnVuaW5nQ0lEcyk6bnVsbCxyPW4ucmVuZGVyZWQudG9TdHJpbmcoaSk7cmV0dXJuXCI8XCIuY29uY2F0KHQsXCI+XCIpLmNvbmNhdChyLFwiPC9cIikuY29uY2F0KHQsXCI+XCIpfSl9fSx7a2V5OlwiY29tcG9uZW50UGF0Y2hcIix2YWx1ZTpmdW5jdGlvbihlLHQpe2lmKFEoZSkpcmV0dXJuITE7dmFyIG49dGhpcy5yZW5kZXJlZC5jb21wb25lbnRUb1N0cmluZyh0KSxpPW5ldyBoZSh0aGlzLHRoaXMuZWwsdGhpcy5pZCxuLHQpO3JldHVybiB0aGlzLnBlcmZvcm1QYXRjaChpLCEwKX19LHtrZXk6XCJnZXRIb29rXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudmlld0hvb2tzW3BlLmVsZW1lbnRJRChlKV19fSx7a2V5OlwiYWRkSG9va1wiLHZhbHVlOmZ1bmN0aW9uKGUpe2lmKCFwZS5lbGVtZW50SUQoZSkmJmUuZ2V0QXR0cmlidXRlKXt2YXIgdD1lLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LVwiLmNvbmNhdChcImhvb2tcIikpfHxlLmdldEF0dHJpYnV0ZSh0aGlzLmJpbmRpbmcoXCJob29rXCIpKTtpZighdHx8dGhpcy5vd25zRWxlbWVudChlKSl7dmFyIG49dGhpcy5saXZlU29ja2V0LmdldEhvb2tDYWxsYmFja3ModCk7aWYobil7ZS5pZHx8eignbm8gRE9NIElEIGZvciBob29rIFwiJy5jb25jYXQodCwnXCIuIEhvb2tzIHJlcXVpcmUgYSB1bmlxdWUgSUQgb24gZWFjaCBlbGVtZW50LicpLGUpO3ZhciBpPW5ldyBwZSh0aGlzLGUsbik7cmV0dXJuIHRoaXMudmlld0hvb2tzW3BlLmVsZW1lbnRJRChpLmVsKV09aSxpfW51bGwhPT10JiZ6KCd1bmtub3duIGhvb2sgZm91bmQgZm9yIFwiJy5jb25jYXQodCwnXCInKSxlKX19fX0se2tleTpcImRlc3Ryb3lIb29rXCIsdmFsdWU6ZnVuY3Rpb24oZSl7ZS5fX2Rlc3Ryb3llZCgpLGUuX19jbGVhbnVwX18oKSxkZWxldGUgdGhpcy52aWV3SG9va3NbcGUuZWxlbWVudElEKGUuZWwpXX19LHtrZXk6XCJhcHBseVBlbmRpbmdVcGRhdGVzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMucGVuZGluZ0RpZmZzLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG49dC5kaWZmLGk9dC5ldmVudHM7cmV0dXJuIGUudXBkYXRlKG4saSl9KSx0aGlzLnBlbmRpbmdEaWZmcz1bXX19LHtrZXk6XCJvbkNoYW5uZWxcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7dGhpcy5saXZlU29ja2V0Lm9uQ2hhbm5lbCh0aGlzLmNoYW5uZWwsZSxmdW5jdGlvbihlKXtuLmlzSm9pblBlbmRpbmcoKT9uLnJvb3QucGVuZGluZ0pvaW5PcHMucHVzaChbbixmdW5jdGlvbigpe3JldHVybiB0KGUpfV0pOnQoZSl9KX19LHtrZXk6XCJiaW5kQ2hhbm5lbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLmxpdmVTb2NrZXQub25DaGFubmVsKHRoaXMuY2hhbm5lbCxcImRpZmZcIixmdW5jdGlvbih0KXtlLmFwcGx5RGlmZihcInVwZGF0ZVwiLHQsZnVuY3Rpb24odCl7dmFyIG49dC5kaWZmLGk9dC5ldmVudHM7cmV0dXJuIGUudXBkYXRlKG4saSl9KX0pLHRoaXMub25DaGFubmVsKFwicmVkaXJlY3RcIixmdW5jdGlvbih0KXt2YXIgbj10LnRvLGk9dC5mbGFzaDtyZXR1cm4gZS5vblJlZGlyZWN0KHt0bzpuLGZsYXNoOml9KX0pLHRoaXMub25DaGFubmVsKFwibGl2ZV9wYXRjaFwiLGZ1bmN0aW9uKHQpe3JldHVybiBlLm9uTGl2ZVBhdGNoKHQpfSksdGhpcy5vbkNoYW5uZWwoXCJsaXZlX3JlZGlyZWN0XCIsZnVuY3Rpb24odCl7cmV0dXJuIGUub25MaXZlUmVkaXJlY3QodCl9KSx0aGlzLmNoYW5uZWwub25FcnJvcihmdW5jdGlvbih0KXtyZXR1cm4gZS5vbkVycm9yKHQpfSksdGhpcy5jaGFubmVsLm9uQ2xvc2UoZnVuY3Rpb24odCl7cmV0dXJuIGUub25DbG9zZSh0KX0pfX0se2tleTpcImRlc3Ryb3lBbGxDaGlsZHJlblwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlIGluIHRoaXMucm9vdC5jaGlsZHJlblt0aGlzLmlkXSl0aGlzLmdldENoaWxkQnlJZChlKS5kZXN0cm95KCl9fSx7a2V5Olwib25MaXZlUmVkaXJlY3RcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLnRvLG49ZS5raW5kLGk9ZS5mbGFzaCxyPXRoaXMuZXhwYW5kVVJMKHQpO3RoaXMubGl2ZVNvY2tldC5oaXN0b3J5UmVkaXJlY3QocixuLGkpfX0se2tleTpcIm9uTGl2ZVBhdGNoXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS50byxuPWUua2luZDt0aGlzLmhyZWY9dGhpcy5leHBhbmRVUkwodCksdGhpcy5saXZlU29ja2V0Lmhpc3RvcnlQYXRjaCh0LG4pfX0se2tleTpcImV4cGFuZFVSTFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBlLnN0YXJ0c1dpdGgoXCIvXCIpP1wiXCIuY29uY2F0KHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCxcIi8vXCIpLmNvbmNhdCh3aW5kb3cubG9jYXRpb24uaG9zdCkuY29uY2F0KGUpOmV9fSx7a2V5Olwib25SZWRpcmVjdFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUudG8sbj1lLmZsYXNoO3RoaXMubGl2ZVNvY2tldC5yZWRpcmVjdCh0LG4pfX0se2tleTpcImlzRGVzdHJveWVkXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kZXN0cm95ZWR9fSx7a2V5Olwiam9pblwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dGhpcy5wYXJlbnR8fCh0aGlzLnN0b3BDYWxsYmFjaz10aGlzLmxpdmVTb2NrZXQud2l0aFBhZ2VMb2FkaW5nKHt0bzp0aGlzLmhyZWYsa2luZDpcImluaXRpYWxcIn0pKSx0aGlzLmpvaW5DYWxsYmFjaz1mdW5jdGlvbigpe3JldHVybiBlJiZlKHQsdC5qb2luQ291bnQpfSx0aGlzLmxpdmVTb2NrZXQud3JhcFB1c2godGhpcyx7dGltZW91dDohMX0sZnVuY3Rpb24oKXtyZXR1cm4gdC5jaGFubmVsLmpvaW4oKS5yZWNlaXZlKFwib2tcIixmdW5jdGlvbihlKXtyZXR1cm4gdC5vbkpvaW4oZSl9KS5yZWNlaXZlKFwiZXJyb3JcIixmdW5jdGlvbihlKXtyZXR1cm4gdC5vbkpvaW5FcnJvcihlKX0pLnJlY2VpdmUoXCJ0aW1lb3V0XCIsZnVuY3Rpb24oKXtyZXR1cm4gdC5vbkpvaW5FcnJvcih7cmVhc29uOlwidGltZW91dFwifSl9KX0pfX0se2tleTpcIm9uSm9pbkVycm9yXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuKGUucmVkaXJlY3R8fGUubGl2ZV9yZWRpcmVjdCkmJih0aGlzLmpvaW5QZW5kaW5nPSExLHRoaXMuY2hhbm5lbC5sZWF2ZSgpKSxlLnJlZGlyZWN0P3RoaXMub25SZWRpcmVjdChlLnJlZGlyZWN0KTplLmxpdmVfcmVkaXJlY3Q/dGhpcy5vbkxpdmVSZWRpcmVjdChlLmxpdmVfcmVkaXJlY3QpOih0aGlzLmxvZyhcImVycm9yXCIsZnVuY3Rpb24oKXtyZXR1cm5bXCJ1bmFibGUgdG8gam9pblwiLGVdfSksdGhpcy5saXZlU29ja2V0LnJlbG9hZFdpdGhKaXR0ZXIodGhpcykpfX0se2tleTpcIm9uQ2xvc2VcIix2YWx1ZTpmdW5jdGlvbihlKXtpZighdGhpcy5pc0Rlc3Ryb3llZCgpKXtpZih0aGlzLmlzSm9pblBlbmRpbmcoKXx8dGhpcy5saXZlU29ja2V0Lmhhc1BlbmRpbmdMaW5rKCkmJlwibGVhdmVcIiE9PWUpcmV0dXJuIHRoaXMubGl2ZVNvY2tldC5yZWxvYWRXaXRoSml0dGVyKHRoaXMpO3RoaXMuZGVzdHJveUFsbENoaWxkcmVuKCksdGhpcy5saXZlU29ja2V0LmRyb3BBY3RpdmVFbGVtZW50KHRoaXMpLGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQmJmRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuYmx1cigpLHRoaXMubGl2ZVNvY2tldC5pc1VubG9hZGVkKCkmJnRoaXMuc2hvd0xvYWRlcigyMDApfX19LHtrZXk6XCJvbkVycm9yXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5vbkNsb3NlKGUpLHRoaXMubG9nKFwiZXJyb3JcIixmdW5jdGlvbigpe3JldHVybltcInZpZXcgY3Jhc2hlZFwiLGVdfSksdGhpcy5saXZlU29ja2V0LmlzVW5sb2FkZWQoKXx8dGhpcy5kaXNwbGF5RXJyb3IoKX19LHtrZXk6XCJkaXNwbGF5RXJyb3JcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaXNNYWluKCkmJmxlLmRpc3BhdGNoRXZlbnQod2luZG93LFwicGh4OnBhZ2UtbG9hZGluZy1zdGFydFwiLHt0bzp0aGlzLmhyZWYsa2luZDpcImVycm9yXCJ9KSx0aGlzLnNob3dMb2FkZXIoKSx0aGlzLnNldENvbnRhaW5lckNsYXNzZXMoXCJwaHgtZGlzY29ubmVjdGVkXCIsXCJwaHgtZXJyb3JcIil9fSx7a2V5OlwicHVzaFdpdGhSZXBseVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzLHI9YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOmZ1bmN0aW9uKCl7fSxvPXgoZT9lKCk6W251bGwsW11dLDIpLGE9b1swXSx1PXgob1sxXSwxKVswXSxzPWZ1bmN0aW9uKCl7fTtyZXR1cm4gdSYmbnVsbCE9PXUuZ2V0QXR0cmlidXRlKHRoaXMuYmluZGluZyhcInBhZ2UtbG9hZGluZ1wiKSkmJihzPXRoaXMubGl2ZVNvY2tldC53aXRoUGFnZUxvYWRpbmcoe2tpbmQ6XCJlbGVtZW50XCIsdGFyZ2V0OnV9KSksXCJudW1iZXJcIiE9dHlwZW9mIG4uY2lkJiZkZWxldGUgbi5jaWQsdGhpcy5saXZlU29ja2V0LndyYXBQdXNoKHRoaXMse3RpbWVvdXQ6ITB9LGZ1bmN0aW9uKCl7cmV0dXJuIGkuY2hhbm5lbC5wdXNoKHQsbiwzZTQpLnJlY2VpdmUoXCJva1wiLGZ1bmN0aW9uKGUpe3ZhciB0PW51bGw7bnVsbCE9PWEmJmkudW5kb1JlZnMoYSksZS5kaWZmJiYodD1pLmFwcGx5RGlmZihcInVwZGF0ZVwiLGUuZGlmZixmdW5jdGlvbihlKXt2YXIgdD1lLmRpZmYsbj1lLmV2ZW50cztpLnVwZGF0ZSh0LG4pfSkpLGUucmVkaXJlY3QmJmkub25SZWRpcmVjdChlLnJlZGlyZWN0KSxlLmxpdmVfcGF0Y2gmJmkub25MaXZlUGF0Y2goZS5saXZlX3BhdGNoKSxlLmxpdmVfcmVkaXJlY3QmJmkub25MaXZlUmVkaXJlY3QoZS5saXZlX3JlZGlyZWN0KSxzKCkscihlLHQpfSl9KX19LHtrZXk6XCJ1bmRvUmVmc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7bGUuYWxsKHRoaXMuZWwsXCJbXCIuY29uY2F0KEYsJz1cIicpLmNvbmNhdChlLCdcIl0nKSxmdW5jdGlvbihlKXtlLnJlbW92ZUF0dHJpYnV0ZShGKSxudWxsIT09ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1yZWFkb25seVwiKSYmKGUucmVhZE9ubHk9ITEsZS5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLXBoeC1yZWFkb25seVwiKSksbnVsbCE9PWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1waHgtZGlzYWJsZWRcIikmJihlLmRpc2FibGVkPSExLGUucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1waHgtZGlzYWJsZWRcIikpLGouZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gbGUucmVtb3ZlQ2xhc3MoZSx0KX0pO3ZhciBuPWUuZ2V0QXR0cmlidXRlKFwiZGF0YS1waHgtZGlzYWJsZS13aXRoLXJlc3RvcmVcIik7bnVsbCE9PW4mJihlLmlubmVyVGV4dD1uLGUucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1waHgtZGlzYWJsZS13aXRoLXJlc3RvcmVcIikpO3ZhciBpPWxlLnByaXZhdGUoZSxGKTtpZihpKXt2YXIgcj10LnRyaWdnZXJCZWZvcmVVcGRhdGVIb29rKGUsaSk7aGUucGF0Y2hFbChlLGksdC5saXZlU29ja2V0LmdldEFjdGl2ZUVsZW1lbnQoKSksciYmci5fX3VwZGF0ZWQoKSxsZS5kZWxldGVQcml2YXRlKGUsRil9fSl9fSx7a2V5OlwicHV0UmVmXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLnJlZisrLGk9dGhpcy5iaW5kaW5nKFwiZGlzYWJsZS13aXRoXCIpO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5jbGFzc0xpc3QuYWRkKFwicGh4LVwiLmNvbmNhdCh0LFwiLWxvYWRpbmdcIikpLGUuc2V0QXR0cmlidXRlKEYsbik7dmFyIHI9ZS5nZXRBdHRyaWJ1dGUoaSk7bnVsbCE9PXImJihlLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LWRpc2FibGUtd2l0aC1yZXN0b3JlXCIpfHxlLnNldEF0dHJpYnV0ZShcImRhdGEtcGh4LWRpc2FibGUtd2l0aC1yZXN0b3JlXCIsZS5pbm5lclRleHQpLGUuaW5uZXJUZXh0PXIpfSksW24sZV19fSx7a2V5OlwiY29tcG9uZW50SURcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLmdldEF0dHJpYnV0ZSYmZS5nZXRBdHRyaWJ1dGUoSCk7cmV0dXJuIHQ/cGFyc2VJbnQodCk6bnVsbH19LHtrZXk6XCJ0YXJnZXRDb21wb25lbnRJRFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuZ2V0QXR0cmlidXRlKHRoaXMuYmluZGluZyhcInRhcmdldFwiKSk/dGhpcy5jbG9zZXN0Q29tcG9uZW50SUQodCk6bnVsbH19LHtrZXk6XCJjbG9zZXN0Q29tcG9uZW50SURcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBlP1ooZS5jbG9zZXN0KFwiW1wiLmNvbmNhdChILFwiXVwiKSksZnVuY3Rpb24oZSl7cmV0dXJuIHQub3duc0VsZW1lbnQoZSkmJnQuY29tcG9uZW50SUQoZSl9KTpudWxsfX0se2tleTpcInB1c2hIb29rRXZlbnRcIix2YWx1ZTpmdW5jdGlvbihlLHQsbixpKXtpZighdGhpcy5pc0Nvbm5lY3RlZCgpKXJldHVybiB0aGlzLmxvZyhcImhvb2tcIixmdW5jdGlvbigpe3JldHVybltcInVuYWJsZSB0byBwdXNoIGhvb2sgZXZlbnQuIExpdmVWaWV3IG5vdCBjb25uZWN0ZWRcIix0LG5dfSksITE7dmFyIHI9eCh0aGlzLnB1dFJlZihbXSxcImhvb2tcIiksMiksbz1yWzBdLGE9clsxXTtyZXR1cm4gdGhpcy5wdXNoV2l0aFJlcGx5KGZ1bmN0aW9uKCl7cmV0dXJuW28sYV19LFwiZXZlbnRcIix7dHlwZTpcImhvb2tcIixldmVudDp0LHZhbHVlOm4sY2lkOnRoaXMuY2xvc2VzdENvbXBvbmVudElEKGUpfSxmdW5jdGlvbihlLHQpe3JldHVybiBpKHQsbyl9KSxvfX0se2tleTpcImV4dHJhY3RNZXRhXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dGhpcy5iaW5kaW5nKFwidmFsdWUtXCIpLGk9MDtpPGUuYXR0cmlidXRlcy5sZW5ndGg7aSsrKXt2YXIgcj1lLmF0dHJpYnV0ZXNbaV0ubmFtZTtyLnN0YXJ0c1dpdGgobikmJih0W3IucmVwbGFjZShuLFwiXCIpXT1lLmdldEF0dHJpYnV0ZShyKSl9cmV0dXJuIHZvaWQgMCE9PWUudmFsdWUmJih0LnZhbHVlPWUudmFsdWUsXCJJTlBVVFwiPT09ZS50YWdOYW1lJiZKLmluZGV4T2YoZS50eXBlKT49MCYmIWUuY2hlY2tlZCYmZGVsZXRlIHQudmFsdWUpLHR9fSx7a2V5OlwicHVzaEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4saSxyKXt2YXIgbz10aGlzO3RoaXMucHVzaFdpdGhSZXBseShmdW5jdGlvbigpe3JldHVybiBvLnB1dFJlZihbdF0sZSl9LFwiZXZlbnRcIix7dHlwZTplLGV2ZW50OmksdmFsdWU6dGhpcy5leHRyYWN0TWV0YSh0LHIpLGNpZDp0aGlzLnRhcmdldENvbXBvbmVudElEKHQsbil9KX19LHtrZXk6XCJwdXNoS2V5XCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4saSxyKXt2YXIgbz10aGlzO3RoaXMucHVzaFdpdGhSZXBseShmdW5jdGlvbigpe3JldHVybiBvLnB1dFJlZihbZV0sbil9LFwiZXZlbnRcIix7dHlwZTpuLGV2ZW50OmksdmFsdWU6dGhpcy5leHRyYWN0TWV0YShlLHIpLGNpZDp0aGlzLnRhcmdldENvbXBvbmVudElEKGUsdCl9KX19LHtrZXk6XCJwdXNoRmlsZVByb2dyZXNzXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpmdW5jdGlvbigpe307dGhpcy5saXZlU29ja2V0LndpdGhpbk93bmVycyhlLmZvcm0sZnVuY3Rpb24ocixvKXtyLnB1c2hXaXRoUmVwbHkobnVsbCxcInByb2dyZXNzXCIse2V2ZW50OmUuZ2V0QXR0cmlidXRlKHIuYmluZGluZyhcInByb2dyZXNzXCIpKSxyZWY6ZS5nZXRBdHRyaWJ1dGUoTSksZW50cnlfcmVmOnQscHJvZ3Jlc3M6bixjaWQ6ci50YXJnZXRDb21wb25lbnRJRChlLmZvcm0sbyl9LGkpfSl9fSx7a2V5OlwicHVzaElucHV0XCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4saSxyKXt2YXIgbz10aGlzLGE9dGhpcy50YXJnZXRDb21wb25lbnRJRChlLmZvcm0sdCksdT1mdW5jdGlvbigpe3JldHVybiBvLnB1dFJlZihbZSxlLmZvcm1dLFwiY2hhbmdlXCIpfSxzPWFlKGUuZm9ybSx7X3RhcmdldDppLm5hbWV9KTtlLmZpbGVzJiZlLmZpbGVzLmxlbmd0aD4wJiZpZS50cmFja0ZpbGVzKGUsQXJyYXkuZnJvbShlLmZpbGVzKSk7dmFyIGM9e3R5cGU6XCJmb3JtXCIsZXZlbnQ6bix2YWx1ZTpzLHVwbG9hZHM6aWUuc2VyaWFsaXplVXBsb2FkcyhlKSxjaWQ6YX07dGhpcy5wdXNoV2l0aFJlcGx5KHUsXCJldmVudFwiLGMsZnVuY3Rpb24obil7aWYobGUuc2hvd0Vycm9yKGUsby5saXZlU29ja2V0LmJpbmRpbmcoXCJmZWVkYmFjay1mb3JcIikpLGxlLmlzVXBsb2FkSW5wdXQoZSkmJm51bGwhPT1lLmdldEF0dHJpYnV0ZShcImRhdGEtcGh4LWF1dG8tdXBsb2FkXCIpKXtpZihpZS5maWxlc0F3YWl0aW5nUHJlZmxpZ2h0KGUpLmxlbmd0aD4wKXt2YXIgaT14KHUoKSwyKSxzPWlbMF07aVsxXTtvLnVwbG9hZEZpbGVzKGUuZm9ybSx0LHMsYSxmdW5jdGlvbih0KXtyJiZyKG4pLG8udHJpZ2dlckF3YWl0aW5nU3VibWl0KGUuZm9ybSl9KX19ZWxzZSByJiZyKG4pfSl9fSx7a2V5OlwidHJpZ2dlckF3YWl0aW5nU3VibWl0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5nZXRTY2hlZHVsZWRTdWJtaXQoZSk7aWYodCl7dmFyIG49eCh0LDMpLGk9KG5bMF0sblsxXSxuWzJdKTt0aGlzLmNhbmNlbFN1Ym1pdChlKSxpKCl9fX0se2tleTpcImdldFNjaGVkdWxlZFN1Ym1pdFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmZvcm1TdWJtaXRzLmZpbmQoZnVuY3Rpb24odCl7dmFyIG49eCh0LDIpLGk9blswXTtuWzFdO3JldHVybiBpLmlzU2FtZU5vZGUoZSl9KX19LHtrZXk6XCJzY2hlZHVsZVN1Ym1pdFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxuKXtpZih0aGlzLmdldFNjaGVkdWxlZFN1Ym1pdChlKSlyZXR1cm4hMDt0aGlzLmZvcm1TdWJtaXRzLnB1c2goW2UsdCxuXSl9fSx7a2V5OlwiY2FuY2VsU3VibWl0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLmZvcm1TdWJtaXRzPXRoaXMuZm9ybVN1Ym1pdHMuZmlsdGVyKGZ1bmN0aW9uKG4pe3ZhciBpPXgobiwzKSxyPWlbMF0sbz1pWzFdO2lbMl07cmV0dXJuIXIuaXNTYW1lTm9kZShlKXx8KHQudW5kb1JlZnMobyksITEpfSl9fSx7a2V5OlwicHVzaEZvcm1TdWJtaXRcIix2YWx1ZTpmdW5jdGlvbihlLHQsbixpKXt2YXIgcj10aGlzLG89ZnVuY3Rpb24oZSl7cmV0dXJuIShHKGUsXCJcIi5jb25jYXQoci5iaW5kaW5nKFwidXBkYXRlXCIpLFwiPWlnbm9yZVwiKSxlLmZvcm0pfHxHKGUsXCJkYXRhLXBoeC11cGRhdGU9aWdub3JlXCIsZS5mb3JtKSl9LGE9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuaGFzQXR0cmlidXRlKHIuYmluZGluZyhcImRpc2FibGUtd2l0aFwiKSl9LHU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJCVVRUT05cIj09ZS50YWdOYW1lfSxzPWZ1bmN0aW9uKGUpe3JldHVybltcIklOUFVUXCIsXCJURVhUQVJFQVwiLFwiU0VMRUNUXCJdLmluY2x1ZGVzKGUudGFnTmFtZSl9LGM9ZnVuY3Rpb24oKXt2YXIgdD1BcnJheS5mcm9tKGUuZWxlbWVudHMpLG49dC5maWx0ZXIoYSksaT10LmZpbHRlcih1KS5maWx0ZXIobyksYz10LmZpbHRlcihzKS5maWx0ZXIobyk7cmV0dXJuIGkuZm9yRWFjaChmdW5jdGlvbihlKXtlLnNldEF0dHJpYnV0ZShcImRhdGEtcGh4LWRpc2FibGVkXCIsZS5kaXNhYmxlZCksZS5kaXNhYmxlZD0hMH0pLGMuZm9yRWFjaChmdW5jdGlvbihlKXtlLnNldEF0dHJpYnV0ZShcImRhdGEtcGh4LXJlYWRvbmx5XCIsZS5yZWFkT25seSksZS5yZWFkT25seT0hMCxlLmZpbGVzJiYoZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1kaXNhYmxlZFwiLGUuZGlzYWJsZWQpLGUuZGlzYWJsZWQ9ITApfSksZS5zZXRBdHRyaWJ1dGUoci5iaW5kaW5nKFwicGFnZS1sb2FkaW5nXCIpLFwiXCIpLHIucHV0UmVmKFtlXS5jb25jYXQobikuY29uY2F0KGkpLmNvbmNhdChjKSxcInN1Ym1pdFwiKX0sbD10aGlzLnRhcmdldENvbXBvbmVudElEKGUsdCk7aWYoaWUuaGFzVXBsb2Fkc0luUHJvZ3Jlc3MoZSkpe3ZhciBkPXgoYygpLDIpLGg9ZFswXTtkWzFdO3JldHVybiB0aGlzLnNjaGVkdWxlU3VibWl0KGUsaCxmdW5jdGlvbigpe3JldHVybiByLnB1c2hGb3JtU3VibWl0KGUsdCxuLGkpfSl9aWYoaWUuaW5wdXRzQXdhaXRpbmdQcmVmbGlnaHQoZSkubGVuZ3RoPjApe3ZhciBmPXgoYygpLDIpLHY9ZlswXSxwPWZbMV0sZz1mdW5jdGlvbigpe3JldHVyblt2LHBdfTt0aGlzLnVwbG9hZEZpbGVzKGUsdCx2LGwsZnVuY3Rpb24odCl7dmFyIG89YWUoZSx7fSk7ci5wdXNoV2l0aFJlcGx5KGcsXCJldmVudFwiLHt0eXBlOlwiZm9ybVwiLGV2ZW50Om4sdmFsdWU6byxjaWQ6bH0saSl9KX1lbHNle3ZhciBtPWFlKGUpO3RoaXMucHVzaFdpdGhSZXBseShjLFwiZXZlbnRcIix7dHlwZTpcImZvcm1cIixldmVudDpuLHZhbHVlOm0sY2lkOmx9LGkpfX19LHtrZXk6XCJ1cGxvYWRGaWxlc1wiLHZhbHVlOmZ1bmN0aW9uKGUsdCxuLGkscil7dmFyIG89dGhpcyxhPXRoaXMuam9pbkNvdW50O2llLmFjdGl2ZUZpbGVJbnB1dHMoZSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgaT1uZXcgaWUoZSxvLHIpO28udXBsb2FkZXJzW2VdPWk7dmFyIHU9aS5lbnRyaWVzKCkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnRvUHJlZmxpZ2h0UGF5bG9hZCgpfSkscz17cmVmOmUuZ2V0QXR0cmlidXRlKE0pLGVudHJpZXM6dSxjaWQ6by50YXJnZXRDb21wb25lbnRJRChlLmZvcm0sdCl9O28ubG9nKFwidXBsb2FkXCIsZnVuY3Rpb24oKXtyZXR1cm5bXCJzZW5kaW5nIHByZWZsaWdodCByZXF1ZXN0XCIsc119KSxvLnB1c2hXaXRoUmVwbHkobnVsbCxcImFsbG93X3VwbG9hZFwiLHMsZnVuY3Rpb24oZSl7aWYoby5sb2coXCJ1cGxvYWRcIixmdW5jdGlvbigpe3JldHVybltcImdvdCBwcmVmbGlnaHQgcmVzcG9uc2VcIixlXX0pLGUuZXJyb3Ipe28udW5kb1JlZnMobik7dmFyIHQ9eChlLmVycm9yLDIpLHI9dFswXSx1PXRbMV07by5sb2coXCJ1cGxvYWRcIixmdW5jdGlvbigpe3JldHVybltcImVycm9yIGZvciBlbnRyeSBcIi5jb25jYXQociksdV19KX1lbHNle2kuaW5pdEFkYXB0ZXJVcGxvYWQoZSxmdW5jdGlvbihlKXtvLmNoYW5uZWwub25FcnJvcihmdW5jdGlvbigpe28uam9pbkNvdW50PT09YSYmZSgpfSl9LG8ubGl2ZVNvY2tldCl9fSl9KX19LHtrZXk6XCJwdXNoRm9ybVJlY292ZXJ5XCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO3RoaXMubGl2ZVNvY2tldC53aXRoaW5Pd25lcnMoZSxmdW5jdGlvbihpLHIpe3ZhciBvPWUuZWxlbWVudHNbMF0sYT1lLmdldEF0dHJpYnV0ZShuLmJpbmRpbmcoXCJhdXRvLXJlY292ZXJcIikpfHxlLmdldEF0dHJpYnV0ZShuLmJpbmRpbmcoXCJjaGFuZ2VcIikpO2kucHVzaElucHV0KG8scixhLG8sdCl9KX19LHtrZXk6XCJwdXNoTGlua1BhdGNoXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXMscj10aGlzLmxpdmVTb2NrZXQuc2V0UGVuZGluZ0xpbmsoZSksbz10P2Z1bmN0aW9uKCl7cmV0dXJuIGkucHV0UmVmKFt0XSxcImNsaWNrXCIpfTpudWxsO3RoaXMucHVzaFdpdGhSZXBseShvLFwibGlua1wiLHt1cmw6ZX0sZnVuY3Rpb24odCl7dC5saW5rX3JlZGlyZWN0P2kubGl2ZVNvY2tldC5yZXBsYWNlTWFpbihlLG51bGwsbixyKTppLmxpdmVTb2NrZXQuY29tbWl0UGVuZGluZ0xpbmsocikmJihpLmhyZWY9ZSxpLmFwcGx5UGVuZGluZ1VwZGF0ZXMoKSxuJiZuKCkpfSkucmVjZWl2ZShcInRpbWVvdXRcIixmdW5jdGlvbigpe3JldHVybiBpLmxpdmVTb2NrZXQucmVkaXJlY3Qod2luZG93LmxvY2F0aW9uLmhyZWYpfSl9fSx7a2V5OlwiZm9ybXNGb3JSZWNvdmVyeVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYoMD09PXRoaXMuam9pbkNvdW50KXJldHVybltdO3ZhciBuPXRoaXMuYmluZGluZyhcImNoYW5nZVwiKSxpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZW1wbGF0ZVwiKTtyZXR1cm4gaS5pbm5lckhUTUw9ZSxsZS5hbGwodGhpcy5lbCxcImZvcm1bXCIuY29uY2F0KG4sXCJdXCIpKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIHQub3duc0VsZW1lbnQoZSl9KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuZWxlbWVudHMubGVuZ3RoPjB9KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuXCJpZ25vcmVcIiE9PWUuZ2V0QXR0cmlidXRlKHQuYmluZGluZyhcImF1dG8tcmVjb3ZlclwiKSl9KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGkuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybVtcIi5jb25jYXQobiwnPVwiJykuY29uY2F0KGUuZ2V0QXR0cmlidXRlKG4pLCdcIl0nKSl9KX19LHtrZXk6XCJtYXliZVB1c2hDb21wb25lbnRzRGVzdHJveWVkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQsbj10aGlzLGk9ZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIDA9PT1sZS5maW5kQ29tcG9uZW50Tm9kZUxpc3Qobi5lbCxlKS5sZW5ndGh9KTtpLmxlbmd0aD4wJiYoKHQ9dGhpcy5wcnVuaW5nQ0lEcykucHVzaC5hcHBseSh0LEEoaSkpLHRoaXMucHVzaFdpdGhSZXBseShudWxsLFwiY2lkc193aWxsX2Rlc3Ryb3lcIix7Y2lkczppfSxmdW5jdGlvbigpe24ucHJ1bmluZ0NJRHM9bi5wcnVuaW5nQ0lEcy5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuLTEhPT1pLmluZGV4T2YoZSl9KTt2YXIgZT1pLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gMD09PWxlLmZpbmRDb21wb25lbnROb2RlTGlzdChuLmVsLGUpLmxlbmd0aH0pO2UubGVuZ3RoPjAmJm4ucHVzaFdpdGhSZXBseShudWxsLFwiY2lkc19kZXN0cm95ZWRcIix7Y2lkczplfSxmdW5jdGlvbihlKXtuLnJlbmRlcmVkLnBydW5lQ0lEcyhlLmNpZHMpfSl9KSl9fSx7a2V5Olwib3duc0VsZW1lbnRcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXBoeC1wYXJlbnQtaWRcIik9PT10aGlzLmlkfHxaKGUuY2xvc2VzdChVKSxmdW5jdGlvbihlKXtyZXR1cm4gZS5pZH0pPT09dGhpcy5pZH19LHtrZXk6XCJzdWJtaXRGb3JtXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7bGUucHV0UHJpdmF0ZShlLFwicGh4LWhhcy1zdWJtaXR0ZWRcIiwhMCksdGhpcy5saXZlU29ja2V0LmJsdXJBY3RpdmVFbGVtZW50KHRoaXMpLHRoaXMucHVzaEZvcm1TdWJtaXQoZSx0LG4sZnVuY3Rpb24oKXtpLmxpdmVTb2NrZXQucmVzdG9yZVByZXZpb3VzbHlBY3RpdmVGb2N1cygpfSl9fSx7a2V5OlwiYmluZGluZ1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmxpdmVTb2NrZXQuYmluZGluZyhlKX19XSksZX0oKSx2ZT0xLHBlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4saSl7Zm9yKHZhciByIGluIFQodGhpcyxlKSx0aGlzLl9fdmlldz10LHRoaXMuX19saXZlU29ja2V0PXQubGl2ZVNvY2tldCx0aGlzLl9fY2FsbGJhY2tzPWksdGhpcy5fX2xpc3RlbmVycz1uZXcgU2V0LHRoaXMuX19pc0Rpc2Nvbm5lY3RlZD0hMSx0aGlzLmVsPW4sdGhpcy52aWV3TmFtZT10Lm5hbWUoKSx0aGlzLmVsLnBoeEhvb2tJZD10aGlzLmNvbnN0cnVjdG9yLm1ha2VJRCgpLHRoaXMuX19jYWxsYmFja3MpdGhpc1tyXT10aGlzLl9fY2FsbGJhY2tzW3JdfXJldHVybiBfKGUsbnVsbCxbe2tleTpcIm1ha2VJRFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHZlKyt9fSx7a2V5OlwiZWxlbWVudElEXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUucGh4SG9va0lkfX1dKSxfKGUsW3trZXk6XCJfX21vdW50ZWRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMubW91bnRlZCYmdGhpcy5tb3VudGVkKCl9fSx7a2V5OlwiX191cGRhdGVkXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnVwZGF0ZWQmJnRoaXMudXBkYXRlZCgpfX0se2tleTpcIl9fYmVmb3JlVXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmJlZm9yZVVwZGF0ZSYmdGhpcy5iZWZvcmVVcGRhdGUoKX19LHtrZXk6XCJfX2Rlc3Ryb3llZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5kZXN0cm95ZWQmJnRoaXMuZGVzdHJveWVkKCl9fSx7a2V5OlwiX19yZWNvbm5lY3RlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fX2lzRGlzY29ubmVjdGVkJiYodGhpcy5fX2lzRGlzY29ubmVjdGVkPSExLHRoaXMucmVjb25uZWN0ZWQmJnRoaXMucmVjb25uZWN0ZWQoKSl9fSx7a2V5OlwiX19kaXNjb25uZWN0ZWRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX19pc0Rpc2Nvbm5lY3RlZD0hMCx0aGlzLmRpc2Nvbm5lY3RlZCYmdGhpcy5kaXNjb25uZWN0ZWQoKX19LHtrZXk6XCJwdXNoRXZlbnRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30sbj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06ZnVuY3Rpb24oKXt9O3JldHVybiB0aGlzLl9fdmlldy5wdXNoSG9va0V2ZW50KG51bGwsZSx0LG4pfX0se2tleTpcInB1c2hFdmVudFRvXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06e30saT1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106ZnVuY3Rpb24oKXt9O3JldHVybiB0aGlzLl9fdmlldy53aXRoaW5UYXJnZXRzKGUsZnVuY3Rpb24oZSxyKXtyZXR1cm4gZS5wdXNoSG9va0V2ZW50KHIsdCxuLGkpfSl9fSx7a2V5OlwiaGFuZGxlRXZlbnRcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPWZ1bmN0aW9uKG4saSl7cmV0dXJuIGk/ZTp0KG4uZGV0YWlsKX07cmV0dXJuIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicGh4Omhvb2s6XCIuY29uY2F0KGUpLG4pLHRoaXMuX19saXN0ZW5lcnMuYWRkKG4pLG59fSx7a2V5OlwicmVtb3ZlSGFuZGxlRXZlbnRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lKG51bGwsITApO3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicGh4Omhvb2s6XCIuY29uY2F0KHQpLGUpLHRoaXMuX19saXN0ZW5lcnMuZGVsZXRlKGUpfX0se2tleTpcIl9fY2xlYW51cF9fXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX19saXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gZS5yZW1vdmVIYW5kbGVFdmVudCh0KX0pfX1dKSxlfSgpO3QuZGVmYXVsdD1zZX0sZnVuY3Rpb24oZSx0KXt2YXIgbjtuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KCk7dHJ5e249bnx8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpfHwoMCxldmFsKShcInRoaXNcIil9Y2F0Y2goZSl7XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmKG49d2luZG93KX1lLmV4cG9ydHM9bn0sZnVuY3Rpb24oZSx0LG4peyhmdW5jdGlvbih0KXt0LlBob2VuaXh8fCh0LlBob2VuaXg9e30pLGUuZXhwb3J0cz10LlBob2VuaXguTGl2ZVZpZXc9bigwKX0pLmNhbGwodGhpcyxuKDEpKX1dKX0pOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n')},function(n,e,t){n.exports=t(4)},function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _css_app_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\\n/* harmony import */ var _css_app_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_app_scss__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var alpinejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);\\n/* harmony import */ var alpinejs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(alpinejs__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var phoenix_html__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);\\n/* harmony import */ var phoenix_html__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(phoenix_html__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var phoenix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1);\\n/* harmony import */ var phoenix__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(phoenix__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var nprogress__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(0);\\n/* harmony import */ var nprogress__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(nprogress__WEBPACK_IMPORTED_MODULE_4__);\\n/* harmony import */ var phoenix_live_view__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);\\n/* harmony import */ var phoenix_live_view__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(phoenix_live_view__WEBPACK_IMPORTED_MODULE_5__);\\n// We need to import the CSS so that webpack will load it.\\n// The MiniCssExtractPlugin is used to separate it out into\\n// its own CSS file.\\n\\n // webpack automatically bundles all modules in your\\n// entry points. Those entry points can be configured\\n// in \"webpack.config.js\".\\n//\\n// Import deps with the dep name or local files with a relative path, for example:\\n//\\n//     import {Socket} from \"phoenix\"\\n//     import socket from \"./socket\"\\n//\\n\\n\\n\\n\\n\\nvar csrfToken = document.querySelector(\"meta[name=\\'csrf-token\\']\").getAttribute(\"content\");\\nvar liveSocket = new phoenix_live_view__WEBPACK_IMPORTED_MODULE_5__[\"LiveSocket\"](\"/live\", phoenix__WEBPACK_IMPORTED_MODULE_3__[\"Socket\"], {\\n  params: {\\n    _csrf_token: csrfToken\\n  }\\n}); // Show progress bar on live navigation and form submits\\n\\nwindow.addEventListener(\"phx:page-loading-start\", function (info) {\\n  return nprogress__WEBPACK_IMPORTED_MODULE_4___default.a.start();\\n});\\nwindow.addEventListener(\"phx:page-loading-stop\", function (info) {\\n  return nprogress__WEBPACK_IMPORTED_MODULE_4___default.a.done();\\n}); // connect if there are any LiveViews on the page\\n\\nliveSocket.connect(); // expose liveSocket on window for web console debug logs and latency simulation:\\n// >> liveSocket.enableDebug()\\n// >> liveSocket.enableLatencySim(1000)  // enabled for duration of browser session\\n// >> liveSocket.disableLatencySim()\\n\\nwindow.liveSocket = liveSocket;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2pzL2FwcC5qcz83NDczIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFdlIG5lZWQgdG8gaW1wb3J0IHRoZSBDU1Mgc28gdGhhdCB3ZWJwYWNrIHdpbGwgbG9hZCBpdC5cbi8vIFRoZSBNaW5pQ3NzRXh0cmFjdFBsdWdpbiBpcyB1c2VkIHRvIHNlcGFyYXRlIGl0IG91dCBpbnRvXG4vLyBpdHMgb3duIENTUyBmaWxlLlxuaW1wb3J0IFwiLi4vY3NzL2FwcC5zY3NzXCJcbmltcG9ydCBcImFscGluZWpzXCJcblxuLy8gd2VicGFjayBhdXRvbWF0aWNhbGx5IGJ1bmRsZXMgYWxsIG1vZHVsZXMgaW4geW91clxuLy8gZW50cnkgcG9pbnRzLiBUaG9zZSBlbnRyeSBwb2ludHMgY2FuIGJlIGNvbmZpZ3VyZWRcbi8vIGluIFwid2VicGFjay5jb25maWcuanNcIi5cbi8vXG4vLyBJbXBvcnQgZGVwcyB3aXRoIHRoZSBkZXAgbmFtZSBvciBsb2NhbCBmaWxlcyB3aXRoIGEgcmVsYXRpdmUgcGF0aCwgZm9yIGV4YW1wbGU6XG4vL1xuLy8gICAgIGltcG9ydCB7U29ja2V0fSBmcm9tIFwicGhvZW5peFwiXG4vLyAgICAgaW1wb3J0IHNvY2tldCBmcm9tIFwiLi9zb2NrZXRcIlxuLy9cbmltcG9ydCBcInBob2VuaXhfaHRtbFwiXG5pbXBvcnQge1NvY2tldH0gZnJvbSBcInBob2VuaXhcIlxuaW1wb3J0IE5Qcm9ncmVzcyBmcm9tIFwibnByb2dyZXNzXCJcbmltcG9ydCB7TGl2ZVNvY2tldH0gZnJvbSBcInBob2VuaXhfbGl2ZV92aWV3XCJcblxubGV0IGNzcmZUb2tlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtZXRhW25hbWU9J2NzcmYtdG9rZW4nXVwiKS5nZXRBdHRyaWJ1dGUoXCJjb250ZW50XCIpXG5sZXQgbGl2ZVNvY2tldCA9IG5ldyBMaXZlU29ja2V0KFwiL2xpdmVcIiwgU29ja2V0LCB7cGFyYW1zOiB7X2NzcmZfdG9rZW46IGNzcmZUb2tlbn19KVxuXG4vLyBTaG93IHByb2dyZXNzIGJhciBvbiBsaXZlIG5hdmlnYXRpb24gYW5kIGZvcm0gc3VibWl0c1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJwaHg6cGFnZS1sb2FkaW5nLXN0YXJ0XCIsIGluZm8gPT4gTlByb2dyZXNzLnN0YXJ0KCkpXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInBoeDpwYWdlLWxvYWRpbmctc3RvcFwiLCBpbmZvID0+IE5Qcm9ncmVzcy5kb25lKCkpXG5cbi8vIGNvbm5lY3QgaWYgdGhlcmUgYXJlIGFueSBMaXZlVmlld3Mgb24gdGhlIHBhZ2VcbmxpdmVTb2NrZXQuY29ubmVjdCgpXG5cbi8vIGV4cG9zZSBsaXZlU29ja2V0IG9uIHdpbmRvdyBmb3Igd2ViIGNvbnNvbGUgZGVidWcgbG9ncyBhbmQgbGF0ZW5jeSBzaW11bGF0aW9uOlxuLy8gPj4gbGl2ZVNvY2tldC5lbmFibGVEZWJ1ZygpXG4vLyA+PiBsaXZlU29ja2V0LmVuYWJsZUxhdGVuY3lTaW0oMTAwMCkgIC8vIGVuYWJsZWQgZm9yIGR1cmF0aW9uIG9mIGJyb3dzZXIgc2Vzc2lvblxuLy8gPj4gbGl2ZVNvY2tldC5kaXNhYmxlTGF0ZW5jeVNpbSgpXG53aW5kb3cubGl2ZVNvY2tldCA9IGxpdmVTb2NrZXRcblxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///4\\n')},function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2Nzcy9hcHAuc2Nzcz80NjY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///5\\n\")},function(module,exports,__webpack_require__){eval(\"(function (global, factory) {\\n   true ? module.exports = factory() :\\n  undefined;\\n}(this, (function () { 'use strict';\\n\\n  function _defineProperty(obj, key, value) {\\n    if (key in obj) {\\n      Object.defineProperty(obj, key, {\\n        value: value,\\n        enumerable: true,\\n        configurable: true,\\n        writable: true\\n      });\\n    } else {\\n      obj[key] = value;\\n    }\\n\\n    return obj;\\n  }\\n\\n  function ownKeys(object, enumerableOnly) {\\n    var keys = Object.keys(object);\\n\\n    if (Object.getOwnPropertySymbols) {\\n      var symbols = Object.getOwnPropertySymbols(object);\\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\\n      });\\n      keys.push.apply(keys, symbols);\\n    }\\n\\n    return keys;\\n  }\\n\\n  function _objectSpread2(target) {\\n    for (var i = 1; i < arguments.length; i++) {\\n      var source = arguments[i] != null ? arguments[i] : {};\\n\\n      if (i % 2) {\\n        ownKeys(Object(source), true).forEach(function (key) {\\n          _defineProperty(target, key, source[key]);\\n        });\\n      } else if (Object.getOwnPropertyDescriptors) {\\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\\n      } else {\\n        ownKeys(Object(source)).forEach(function (key) {\\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\\n        });\\n      }\\n    }\\n\\n    return target;\\n  }\\n\\n  // Thanks @stimulus:\\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\\n  function domReady() {\\n    return new Promise(resolve => {\\n      if (document.readyState == \\\"loading\\\") {\\n        document.addEventListener(\\\"DOMContentLoaded\\\", resolve);\\n      } else {\\n        resolve();\\n      }\\n    });\\n  }\\n  function arrayUnique(array) {\\n    return Array.from(new Set(array));\\n  }\\n  function isTesting() {\\n    return navigator.userAgent.includes(\\\"Node.js\\\") || navigator.userAgent.includes(\\\"jsdom\\\");\\n  }\\n  function checkedAttrLooseCompare(valueA, valueB) {\\n    return valueA == valueB;\\n  }\\n  function warnIfMalformedTemplate(el, directive) {\\n    if (el.tagName.toLowerCase() !== 'template') {\\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\\n    } else if (el.content.childElementCount !== 1) {\\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);\\n    }\\n  }\\n  function kebabCase(subject) {\\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\\\s]/, '-').toLowerCase();\\n  }\\n  function camelCase(subject) {\\n    return subject.toLowerCase().replace(/-(\\\\w)/g, (match, char) => char.toUpperCase());\\n  }\\n  function walk(el, callback) {\\n    if (callback(el) === false) return;\\n    let node = el.firstElementChild;\\n\\n    while (node) {\\n      walk(node, callback);\\n      node = node.nextElementSibling;\\n    }\\n  }\\n  function debounce(func, wait) {\\n    var timeout;\\n    return function () {\\n      var context = this,\\n          args = arguments;\\n\\n      var later = function later() {\\n        timeout = null;\\n        func.apply(context, args);\\n      };\\n\\n      clearTimeout(timeout);\\n      timeout = setTimeout(later, wait);\\n    };\\n  }\\n\\n  const handleError = (el, expression, error) => {\\n    console.warn(`Alpine Error: \\\"${error}\\\"\\\\n\\\\nExpression: \\\"${expression}\\\"\\\\nElement:`, el);\\n\\n    if (!isTesting()) {\\n      Object.assign(error, {\\n        el,\\n        expression\\n      });\\n      throw error;\\n    }\\n  };\\n\\n  function tryCatch(cb, {\\n    el,\\n    expression\\n  }) {\\n    try {\\n      const value = cb();\\n      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;\\n    } catch (e) {\\n      handleError(el, expression, e);\\n    }\\n  }\\n\\n  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {\\n    return tryCatch(() => {\\n      if (typeof expression === 'function') {\\n        return expression.call(dataContext);\\n      }\\n\\n      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\\n    }, {\\n      el,\\n      expression\\n    });\\n  }\\n  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {\\n    return tryCatch(() => {\\n      if (typeof expression === 'function') {\\n        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\\n      }\\n\\n      let AsyncFunction = Function;\\n      /* MODERN-ONLY:START */\\n\\n      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\\n      /* MODERN-ONLY:END */\\n      // For the cases when users pass only a function reference to the caller: `x-on:click=\\\"foo\\\"`\\n      // Where \\\"foo\\\" is a function. Also, we'll pass the function the event instance when we call it.\\n\\n      if (Object.keys(dataContext).includes(expression)) {\\n        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\\n\\n        if (typeof methodReference === 'function') {\\n          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\\n        } else {\\n          return Promise.resolve();\\n        }\\n      }\\n\\n      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\\n    }, {\\n      el,\\n      expression\\n    });\\n  }\\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\\\b/;\\n  function isXAttr(attr) {\\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\\n    return xAttrRE.test(name);\\n  }\\n  function getXAttrs(el, component, type) {\\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\\n\\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\\n\\n    if (spreadDirective) {\\n      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\\n\\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\\n        name,\\n        value\\n      })));\\n    }\\n\\n    if (type) return directives.filter(i => i.type === type);\\n    return sortDirectives(directives);\\n  }\\n\\n  function sortDirectives(directives) {\\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\\n    return directives.sort((a, b) => {\\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\\n    });\\n  }\\n\\n  function parseHtmlAttribute({\\n    name,\\n    value\\n  }) {\\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\\n    const typeMatch = normalizedName.match(xAttrRE);\\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\\\-:]+)/);\\n    const modifiers = normalizedName.match(/\\\\.[^.\\\\]]+(?=[^\\\\]]*$)/g) || [];\\n    return {\\n      type: typeMatch ? typeMatch[1] : null,\\n      value: valueMatch ? valueMatch[1] : null,\\n      modifiers: modifiers.map(i => i.replace('.', '')),\\n      expression: value\\n    };\\n  }\\n  function isBooleanAttr(attrName) {\\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\\n    // Array roughly ordered by estimated usage\\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\\n    return booleanAttributes.includes(attrName);\\n  }\\n  function replaceAtAndColonWithStandardSyntax(name) {\\n    if (name.startsWith('@')) {\\n      return name.replace('@', 'x-on:');\\n    } else if (name.startsWith(':')) {\\n      return name.replace(':', 'x-bind:');\\n    }\\n\\n    return name;\\n  }\\n  function convertClassStringToArray(classList, filterFn = Boolean) {\\n    return classList.split(' ').filter(filterFn);\\n  }\\n  const TRANSITION_TYPE_IN = 'in';\\n  const TRANSITION_TYPE_OUT = 'out';\\n  const TRANSITION_CANCELLED = 'cancelled';\\n  function transitionIn(el, show, reject, component, forceSkip = false) {\\n    // We don't want to transition on the initial page load.\\n    if (forceSkip) return show();\\n\\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\\n      // there is already a similar transition going on, this was probably triggered by\\n      // a change in a different property, let's just leave the previous one doing its job\\n      return;\\n    }\\n\\n    const attrs = getXAttrs(el, component, 'transition');\\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\\n\\n    if (showAttr && showAttr.modifiers.includes('transition')) {\\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \\\"in\\\" transition.\\n\\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \\\"in\\\" related modifiers for this transition.\\n\\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\\n      transitionClassesIn(el, component, attrs, show, reject);\\n    } else {\\n      // If neither, just show that damn thing.\\n      show();\\n    }\\n  }\\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\\n    // We don't want to transition on the initial page load.\\n    if (forceSkip) return hide();\\n\\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\\n      // there is already a similar transition going on, this was probably triggered by\\n      // a change in a different property, let's just leave the previous one doing its job\\n      return;\\n    }\\n\\n    const attrs = getXAttrs(el, component, 'transition');\\n    const showAttr = getXAttrs(el, component, 'show')[0];\\n\\n    if (showAttr && showAttr.modifiers.includes('transition')) {\\n      let modifiers = showAttr.modifiers;\\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\\n      transitionClassesOut(el, component, attrs, hide, reject);\\n    } else {\\n      hide();\\n    }\\n  }\\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\\n    const styleValues = {\\n      duration: modifierValue(modifiers, 'duration', 150),\\n      origin: modifierValue(modifiers, 'origin', 'center'),\\n      first: {\\n        opacity: 0,\\n        scale: modifierValue(modifiers, 'scale', 95)\\n      },\\n      second: {\\n        opacity: 1,\\n        scale: 100\\n      }\\n    };\\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\\n  }\\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\\n    // Make the \\\"out\\\" transition .5x slower than the \\\"in\\\". (Visually better)\\n    // HOWEVER, if they explicitly set a duration for the \\\"out\\\" transition,\\n    // use that.\\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\\n    const styleValues = {\\n      duration: duration,\\n      origin: modifierValue(modifiers, 'origin', 'center'),\\n      first: {\\n        opacity: 1,\\n        scale: 100\\n      },\\n      second: {\\n        opacity: 0,\\n        scale: modifierValue(modifiers, 'scale', 95)\\n      }\\n    };\\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\\n  }\\n\\n  function modifierValue(modifiers, key, fallback) {\\n    // If the modifier isn't present, use the default.\\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\\n\\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\\n    if (!rawValue) return fallback;\\n\\n    if (key === 'scale') {\\n      // Check if the very next value is NOT a number and return the fallback.\\n      // If x-show.transition.scale, we'll use the default scale value.\\n      // That is how a user opts out of the opacity transition.\\n      if (!isNumeric(rawValue)) return fallback;\\n    }\\n\\n    if (key === 'duration') {\\n      // Support x-show.transition.duration.500ms && duration.500\\n      let match = rawValue.match(/([0-9]+)ms/);\\n      if (match) return match[1];\\n    }\\n\\n    if (key === 'origin') {\\n      // Support chaining origin directions: x-show.transition.top.right\\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\\n      }\\n    }\\n\\n    return rawValue;\\n  }\\n\\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\\n    // clear the previous transition if exists to avoid caching the wrong styles\\n    if (el.__x_transition) {\\n      el.__x_transition.cancel && el.__x_transition.cancel();\\n    } // If the user set these style values, we'll put them back when we're done with them.\\n\\n\\n    const opacityCache = el.style.opacity;\\n    const transformCache = el.style.transform;\\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\\n\\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\\n    // This way you can get a birds eye view of the hooks, and the differences\\n    // between them.\\n\\n    const stages = {\\n      start() {\\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\\n      },\\n\\n      during() {\\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\\n      },\\n\\n      show() {\\n        hook1();\\n      },\\n\\n      end() {\\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\\n      },\\n\\n      hide() {\\n        hook2();\\n      },\\n\\n      cleanup() {\\n        if (transitionOpacity) el.style.opacity = opacityCache;\\n        if (transitionScale) el.style.transform = transformCache;\\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\\n        el.style.transitionProperty = null;\\n        el.style.transitionDuration = null;\\n        el.style.transitionTimingFunction = null;\\n      }\\n\\n    };\\n    transition(el, stages, type, reject);\\n  }\\n\\n  const ensureStringExpression = (expression, el, component) => {\\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\\n  };\\n\\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\\n      expression: ''\\n    }).expression, el, component));\\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\\n      expression: ''\\n    }).expression, el, component));\\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\\n      expression: ''\\n    }).expression, el, component));\\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\\n  }\\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\\n      expression: ''\\n    }).expression, el, component));\\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\\n      expression: ''\\n    }).expression, el, component));\\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\\n      expression: ''\\n    }).expression, el, component));\\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\\n  }\\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\\n    // clear the previous transition if exists to avoid caching the wrong classes\\n    if (el.__x_transition) {\\n      el.__x_transition.cancel && el.__x_transition.cancel();\\n    }\\n\\n    const originalClasses = el.__x_original_classes || [];\\n    const stages = {\\n      start() {\\n        el.classList.add(...classesStart);\\n      },\\n\\n      during() {\\n        el.classList.add(...classesDuring);\\n      },\\n\\n      show() {\\n        hook1();\\n      },\\n\\n      end() {\\n        // Don't remove classes that were in the original class attribute.\\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\\n        el.classList.add(...classesEnd);\\n      },\\n\\n      hide() {\\n        hook2();\\n      },\\n\\n      cleanup() {\\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\\n      }\\n\\n    };\\n    transition(el, stages, type, reject);\\n  }\\n  function transition(el, stages, type, reject) {\\n    const finish = once(() => {\\n      stages.hide(); // Adding an \\\"isConnected\\\" check, in case the callback\\n      // removed the element from the DOM.\\n\\n      if (el.isConnected) {\\n        stages.cleanup();\\n      }\\n\\n      delete el.__x_transition;\\n    });\\n    el.__x_transition = {\\n      // Set transition type so we can avoid clearing transition if the direction is the same\\n      type: type,\\n      // create a callback for the last stages of the transition so we can call it\\n      // from different point and early terminate it. Once will ensure that function\\n      // is only called one time.\\n      cancel: once(() => {\\n        reject(TRANSITION_CANCELLED);\\n        finish();\\n      }),\\n      finish,\\n      // This store the next animation frame so we can cancel it\\n      nextFrame: null\\n    };\\n    stages.start();\\n    stages.during();\\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\\n      // for every single transition property. Let's grab the first one and call it a day.\\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\\n\\n      if (duration === 0) {\\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\\n      }\\n\\n      stages.show();\\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\\n        stages.end();\\n        setTimeout(el.__x_transition.finish, duration);\\n      });\\n    });\\n  }\\n  function isNumeric(subject) {\\n    return !Array.isArray(subject) && !isNaN(subject);\\n  } // Thanks @vuejs\\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\\n\\n  function once(callback) {\\n    let called = false;\\n    return function () {\\n      if (!called) {\\n        called = true;\\n        callback.apply(this, arguments);\\n      }\\n    };\\n  }\\n\\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\\n    warnIfMalformedTemplate(templateEl, 'x-for');\\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\\n\\n    let currentEl = templateEl;\\n    items.forEach((item, index) => {\\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\\n\\n      if (!nextEl) {\\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\\n\\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\\n        nextEl.__x_for = iterationScopeVariables;\\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\\n      } else {\\n        // Temporarily remove the key indicator to allow the normal \\\"updateElements\\\" to work.\\n        delete nextEl.__x_for_key;\\n        nextEl.__x_for = iterationScopeVariables;\\n        component.updateElements(nextEl, () => nextEl.__x_for);\\n      }\\n\\n      currentEl = nextEl;\\n      currentEl.__x_for_key = currentKey;\\n    });\\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\\n  } // This was taken from VueJS 2.* core. Thanks Vue!\\n\\n  function parseForExpression(expression) {\\n    let forIteratorRE = /,([^,\\\\}\\\\]]*)(?:,([^,\\\\}\\\\]]*))?$/;\\n    let stripParensRE = /^\\\\(|\\\\)$/g;\\n    let forAliasRE = /([\\\\s\\\\S]*?)\\\\s+(?:in|of)\\\\s+([\\\\s\\\\S]*)/;\\n    let inMatch = String(expression).match(forAliasRE);\\n    if (!inMatch) return;\\n    let res = {};\\n    res.items = inMatch[2].trim();\\n    let item = inMatch[1].trim().replace(stripParensRE, '');\\n    let iteratorMatch = item.match(forIteratorRE);\\n\\n    if (iteratorMatch) {\\n      res.item = item.replace(forIteratorRE, '').trim();\\n      res.index = iteratorMatch[1].trim();\\n\\n      if (iteratorMatch[2]) {\\n        res.collection = iteratorMatch[2].trim();\\n      }\\n    } else {\\n      res.item = item;\\n    }\\n\\n    return res;\\n  }\\n\\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\\n    // We must create a new object, so each iteration has a new scope\\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\\n    scopeVariables[iteratorNames.item] = item;\\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\\n    return scopeVariables;\\n  }\\n\\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\\n\\n    if (!bindKeyAttribute) return index;\\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\\n  }\\n\\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\\n\\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\\n      return [];\\n    }\\n\\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\\n\\n    if (isNumeric(items) && items >= 0) {\\n      items = Array.from(Array(items).keys(), i => i + 1);\\n    }\\n\\n    return items;\\n  }\\n\\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\\n    let clone = document.importNode(templateEl.content, true);\\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\\n    return currentEl.nextElementSibling;\\n  }\\n\\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\\n    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.\\n\\n    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.\\n\\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\\n    // If we find it, we'll move it to the current position in the loop.\\n\\n    let tmpNextEl = nextEl;\\n\\n    while (tmpNextEl) {\\n      if (tmpNextEl.__x_for_key === currentKey) {\\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\\n      }\\n\\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\\n    }\\n  }\\n\\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\\n\\n    while (nextElementFromOldLoop) {\\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\\n      transitionOut(nextElementFromOldLoop, () => {\\n        nextElementFromOldLoopImmutable.remove();\\n      }, () => {}, component);\\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\\n    }\\n  }\\n\\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\\n\\n    if (attrName === 'value') {\\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\\n\\n      if (value === undefined && String(expression).match(/\\\\./)) {\\n        value = '';\\n      }\\n\\n      if (el.type === 'radio') {\\n        // Set radio value from x-bind:value, if no \\\"value\\\" attribute exists.\\n        // If there are any initial state values, radio will have a correct\\n        // \\\"checked\\\" value since x-bind:value is processed before x-model.\\n        if (el.attributes.value === undefined && attrType === 'bind') {\\n          el.value = value;\\n        } else if (attrType !== 'bind') {\\n          el.checked = checkedAttrLooseCompare(el.value, value);\\n        }\\n      } else if (el.type === 'checkbox') {\\n        // If we are explicitly binding a string to the :value, set the string,\\n        // If the value is a boolean, leave it alone, it will be set to \\\"on\\\"\\n        // automatically.\\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\\n          el.value = String(value);\\n        } else if (attrType !== 'bind') {\\n          if (Array.isArray(value)) {\\n            // I'm purposely not using Array.includes here because it's\\n            // strict, and because of Numeric/String mis-casting, I\\n            // want the \\\"includes\\\" to be \\\"fuzzy\\\".\\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\\n          } else {\\n            el.checked = !!value;\\n          }\\n        }\\n      } else if (el.tagName === 'SELECT') {\\n        updateSelect(el, value);\\n      } else {\\n        if (el.value === value) return;\\n        el.value = value;\\n      }\\n    } else if (attrName === 'class') {\\n      if (Array.isArray(value)) {\\n        const originalClasses = el.__x_original_classes || [];\\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\\n      } else if (typeof value === 'object') {\\n        // Sorting the keys / class names by their boolean value will ensure that\\n        // anything that evaluates to `false` and needs to remove classes is run first.\\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\\n        keysSortedByBooleanValue.forEach(classNames => {\\n          if (value[classNames]) {\\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\\n          } else {\\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\\n          }\\n        });\\n      } else {\\n        const originalClasses = el.__x_original_classes || [];\\n        const newClasses = value ? convertClassStringToArray(value) : [];\\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\\n      }\\n    } else {\\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\\n\\n      if ([null, undefined, false].includes(value)) {\\n        el.removeAttribute(attrName);\\n      } else {\\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\\n      }\\n    }\\n  }\\n\\n  function setIfChanged(el, attrName, value) {\\n    if (el.getAttribute(attrName) != value) {\\n      el.setAttribute(attrName, value);\\n    }\\n  }\\n\\n  function updateSelect(el, value) {\\n    const arrayWrappedValue = [].concat(value).map(value => {\\n      return value + '';\\n    });\\n    Array.from(el.options).forEach(option => {\\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\\n    });\\n  }\\n\\n  function handleTextDirective(el, output, expression) {\\n    // If nested model key is undefined, set the default value to empty string.\\n    if (output === undefined && String(expression).match(/\\\\./)) {\\n      output = '';\\n    }\\n\\n    el.textContent = output;\\n  }\\n\\n  function handleHtmlDirective(component, el, expression, extraVars) {\\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\\n  }\\n\\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\\n    const hide = () => {\\n      el.style.display = 'none';\\n      el.__x_is_shown = false;\\n    };\\n\\n    const show = () => {\\n      if (el.style.length === 1 && el.style.display === 'none') {\\n        el.removeAttribute('style');\\n      } else {\\n        el.style.removeProperty('display');\\n      }\\n\\n      el.__x_is_shown = true;\\n    };\\n\\n    if (initialUpdate === true) {\\n      if (value) {\\n        show();\\n      } else {\\n        hide();\\n      }\\n\\n      return;\\n    }\\n\\n    const handle = (resolve, reject) => {\\n      if (value) {\\n        if (el.style.display === 'none' || el.__x_transition) {\\n          transitionIn(el, () => {\\n            show();\\n          }, reject, component);\\n        }\\n\\n        resolve(() => {});\\n      } else {\\n        if (el.style.display !== 'none') {\\n          transitionOut(el, () => {\\n            resolve(() => {\\n              hide();\\n            });\\n          }, reject, component);\\n        } else {\\n          resolve(() => {});\\n        }\\n      }\\n    }; // The working of x-show is a bit complex because we need to\\n    // wait for any child transitions to finish before hiding\\n    // some element. Also, this has to be done recursively.\\n    // If x-show.immediate, foregoe the waiting.\\n\\n\\n    if (modifiers.includes('immediate')) {\\n      handle(finish => finish(), () => {});\\n      return;\\n    } // x-show is encountered during a DOM tree walk. If an element\\n    // we encounter is NOT a child of another x-show element we\\n    // can execute the previous x-show stack (if one exists).\\n\\n\\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\\n      component.executeAndClearRemainingShowDirectiveStack();\\n    }\\n\\n    component.showDirectiveStack.push(handle);\\n    component.showDirectiveLastElement = el;\\n  }\\n\\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\\n    warnIfMalformedTemplate(el, 'x-if');\\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\\n\\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\\n      const clone = document.importNode(el.content, true);\\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\\n      component.initializeElements(el.nextElementSibling, extraVars);\\n      el.nextElementSibling.__x_inserted_me = true;\\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\\n      transitionOut(el.nextElementSibling, () => {\\n        el.nextElementSibling.remove();\\n      }, () => {}, component, initialUpdate);\\n    }\\n  }\\n\\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\\n    const options = {\\n      passive: modifiers.includes('passive')\\n    };\\n\\n    if (modifiers.includes('camel')) {\\n      event = camelCase(event);\\n    }\\n\\n    let handler, listenerTarget;\\n\\n    if (modifiers.includes('away')) {\\n      listenerTarget = document;\\n\\n      handler = e => {\\n        // Don't do anything if the click came from the element or within it.\\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\\n\\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\\n        // is from outside it, let's run the expression.\\n\\n        runListenerHandler(component, expression, e, extraVars);\\n\\n        if (modifiers.includes('once')) {\\n          document.removeEventListener(event, handler, options);\\n        }\\n      };\\n    } else {\\n      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\\n\\n      handler = e => {\\n        // Remove this global event handler if the element that declared it\\n        // has been removed. It's now stale.\\n        if (listenerTarget === window || listenerTarget === document) {\\n          if (!document.body.contains(el)) {\\n            listenerTarget.removeEventListener(event, handler, options);\\n            return;\\n          }\\n        }\\n\\n        if (isKeyEvent(event)) {\\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\\n            return;\\n          }\\n        }\\n\\n        if (modifiers.includes('prevent')) e.preventDefault();\\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\\n        // the target element matches the element we are registering the\\n        // event on, run the handler\\n\\n        if (!modifiers.includes('self') || e.target === el) {\\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\\n          returnValue.then(value => {\\n            if (value === false) {\\n              e.preventDefault();\\n            } else {\\n              if (modifiers.includes('once')) {\\n                listenerTarget.removeEventListener(event, handler, options);\\n              }\\n            }\\n          });\\n        }\\n      };\\n    }\\n\\n    if (modifiers.includes('debounce')) {\\n      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\\n      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\\n      handler = debounce(handler, wait);\\n    }\\n\\n    listenerTarget.addEventListener(event, handler, options);\\n  }\\n\\n  function runListenerHandler(component, expression, e, extraVars) {\\n    return component.evaluateCommandExpression(e.target, expression, () => {\\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\\n        '$event': e\\n      });\\n    });\\n  }\\n\\n  function isKeyEvent(event) {\\n    return ['keydown', 'keyup'].includes(event);\\n  }\\n\\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\\n    let keyModifiers = modifiers.filter(i => {\\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\\n    });\\n\\n    if (keyModifiers.includes('debounce')) {\\n      let debounceIndex = keyModifiers.indexOf('debounce');\\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\\n    } // If no modifier is specified, we'll call it a press.\\n\\n\\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\\n\\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\\n\\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\\n\\n    if (selectedSystemKeyModifiers.length > 0) {\\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\\n        // Alias \\\"cmd\\\" and \\\"super\\\" to \\\"meta\\\"\\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\\n        return e[`${modifier}Key`];\\n      }); // If all the modifiers selected are pressed, ...\\n\\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\\n        // AND the remaining key is pressed as well. It's a press.\\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\\n      }\\n    } // We'll call it NOT a valid keypress.\\n\\n\\n    return true;\\n  }\\n\\n  function keyToModifier(key) {\\n    switch (key) {\\n      case '/':\\n        return 'slash';\\n\\n      case ' ':\\n      case 'Spacebar':\\n        return 'space';\\n\\n      default:\\n        return key && kebabCase(key);\\n    }\\n  }\\n\\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\\n    // If the element we are binding to is a select, a radio, or checkbox\\n    // we'll listen for the change event instead of the \\\"input\\\" event.\\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\\n      });\\n    });\\n  }\\n\\n  function generateModelAssignmentFunction(el, modifiers, expression) {\\n    if (el.type === 'radio') {\\n      // Radio buttons only work properly when they share a name attribute.\\n      // People might assume we take care of that for them, because\\n      // they already set a shared \\\"x-model\\\" attribute.\\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\\n    }\\n\\n    return (event, currentValue) => {\\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\\n      if (event instanceof CustomEvent && event.detail) {\\n        return event.detail;\\n      } else if (el.type === 'checkbox') {\\n        // If the data we are binding to is an array, toggle its value inside the array.\\n        if (Array.isArray(currentValue)) {\\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\\n        } else {\\n          return event.target.checked;\\n        }\\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\\n          const rawValue = option.value || option.text;\\n          return safeParseNumber(rawValue);\\n        }) : Array.from(event.target.selectedOptions).map(option => {\\n          return option.value || option.text;\\n        });\\n      } else {\\n        const rawValue = event.target.value;\\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\\n      }\\n    };\\n  }\\n\\n  function safeParseNumber(rawValue) {\\n    const number = rawValue ? parseFloat(rawValue) : null;\\n    return isNumeric(number) ? number : rawValue;\\n  }\\n\\n  /**\\n   * Copyright (C) 2017 salesforce.com, inc.\\n   */\\n  const { isArray } = Array;\\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\\n  function isUndefined(obj) {\\n      return obj === undefined;\\n  }\\n  function isFunction(obj) {\\n      return typeof obj === 'function';\\n  }\\n  function isObject(obj) {\\n      return typeof obj === 'object';\\n  }\\n  const proxyToValueMap = new WeakMap();\\n  function registerProxy(proxy, value) {\\n      proxyToValueMap.set(proxy, value);\\n  }\\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\\n\\n  function wrapValue(membrane, value) {\\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\\n  }\\n  /**\\n   * Unwrap property descriptors will set value on original descriptor\\n   * We only need to unwrap if value is specified\\n   * @param descriptor external descrpitor provided to define new property on original value\\n   */\\n  function unwrapDescriptor(descriptor) {\\n      if (hasOwnProperty.call(descriptor, 'value')) {\\n          descriptor.value = unwrap(descriptor.value);\\n      }\\n      return descriptor;\\n  }\\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\\n      targetKeys.forEach((key) => {\\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\\n          // We do not need to wrap the descriptor if configurable\\n          // Because we can deal with wrapping it when user goes through\\n          // Get own property descriptor. There is also a chance that this descriptor\\n          // could change sometime in the future, so we can defer wrapping\\n          // until we need to\\n          if (!descriptor.configurable) {\\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\\n          }\\n          ObjectDefineProperty(shadowTarget, key, descriptor);\\n      });\\n      preventExtensions(shadowTarget);\\n  }\\n  class ReactiveProxyHandler {\\n      constructor(membrane, value) {\\n          this.originalTarget = value;\\n          this.membrane = membrane;\\n      }\\n      get(shadowTarget, key) {\\n          const { originalTarget, membrane } = this;\\n          const value = originalTarget[key];\\n          const { valueObserved } = membrane;\\n          valueObserved(originalTarget, key);\\n          return membrane.getProxy(value);\\n      }\\n      set(shadowTarget, key, value) {\\n          const { originalTarget, membrane: { valueMutated } } = this;\\n          const oldValue = originalTarget[key];\\n          if (oldValue !== value) {\\n              originalTarget[key] = value;\\n              valueMutated(originalTarget, key);\\n          }\\n          else if (key === 'length' && isArray(originalTarget)) {\\n              // fix for issue #236: push will add the new index, and by the time length\\n              // is updated, the internal length is already equal to the new length value\\n              // therefore, the oldValue is equal to the value. This is the forking logic\\n              // to support this use case.\\n              valueMutated(originalTarget, key);\\n          }\\n          return true;\\n      }\\n      deleteProperty(shadowTarget, key) {\\n          const { originalTarget, membrane: { valueMutated } } = this;\\n          delete originalTarget[key];\\n          valueMutated(originalTarget, key);\\n          return true;\\n      }\\n      apply(shadowTarget, thisArg, argArray) {\\n          /* No op */\\n      }\\n      construct(target, argArray, newTarget) {\\n          /* No op */\\n      }\\n      has(shadowTarget, key) {\\n          const { originalTarget, membrane: { valueObserved } } = this;\\n          valueObserved(originalTarget, key);\\n          return key in originalTarget;\\n      }\\n      ownKeys(shadowTarget) {\\n          const { originalTarget } = this;\\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\\n      }\\n      isExtensible(shadowTarget) {\\n          const shadowIsExtensible = isExtensible(shadowTarget);\\n          if (!shadowIsExtensible) {\\n              return shadowIsExtensible;\\n          }\\n          const { originalTarget, membrane } = this;\\n          const targetIsExtensible = isExtensible(originalTarget);\\n          if (!targetIsExtensible) {\\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\\n          }\\n          return targetIsExtensible;\\n      }\\n      setPrototypeOf(shadowTarget, prototype) {\\n      }\\n      getPrototypeOf(shadowTarget) {\\n          const { originalTarget } = this;\\n          return getPrototypeOf(originalTarget);\\n      }\\n      getOwnPropertyDescriptor(shadowTarget, key) {\\n          const { originalTarget, membrane } = this;\\n          const { valueObserved } = this.membrane;\\n          // keys looked up via hasOwnProperty need to be reactive\\n          valueObserved(originalTarget, key);\\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\\n          if (isUndefined(desc)) {\\n              return desc;\\n          }\\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\\n          if (!isUndefined(shadowDescriptor)) {\\n              return shadowDescriptor;\\n          }\\n          // Note: by accessing the descriptor, the key is marked as observed\\n          // but access to the value, setter or getter (if available) cannot observe\\n          // mutations, just like regular methods, in which case we just do nothing.\\n          desc = wrapDescriptor(membrane, desc, wrapValue);\\n          if (!desc.configurable) {\\n              // If descriptor from original target is not configurable,\\n              // We must copy the wrapped descriptor over to the shadow target.\\n              // Otherwise, proxy will throw an invariant error.\\n              // This is our last chance to lock the value.\\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\\n              ObjectDefineProperty(shadowTarget, key, desc);\\n          }\\n          return desc;\\n      }\\n      preventExtensions(shadowTarget) {\\n          const { originalTarget, membrane } = this;\\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\\n          preventExtensions(originalTarget);\\n          return true;\\n      }\\n      defineProperty(shadowTarget, key, descriptor) {\\n          const { originalTarget, membrane } = this;\\n          const { valueMutated } = membrane;\\n          const { configurable } = descriptor;\\n          // We have to check for value in descriptor\\n          // because Object.freeze(proxy) calls this method\\n          // with only { configurable: false, writeable: false }\\n          // Additionally, method will only be called with writeable:false\\n          // if the descriptor has a value, as opposed to getter/setter\\n          // So we can just check if writable is present and then see if\\n          // value is present. This eliminates getter and setter descriptors\\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\\n              descriptor.value = originalDescriptor.value;\\n          }\\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\\n          if (configurable === false) {\\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\\n          }\\n          valueMutated(originalTarget, key);\\n          return true;\\n      }\\n  }\\n\\n  function wrapReadOnlyValue(membrane, value) {\\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\\n  }\\n  class ReadOnlyHandler {\\n      constructor(membrane, value) {\\n          this.originalTarget = value;\\n          this.membrane = membrane;\\n      }\\n      get(shadowTarget, key) {\\n          const { membrane, originalTarget } = this;\\n          const value = originalTarget[key];\\n          const { valueObserved } = membrane;\\n          valueObserved(originalTarget, key);\\n          return membrane.getReadOnlyProxy(value);\\n      }\\n      set(shadowTarget, key, value) {\\n          return false;\\n      }\\n      deleteProperty(shadowTarget, key) {\\n          return false;\\n      }\\n      apply(shadowTarget, thisArg, argArray) {\\n          /* No op */\\n      }\\n      construct(target, argArray, newTarget) {\\n          /* No op */\\n      }\\n      has(shadowTarget, key) {\\n          const { originalTarget, membrane: { valueObserved } } = this;\\n          valueObserved(originalTarget, key);\\n          return key in originalTarget;\\n      }\\n      ownKeys(shadowTarget) {\\n          const { originalTarget } = this;\\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\\n      }\\n      setPrototypeOf(shadowTarget, prototype) {\\n      }\\n      getOwnPropertyDescriptor(shadowTarget, key) {\\n          const { originalTarget, membrane } = this;\\n          const { valueObserved } = membrane;\\n          // keys looked up via hasOwnProperty need to be reactive\\n          valueObserved(originalTarget, key);\\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\\n          if (isUndefined(desc)) {\\n              return desc;\\n          }\\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\\n          if (!isUndefined(shadowDescriptor)) {\\n              return shadowDescriptor;\\n          }\\n          // Note: by accessing the descriptor, the key is marked as observed\\n          // but access to the value or getter (if available) cannot be observed,\\n          // just like regular methods, in which case we just do nothing.\\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\\n          if (hasOwnProperty.call(desc, 'set')) {\\n              desc.set = undefined; // readOnly membrane does not allow setters\\n          }\\n          if (!desc.configurable) {\\n              // If descriptor from original target is not configurable,\\n              // We must copy the wrapped descriptor over to the shadow target.\\n              // Otherwise, proxy will throw an invariant error.\\n              // This is our last chance to lock the value.\\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\\n              ObjectDefineProperty(shadowTarget, key, desc);\\n          }\\n          return desc;\\n      }\\n      preventExtensions(shadowTarget) {\\n          return false;\\n      }\\n      defineProperty(shadowTarget, key, descriptor) {\\n          return false;\\n      }\\n  }\\n  function createShadowTarget(value) {\\n      let shadowTarget = undefined;\\n      if (isArray(value)) {\\n          shadowTarget = [];\\n      }\\n      else if (isObject(value)) {\\n          shadowTarget = {};\\n      }\\n      return shadowTarget;\\n  }\\n  const ObjectDotPrototype = Object.prototype;\\n  function defaultValueIsObservable(value) {\\n      // intentionally checking for null\\n      if (value === null) {\\n          return false;\\n      }\\n      // treat all non-object types, including undefined, as non-observable values\\n      if (typeof value !== 'object') {\\n          return false;\\n      }\\n      if (isArray(value)) {\\n          return true;\\n      }\\n      const proto = getPrototypeOf(value);\\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\\n  }\\n  const defaultValueObserved = (obj, key) => {\\n      /* do nothing */\\n  };\\n  const defaultValueMutated = (obj, key) => {\\n      /* do nothing */\\n  };\\n  const defaultValueDistortion = (value) => value;\\n  function wrapDescriptor(membrane, descriptor, getValue) {\\n      const { set, get } = descriptor;\\n      if (hasOwnProperty.call(descriptor, 'value')) {\\n          descriptor.value = getValue(membrane, descriptor.value);\\n      }\\n      else {\\n          if (!isUndefined(get)) {\\n              descriptor.get = function () {\\n                  // invoking the original getter with the original target\\n                  return getValue(membrane, get.call(unwrap(this)));\\n              };\\n          }\\n          if (!isUndefined(set)) {\\n              descriptor.set = function (value) {\\n                  // At this point we don't have a clear indication of whether\\n                  // or not a valid mutation will occur, we don't have the key,\\n                  // and we are not sure why and how they are invoking this setter.\\n                  // Nevertheless we preserve the original semantics by invoking the\\n                  // original setter with the original target and the unwrapped value\\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\\n              };\\n          }\\n      }\\n      return descriptor;\\n  }\\n  class ReactiveMembrane {\\n      constructor(options) {\\n          this.valueDistortion = defaultValueDistortion;\\n          this.valueMutated = defaultValueMutated;\\n          this.valueObserved = defaultValueObserved;\\n          this.valueIsObservable = defaultValueIsObservable;\\n          this.objectGraph = new WeakMap();\\n          if (!isUndefined(options)) {\\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\\n          }\\n      }\\n      getProxy(value) {\\n          const unwrappedValue = unwrap(value);\\n          const distorted = this.valueDistortion(unwrappedValue);\\n          if (this.valueIsObservable(distorted)) {\\n              const o = this.getReactiveState(unwrappedValue, distorted);\\n              // when trying to extract the writable version of a readonly\\n              // we return the readonly.\\n              return o.readOnly === value ? value : o.reactive;\\n          }\\n          return distorted;\\n      }\\n      getReadOnlyProxy(value) {\\n          value = unwrap(value);\\n          const distorted = this.valueDistortion(value);\\n          if (this.valueIsObservable(distorted)) {\\n              return this.getReactiveState(value, distorted).readOnly;\\n          }\\n          return distorted;\\n      }\\n      unwrapProxy(p) {\\n          return unwrap(p);\\n      }\\n      getReactiveState(value, distortedValue) {\\n          const { objectGraph, } = this;\\n          let reactiveState = objectGraph.get(distortedValue);\\n          if (reactiveState) {\\n              return reactiveState;\\n          }\\n          const membrane = this;\\n          reactiveState = {\\n              get reactive() {\\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\\n                  // caching the reactive proxy after the first time it is accessed\\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\\n                  registerProxy(proxy, value);\\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\\n                  return proxy;\\n              },\\n              get readOnly() {\\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\\n                  // caching the readOnly proxy after the first time it is accessed\\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\\n                  registerProxy(proxy, value);\\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\\n                  return proxy;\\n              }\\n          };\\n          objectGraph.set(distortedValue, reactiveState);\\n          return reactiveState;\\n      }\\n  }\\n  /** version: 0.26.0 */\\n\\n  function wrap(data, mutationCallback) {\\n\\n    let membrane = new ReactiveMembrane({\\n      valueMutated(target, key) {\\n        mutationCallback(target, key);\\n      }\\n\\n    });\\n    return {\\n      data: membrane.getProxy(data),\\n      membrane: membrane\\n    };\\n  }\\n  function unwrap$1(membrane, observable) {\\n    let unwrappedData = membrane.unwrapProxy(observable);\\n    let copy = {};\\n    Object.keys(unwrappedData).forEach(key => {\\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\\n      copy[key] = unwrappedData[key];\\n    });\\n    return copy;\\n  }\\n\\n  class Component {\\n    constructor(el, componentForClone = null) {\\n      this.$el = el;\\n      const dataAttr = this.$el.getAttribute('x-data');\\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\\n      const initExpression = this.$el.getAttribute('x-init');\\n      let dataExtras = {\\n        $el: this.$el\\n      };\\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\\n        Object.defineProperty(dataExtras, `$${name}`, {\\n          get: function get() {\\n            return callback(canonicalComponentElementReference);\\n          }\\n        });\\n      });\\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);\\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\\n\\n      let {\\n        membrane,\\n        data\\n      } = this.wrapDataInObservable(this.unobservedData);\\n      this.$data = data;\\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\\n      // our magic properties to the original data for access.\\n\\n      this.unobservedData.$el = this.$el;\\n      this.unobservedData.$refs = this.getRefsProxy();\\n      this.nextTickStack = [];\\n\\n      this.unobservedData.$nextTick = callback => {\\n        this.nextTickStack.push(callback);\\n      };\\n\\n      this.watchers = {};\\n\\n      this.unobservedData.$watch = (property, callback) => {\\n        if (!this.watchers[property]) this.watchers[property] = [];\\n        this.watchers[property].push(callback);\\n      };\\n      /* MODERN-ONLY:START */\\n      // We remove this piece of code from the legacy build.\\n      // In IE11, we have already defined our helpers at this point.\\n      // Register custom magic properties.\\n\\n\\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\\n        Object.defineProperty(this.unobservedData, `$${name}`, {\\n          get: function get() {\\n            return callback(canonicalComponentElementReference, this.$el);\\n          }\\n        });\\n      });\\n      /* MODERN-ONLY:END */\\n\\n      this.showDirectiveStack = [];\\n      this.showDirectiveLastElement;\\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\\n\\n      if (initExpression && !componentForClone) {\\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\\n        this.pauseReactivity = true;\\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\\n        this.pauseReactivity = false;\\n      } // Register all our listeners and set all our attribute bindings.\\n      // If we're cloning a component, the third parameter ensures no duplicate\\n      // event listeners are registered (the mutation observer will take care of them)\\n\\n\\n      this.initializeElements(this.$el, () => {}, componentForClone ? false : true); // Use mutation observer to detect new elements being added within this component at run-time.\\n      // Alpine's just so darn flexible amirite?\\n\\n      this.listenForNewElementsToInitialize();\\n\\n      if (typeof initReturnedCallback === 'function') {\\n        // Run the callback returned from the \\\"x-init\\\" hook to allow the user to do stuff after\\n        // Alpine's got it's grubby little paws all over everything.\\n        initReturnedCallback.call(this.$data);\\n      }\\n\\n      componentForClone || setTimeout(() => {\\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\\n      }, 0);\\n    }\\n\\n    getUnobservedData() {\\n      return unwrap$1(this.membrane, this.$data);\\n    }\\n\\n    wrapDataInObservable(data) {\\n      var self = this;\\n      let updateDom = debounce(function () {\\n        self.updateElements(self.$el);\\n      }, 0);\\n      return wrap(data, (target, key) => {\\n        if (self.watchers[key]) {\\n          // If there's a watcher for this specific key, run it.\\n          self.watchers[key].forEach(callback => callback(target[key]));\\n        } else if (Array.isArray(target)) {\\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\\n            // For example, when calling push, we would get a mutation for the item's key\\n            // and a second mutation for the length property.\\n\\n            if (key === 'length') return;\\n            dotNotationParts.reduce((comparisonData, part) => {\\n              if (Object.is(target, comparisonData[part])) {\\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\\n              }\\n\\n              return comparisonData[part];\\n            }, self.unobservedData);\\n          });\\n        } else {\\n          // Let's walk through the watchers with \\\"dot-notation\\\" (foo.bar) and see\\n          // if this mutation fits any of them.\\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \\\"part\\\" doesn't match the current\\n            // key, then skip it early for performance reasons.\\n\\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \\\"parts\\\" recursively to find\\n            // a match, and call the watcher if one's found.\\n\\n            dotNotationParts.reduce((comparisonData, part) => {\\n              if (Object.is(target, comparisonData)) {\\n                // Run the watchers.\\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\\n              }\\n\\n              return comparisonData[part];\\n            }, self.unobservedData);\\n          });\\n        } // Don't react to data changes for cases like the `x-created` hook.\\n\\n\\n        if (self.pauseReactivity) return;\\n        updateDom();\\n      });\\n    }\\n\\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\\n      walk(el, el => {\\n        // We've hit a component.\\n        if (el.hasAttribute('x-data')) {\\n          // If it's not the current one.\\n          if (!el.isSameNode(this.$el)) {\\n            // Initialize it if it's not.\\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\\n\\n            return false;\\n          }\\n        }\\n\\n        return callback(el);\\n      });\\n    }\\n\\n    initializeElements(rootEl, extraVars = () => {}, shouldRegisterListeners = true) {\\n      this.walkAndSkipNestedComponents(rootEl, el => {\\n        // Don't touch spawns from for loop\\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\\n\\n        if (el.__x_inserted_me !== undefined) return false;\\n        this.initializeElement(el, extraVars, shouldRegisterListeners);\\n      }, el => {\\n        el.__x = new Component(el);\\n      });\\n      this.executeAndClearRemainingShowDirectiveStack();\\n      this.executeAndClearNextTickStack(rootEl);\\n    }\\n\\n    initializeElement(el, extraVars, shouldRegisterListeners = true) {\\n      // To support class attribute merging, we have to know what the element's\\n      // original class attribute looked like for reference.\\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\\n      }\\n\\n      shouldRegisterListeners && this.registerListeners(el, extraVars);\\n      this.resolveBoundAttributes(el, true, extraVars);\\n    }\\n\\n    updateElements(rootEl, extraVars = () => {}) {\\n      this.walkAndSkipNestedComponents(rootEl, el => {\\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\\n        this.updateElement(el, extraVars);\\n      }, el => {\\n        el.__x = new Component(el);\\n      });\\n      this.executeAndClearRemainingShowDirectiveStack();\\n      this.executeAndClearNextTickStack(rootEl);\\n    }\\n\\n    executeAndClearNextTickStack(el) {\\n      // Skip spawns from alpine directives\\n      if (el === this.$el && this.nextTickStack.length > 0) {\\n        // We run the tick stack after the next frame to allow any\\n        // running transitions to pass the initial show stage.\\n        requestAnimationFrame(() => {\\n          while (this.nextTickStack.length > 0) {\\n            this.nextTickStack.shift()();\\n          }\\n        });\\n      }\\n    }\\n\\n    executeAndClearRemainingShowDirectiveStack() {\\n      // The goal here is to start all the x-show transitions\\n      // and build a nested promise chain so that elements\\n      // only hide when the children are finished hiding.\\n      this.showDirectiveStack.reverse().map(handler => {\\n        return new Promise((resolve, reject) => {\\n          handler(resolve, reject);\\n        });\\n      }).reduce((promiseChain, promise) => {\\n        return promiseChain.then(() => {\\n          return promise.then(finishElement => {\\n            finishElement();\\n          });\\n        });\\n      }, Promise.resolve(() => {})).catch(e => {\\n        if (e !== TRANSITION_CANCELLED) throw e;\\n      }); // We've processed the handler stack. let's clear it.\\n\\n      this.showDirectiveStack = [];\\n      this.showDirectiveLastElement = undefined;\\n    }\\n\\n    updateElement(el, extraVars) {\\n      this.resolveBoundAttributes(el, false, extraVars);\\n    }\\n\\n    registerListeners(el, extraVars) {\\n      getXAttrs(el, this).forEach(({\\n        type,\\n        value,\\n        modifiers,\\n        expression\\n      }) => {\\n        switch (type) {\\n          case 'on':\\n            registerListener(this, el, value, modifiers, expression, extraVars);\\n            break;\\n\\n          case 'model':\\n            registerModelListener(this, el, modifiers, expression, extraVars);\\n            break;\\n        }\\n      });\\n    }\\n\\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\\n      let attrs = getXAttrs(el, this);\\n      attrs.forEach(({\\n        type,\\n        value,\\n        modifiers,\\n        expression\\n      }) => {\\n        switch (type) {\\n          case 'model':\\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\\n            break;\\n\\n          case 'bind':\\n            // The :key binding on an x-for is special, ignore it.\\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\\n            break;\\n\\n          case 'text':\\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\\n            handleTextDirective(el, output, expression);\\n            break;\\n\\n          case 'html':\\n            handleHtmlDirective(this, el, expression, extraVars);\\n            break;\\n\\n          case 'show':\\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\\n            break;\\n\\n          case 'if':\\n            // If this element also has x-for on it, don't process x-if.\\n            // We will let the \\\"x-for\\\" directive handle the \\\"if\\\"ing.\\n            if (attrs.some(i => i.type === 'for')) return;\\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\\n            break;\\n\\n          case 'for':\\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\\n            break;\\n\\n          case 'cloak':\\n            el.removeAttribute('x-cloak');\\n            break;\\n        }\\n      });\\n    }\\n\\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\\n      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\\n        $dispatch: this.getDispatchFunction(el)\\n      }));\\n    }\\n\\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\\n      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\\n        $dispatch: this.getDispatchFunction(el)\\n      }));\\n    }\\n\\n    getDispatchFunction(el) {\\n      return (event, detail = {}) => {\\n        el.dispatchEvent(new CustomEvent(event, {\\n          detail,\\n          bubbles: true\\n        }));\\n      };\\n    }\\n\\n    listenForNewElementsToInitialize() {\\n      const targetNode = this.$el;\\n      const observerOptions = {\\n        childList: true,\\n        attributes: true,\\n        subtree: true\\n      };\\n      const observer = new MutationObserver(mutations => {\\n        for (let i = 0; i < mutations.length; i++) {\\n          // Filter out mutations triggered from child components.\\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\\n\\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\\n            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';\\n            const rawData = saferEval(this.$el, xAttr, {\\n              $el: this.$el\\n            });\\n            Object.keys(rawData).forEach(key => {\\n              if (this.$data[key] !== rawData[key]) {\\n                this.$data[key] = rawData[key];\\n              }\\n            });\\n          }\\n\\n          if (mutations[i].addedNodes.length > 0) {\\n            mutations[i].addedNodes.forEach(node => {\\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\\n\\n              if (node.matches('[x-data]') && !node.__x) {\\n                node.__x = new Component(node);\\n                return;\\n              }\\n\\n              this.initializeElements(node);\\n            });\\n          }\\n        }\\n      });\\n      observer.observe(targetNode, observerOptions);\\n    }\\n\\n    getRefsProxy() {\\n      var self = this;\\n      var refObj = {};\\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\\n      // the DOM when the system needs something from it. This way, the framework is flexible and\\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\\n      // For this reason, I'm using an \\\"on-demand\\\" proxy to fake a \\\"$refs\\\" object.\\n\\n      return new Proxy(refObj, {\\n        get(object, property) {\\n          if (property === '$isAlpineProxy') return true;\\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\\n          // nested components.\\n\\n          self.walkAndSkipNestedComponents(self.$el, el => {\\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\\n              ref = el;\\n            }\\n          });\\n          return ref;\\n        }\\n\\n      });\\n    }\\n\\n  }\\n\\n  const Alpine = {\\n    version: \\\"2.8.1\\\",\\n    pauseMutationObserver: false,\\n    magicProperties: {},\\n    onComponentInitializeds: [],\\n    onBeforeComponentInitializeds: [],\\n    ignoreFocusedForValueBinding: false,\\n    start: async function start() {\\n      if (!isTesting()) {\\n        await domReady();\\n      }\\n\\n      this.discoverComponents(el => {\\n        this.initializeComponent(el);\\n      }); // It's easier and more performant to just support Turbolinks than listen\\n      // to MutationObserver mutations at the document level.\\n\\n      document.addEventListener(\\\"turbolinks:load\\\", () => {\\n        this.discoverUninitializedComponents(el => {\\n          this.initializeComponent(el);\\n        });\\n      });\\n      this.listenForNewUninitializedComponentsAtRunTime();\\n    },\\n    discoverComponents: function discoverComponents(callback) {\\n      const rootEls = document.querySelectorAll('[x-data]');\\n      rootEls.forEach(rootEl => {\\n        callback(rootEl);\\n      });\\n    },\\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\\n      const rootEls = (el || document).querySelectorAll('[x-data]');\\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\\n        callback(rootEl);\\n      });\\n    },\\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\\n      const targetNode = document.querySelector('body');\\n      const observerOptions = {\\n        childList: true,\\n        attributes: true,\\n        subtree: true\\n      };\\n      const observer = new MutationObserver(mutations => {\\n        if (this.pauseMutationObserver) return;\\n\\n        for (let i = 0; i < mutations.length; i++) {\\n          if (mutations[i].addedNodes.length > 0) {\\n            mutations[i].addedNodes.forEach(node => {\\n              // Discard non-element nodes (like line-breaks)\\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\\n              // They will take care of themselves.\\n\\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\\n              this.discoverUninitializedComponents(el => {\\n                this.initializeComponent(el);\\n              }, node.parentElement);\\n            });\\n          }\\n        }\\n      });\\n      observer.observe(targetNode, observerOptions);\\n    },\\n    initializeComponent: function initializeComponent(el) {\\n      if (!el.__x) {\\n        // Wrap in a try/catch so that we don't prevent other components\\n        // from initializing when one component contains an error.\\n        try {\\n          el.__x = new Component(el);\\n        } catch (error) {\\n          setTimeout(() => {\\n            throw error;\\n          }, 0);\\n        }\\n      }\\n    },\\n    clone: function clone(component, newEl) {\\n      if (!newEl.__x) {\\n        newEl.__x = new Component(newEl, component);\\n      }\\n    },\\n    addMagicProperty: function addMagicProperty(name, callback) {\\n      this.magicProperties[name] = callback;\\n    },\\n    onComponentInitialized: function onComponentInitialized(callback) {\\n      this.onComponentInitializeds.push(callback);\\n    },\\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\\n      this.onBeforeComponentInitializeds.push(callback);\\n    }\\n  };\\n\\n  if (!isTesting()) {\\n    window.Alpine = Alpine;\\n\\n    if (window.deferLoadingAlpine) {\\n      window.deferLoadingAlpine(function () {\\n        window.Alpine.start();\\n      });\\n    } else {\\n      window.Alpine.start();\\n    }\\n  }\\n\\n  return Alpine;\\n\\n})));\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///6\\n\")},function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\n(function () {\\n  var PolyfillEvent = eventConstructor();\\n\\n  function eventConstructor() {\\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent; // IE<=9 Support\\n\\n    function CustomEvent(event, params) {\\n      params = params || {\\n        bubbles: false,\\n        cancelable: false,\\n        detail: undefined\\n      };\\n      var evt = document.createEvent(\\'CustomEvent\\');\\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\\n      return evt;\\n    }\\n\\n    CustomEvent.prototype = window.Event.prototype;\\n    return CustomEvent;\\n  }\\n\\n  function buildHiddenInput(name, value) {\\n    var input = document.createElement(\"input\");\\n    input.type = \"hidden\";\\n    input.name = name;\\n    input.value = value;\\n    return input;\\n  }\\n\\n  function handleClick(element) {\\n    var to = element.getAttribute(\"data-to\"),\\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\\n        form = document.createElement(\"form\"),\\n        target = element.getAttribute(\"target\");\\n    form.method = element.getAttribute(\"data-method\") === \"get\" ? \"get\" : \"post\";\\n    form.action = to;\\n    form.style.display = \"hidden\";\\n    if (target) form.target = target;\\n    form.appendChild(csrf);\\n    form.appendChild(method);\\n    document.body.appendChild(form);\\n    form.submit();\\n  }\\n\\n  window.addEventListener(\"click\", function (e) {\\n    var element = e.target;\\n\\n    while (element && element.getAttribute) {\\n      var phoenixLinkEvent = new PolyfillEvent(\\'phoenix.link.click\\', {\\n        \"bubbles\": true,\\n        \"cancelable\": true\\n      });\\n\\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\\n        e.preventDefault();\\n        e.stopImmediatePropagation();\\n        return false;\\n      }\\n\\n      if (element.getAttribute(\"data-method\")) {\\n        handleClick(element);\\n        e.preventDefault();\\n        return false;\\n      } else {\\n        element = element.parentNode;\\n      }\\n    }\\n  }, false);\\n  window.addEventListener(\\'phoenix.link.click\\', function (e) {\\n    var message = e.target.getAttribute(\"data-confirm\");\\n\\n    if (message && !window.confirm(message)) {\\n      e.preventDefault();\\n    }\\n  }, false);\\n})();//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9hbGVhay9zcmMvZmVlZGV4L2RlcHMvcGhvZW5peF9odG1sL3ByaXYvc3RhdGljL3Bob2VuaXhfaHRtbC5qcz9lMDQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBQb2x5ZmlsbEV2ZW50ID0gZXZlbnRDb25zdHJ1Y3RvcigpO1xuXG4gIGZ1bmN0aW9uIGV2ZW50Q29uc3RydWN0b3IoKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHdpbmRvdy5DdXN0b21FdmVudDtcbiAgICAvLyBJRTw9OSBTdXBwb3J0XG4gICAgZnVuY3Rpb24gQ3VzdG9tRXZlbnQoZXZlbnQsIHBhcmFtcykge1xuICAgICAgcGFyYW1zID0gcGFyYW1zIHx8IHtidWJibGVzOiBmYWxzZSwgY2FuY2VsYWJsZTogZmFsc2UsIGRldGFpbDogdW5kZWZpbmVkfTtcbiAgICAgIHZhciBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnQ3VzdG9tRXZlbnQnKTtcbiAgICAgIGV2dC5pbml0Q3VzdG9tRXZlbnQoZXZlbnQsIHBhcmFtcy5idWJibGVzLCBwYXJhbXMuY2FuY2VsYWJsZSwgcGFyYW1zLmRldGFpbCk7XG4gICAgICByZXR1cm4gZXZ0O1xuICAgIH1cbiAgICBDdXN0b21FdmVudC5wcm90b3R5cGUgPSB3aW5kb3cuRXZlbnQucHJvdG90eXBlO1xuICAgIHJldHVybiBDdXN0b21FdmVudDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJ1aWxkSGlkZGVuSW5wdXQobmFtZSwgdmFsdWUpIHtcbiAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaW5wdXQudHlwZSA9IFwiaGlkZGVuXCI7XG4gICAgaW5wdXQubmFtZSA9IG5hbWU7XG4gICAgaW5wdXQudmFsdWUgPSB2YWx1ZTtcbiAgICByZXR1cm4gaW5wdXQ7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVDbGljayhlbGVtZW50KSB7XG4gICAgdmFyIHRvID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXRvXCIpLFxuICAgICAgICBtZXRob2QgPSBidWlsZEhpZGRlbklucHV0KFwiX21ldGhvZFwiLCBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtbWV0aG9kXCIpKSxcbiAgICAgICAgY3NyZiA9IGJ1aWxkSGlkZGVuSW5wdXQoXCJfY3NyZl90b2tlblwiLCBlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtY3NyZlwiKSksXG4gICAgICAgIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKSxcbiAgICAgICAgdGFyZ2V0ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJ0YXJnZXRcIik7XG5cbiAgICBmb3JtLm1ldGhvZCA9IChlbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtbWV0aG9kXCIpID09PSBcImdldFwiKSA/IFwiZ2V0XCIgOiBcInBvc3RcIjtcbiAgICBmb3JtLmFjdGlvbiA9IHRvO1xuICAgIGZvcm0uc3R5bGUuZGlzcGxheSA9IFwiaGlkZGVuXCI7XG5cbiAgICBpZiAodGFyZ2V0KSBmb3JtLnRhcmdldCA9IHRhcmdldDtcblxuICAgIGZvcm0uYXBwZW5kQ2hpbGQoY3NyZik7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChtZXRob2QpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgZm9ybS5zdWJtaXQoKTtcbiAgfVxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oZSkge1xuICAgIHZhciBlbGVtZW50ID0gZS50YXJnZXQ7XG5cbiAgICB3aGlsZSAoZWxlbWVudCAmJiBlbGVtZW50LmdldEF0dHJpYnV0ZSkge1xuICAgICAgdmFyIHBob2VuaXhMaW5rRXZlbnQgPSBuZXcgUG9seWZpbGxFdmVudCgncGhvZW5peC5saW5rLmNsaWNrJywge1xuICAgICAgICBcImJ1YmJsZXNcIjogdHJ1ZSwgXCJjYW5jZWxhYmxlXCI6IHRydWVcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIWVsZW1lbnQuZGlzcGF0Y2hFdmVudChwaG9lbml4TGlua0V2ZW50KSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1tZXRob2RcIikpIHtcbiAgICAgICAgaGFuZGxlQ2xpY2soZWxlbWVudCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIGZhbHNlKTtcblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncGhvZW5peC5saW5rLmNsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgbWVzc2FnZSA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtY29uZmlybVwiKTtcbiAgICBpZihtZXNzYWdlICYmICF3aW5kb3cuY29uZmlybShtZXNzYWdlKSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfSwgZmFsc2UpO1xufSkoKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFNQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///7\\n')}]);","extractedComments":[]}